Notebook[{

Cell[CellGroupData[{
Cell["Notebook Tools", "CodeSection",
 CellChangeTimes->{{3.6853652597480164`*^9, 
  3.6853652617639227`*^9}},ExpressionUUID->"7b2da0b8-80cd-404d-9e95-\
2f08fb05b7cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"PackageFEHiddenBlock", "["}], "*)"}], "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"$CompressionIcon", "::", "usage"}], "=", "\n", "\t", "\t", 
     "\"\<The icon to use when creating compressed expressions\>\""}], ";"}], 
   "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"SummarizedForm", "::", "usage"}], "=", 
     "\"\<Summarizes an expression in a summary box\>\""}], ";"}], "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"IconForm", "::", "usage"}], "=", 
     "\"\<Formats an expression inside an interpretation frame\>\""}], ";"}], 
   "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"CompressedForm", "::", "usage"}], "=", "\n", "\t", "\t", 
     "\"\<Compresses an expression in either a summarized form or icon form\>\
\""}], ";"}], "\n", "\t", 
   RowBox[{"(*", "]", "*)"}]}]}]], "CodeInput",
 CellChangeTimes->{{3.690056722164607*^9, 3.6900567411007338`*^9}, 
   3.6984387522660313`*^9, {3.711850247767578*^9, 3.711850269161654*^9}, {
   3.73066888755294*^9, 
   3.73066889055617*^9}},ExpressionUUID->"34b11548-fb62-48ea-9f3c-\
33bfe7b82659"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"StoreExpression", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Prints a cell from which the data can be revived\>\""}], 
  ";"}]], "CodeInput",
 CellChangeTimes->{{3.6896942348025293`*^9, 3.689694315637694*^9}, {
   3.689877010443013*^9, 3.689877028007533*^9}, 3.689878596091197*^9, {
   3.690053716545508*^9, 3.69005371855231*^9}, 3.6900537532804117`*^9, 
   3.698438748009245*^9},ExpressionUUID->"9a71bbd6-6373-4c80-b51c-\
b4a7659d61fa"],

Cell[BoxData[
 RowBox[{"PackageScopeBlock", "[", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"CompileNotebook", "::", "usage"}], "=", "\n", "\t", "\t", 
    "\"\<Compiles a notebook and resource references into a single document\>\
\""}], ";", "\n", "\t", 
   RowBox[{
    RowBox[{"GenerateNewPackage", "::", "usage"}], "=", "\n", "\t", "\t", 
    "\"\<Opens a new package file template\>\""}], ";", "\n", "\t", 
   RowBox[{
    RowBox[{"GenerateCodePackage", "::", "usage"}], "=", "\n", "\t", "\t", 
    "\"\<Copies a package file to a notebook and styles it as a CodePackage\>\
\""}], ";", "\n", "\t", 
   RowBox[{
    RowBox[{"CleanStyledNotebook", "::", "usage"}], "=", "\n", "\t", "\t", 
    "\"\<Generates a notebook where no personalized styling is used\>\""}], 
   ";", "\n", "\t", 
   RowBox[{
    RowBox[{"$CleanStylingRules", "::", "usage"}], "=", "\n", "\t", "\t", 
    "\"\<Maps styles to their simplified versions\>\""}], ";"}], "\n", "\t", 
  "]"}]], "CodeInput",
 CellChangeTimes->{{3.685365262845188*^9, 3.685365317283337*^9}, {
   3.685367240243114*^9, 3.685367243982334*^9}, {3.685368220196594*^9, 
   3.685368225284685*^9}, {3.6853696503490353`*^9, 3.685369655105554*^9}, 
   3.6863476435026073`*^9, {3.687226106770697*^9, 3.68722612614435*^9}, {
   3.6872264526376*^9, 3.687226472064781*^9}, {3.689511355567521*^9, 
   3.689511424086164*^9}, 3.689694233861085*^9, 3.690056432201894*^9, {
   3.698438731285736*^9, 3.698438745808154*^9}, {3.704472274590925*^9, 
   3.704472278238071*^9}, {3.7118502226543207`*^9, 3.711850231531352*^9}, {
   3.7118502769321527`*^9, 3.711850277442401*^9}, {3.711850392089974*^9, 
   3.711850392641564*^9}, 
   3.7128407783847523`*^9},ExpressionUUID->"e931354f-1f49-42db-8b8e-\
ea0e669d0a33"],

Cell[BoxData[
 RowBox[{"PackageScopeBlock", "[", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDockedCells", "::", "usage"}], "=", 
    "\"\<Sets the docked cells of a notebook\>\""}], ";", "\n", "\t", 
   RowBox[{
    RowBox[{"EditDockedCells", "::", "usage"}], "=", "\n", "\t", "\t", 
    "\"\<Applies the specified function to the expressions in the docked \
cells\>\""}], ";", "\n", "\t", 
   RowBox[{
    RowBox[{"ClearDockedCells", "::", "usage"}], "=", 
    "\"\<Clears the docked cells for the notebook\>\""}], ";", "\n", "\t", 
   RowBox[{
    RowBox[{"SetToolbar", "::", "usage"}], "=", 
    "\"\<Sets a toolbar found by FEResourceFind\>\""}], ";", "\n", "\t", 
   RowBox[{
    RowBox[{"AvailableToolbars", "::", "usage"}], "=", 
    "\"\<Alias for FEResourceFind\>\""}], ";", "\n", "\t", 
   RowBox[{
    RowBox[{"SelectAbove", "::", "usage"}], "=", 
    "\"\<Selects cells above a given cell\>\""}], ";", "\n", "\t", 
   RowBox[{
    RowBox[{"SelectBelow", "::", "usage"}], "=", 
    "\"\<Selects cells below a given cell\>\""}], ";", "\n", "\t", 
   RowBox[{
    RowBox[{"EvaluateAbove", "::", "usage"}], "=", 
    "\"\<Evaluates cells above a given cell\>\""}], ";", "\n", "\t", 
   RowBox[{
    RowBox[{"EvaluateBelow", "::", "usage"}], "=", 
    "\"\<Evaluates cells below a given cell\>\""}], ";"}], "\n", "\t", 
  "]"}]], "CodeInput",
 CellChangeTimes->{{3.68634722596699*^9, 3.6863472529094267`*^9}, {
   3.686347444339965*^9, 3.6863474547776546`*^9}, 3.686347650967567*^9, 
   3.6866627472236557`*^9, 3.711850226049848*^9, {3.7118502919928226`*^9, 
   3.711850313416868*^9}},ExpressionUUID->"07887bf4-7c78-446a-893f-\
4d5ca9ff761a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NotebookSaveRename", "::", "usage"}], "=", 
   "\"\<Uses save rename on a file / notebook\>\""}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.692457055052446*^9, 3.692457076128281*^9}, {
  3.6924571805947437`*^9, 
  3.692457182021221*^9}},ExpressionUUID->"3eaa3123-fcec-44c4-a934-\
b7c1595431bf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PaletteTemplateNotebook", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Generates a palette template notebook\>\""}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.705191908890929*^9, 
  3.705191926742305*^9}},ExpressionUUID->"0d92beb0-0816-402a-8174-\
f4929b46623d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"d0007923-2ce9-430e-9ae0-\
6eb51421bd25"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Blob Forms\[RightFloor]", "CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.698438649468438*^9, 3.698438653403203*^9}, {
  3.6991987842344437`*^9, 
  3.699198785160369*^9}},ExpressionUUID->"7fb09217-5fcc-4345-bc47-\
45c28afa964d"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]SummarizedForm\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.698438656833288*^9, 
  3.698438659027114*^9}},ExpressionUUID->"5aee55fe-316c-4a06-9823-\
f930a5f88aa4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SummarizedForm", "[", "\n", "\t", 
    RowBox[{"expr_", ",", "\n", "\t", 
     RowBox[{"head", ":", 
      RowBox[{"_String", "|", "Automatic"}], ":", "Automatic"}], ",", "\n", 
     "\t", 
     RowBox[{"graphic", ":", 
      RowBox[{"Except", "[", "_List", "]"}], ":", "None"}], ",", "\n", "\t", 
     RowBox[{"alwaysView", ":", 
      RowBox[{"_List", "|", "_Function"}], ":", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"expandedView", ":", 
      RowBox[{"_List", "|", "_Function"}], ":", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"template", ":", 
      RowBox[{"_Association", "|", "_List", "|", "Automatic"}], ":", 
      "Automatic"}]}], "\n", "\t", "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{"driver", "=", "\n", "\t\t\t", 
       RowBox[{"Association", "@", 
        RowBox[{"Replace", "[", 
         RowBox[{"template", ",", "\n", "\t", "\t", "\t\t", 
          RowBox[{"Automatic", ":>", "\n", "\t", "\t", "\t\t\t", 
           RowBox[{"Replace", "[", 
            RowBox[{"expr", ",", 
             RowBox[{"{", "\n", "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"_", "[", "a_Association", "]"}], "\[RuleDelayed]", 
                "a"}], ",", "\n", "\t\t\t\t\t\t", 
               RowBox[{"_", "\[Rule]", 
                RowBox[{"<|", "|>"}]}]}], "\n", "\t\t\t\t\t\t", "}"}]}], 
            "]"}]}]}], "\n", "\t\t\t\t", "]"}]}]}], "}"}], ",", "\n", "\t\t", 
     
     RowBox[{"RawBoxes", "@", "\n", "\t\t\t", 
      RowBox[{"BoxForm`ArrangeSummaryBox", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"Replace", "[", 
         RowBox[{"head", ",", 
          RowBox[{"Automatic", "\[RuleDelayed]", 
           RowBox[{"ToString", "@", 
            RowBox[{"Head", "[", "expr", "]"}]}]}]}], "]"}], ",", "\n", 
        "\t\t\t  ", "expr", ",", " ", "\n", "\t\t\t  ", "graphic", ",", "\n", 
        "\t\t\t\t", 
        RowBox[{"Replace", "[", 
         RowBox[{"alwaysView", ",", 
          RowBox[{"{", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"f_Function", ":>", "\n", "\t\t\t\t\t\t", 
             RowBox[{"f", "@", "driver"}]}], ",", "\n", "\t\t\t\t\t", 
            RowBox[{"l_List", "\[RuleDelayed]", "\n", "\t\t\t\t\t\t", 
             RowBox[{"Replace", "[", 
              RowBox[{"l", ",", 
               RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Key", "[", "k_", "]"}], ":>", "\n", 
                  "\t\t\t\t\t\t\t\t", 
                  RowBox[{
                  "BoxForm`MakeSummaryItem", "[", "\n", "\t\t\t\t\t   \t\t\t", 
                   RowBox[{
                    RowBox[{"{", "\n", "\t\t\t\t\t   \t\t\t\t", 
                    RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "\"\<: \>\""}], "}"}]}], ",", "\n", 
                    "\t\t\t\t\t   \t\t\t\t", 
                    RowBox[{"k", "/.", 
                    RowBox[{"KeyMap", "[", 
                    RowBox[{"Key", ",", "driver"}], "]"}]}]}], "\n", 
                    "\t\t\t\t\t   \t\t\t\t", "}"}], ",", "\n", 
                    "\t\t   \t\t\t\t\t\t", "StandardForm"}], "]"}]}], ",", 
                 "\n", "\t\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"Rule", "|", "RuleDelayed"}], ")"}], "[", 
                   RowBox[{"t_", ",", "k_"}], "]"}], ":>", "\n", 
                  "\t\t   \t\t\t\t\t", 
                  RowBox[{
                  "BoxForm`MakeSummaryItem", "[", "\n", "\t\t\t\t\t   \t\t\t", 
                   RowBox[{
                    RowBox[{"{", "\n", "\t\t\t\t\t   \t\t\t\t", 
                    RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "\"\<: \>\""}], "}"}]}], ",", "\n", 
                    "\t\t\t\t\t   \t\t\t\t", 
                    RowBox[{"k", "/.", 
                    RowBox[{"KeyMap", "[", 
                    RowBox[{"Key", ",", "driver"}], "]"}]}]}], "\n", 
                    "\t\t\t\t\t   \t\t\t\t", "}"}], ",", "\n", 
                    "\t\t   \t\t\t\t\t\t", "StandardForm"}], "]"}]}]}], "\n", 
                "\t\t   \t\t\t\t", "}"}], ",", "\n", "\t\t   \t\t\t\t", "1"}],
               "]"}]}]}], "\n", "\t\t   \t\t", "}"}]}], "]"}], ",", "\n", 
        "\t\t\t   ", 
        RowBox[{"Replace", "[", 
         RowBox[{"expandedView", ",", 
          RowBox[{"{", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"f_Function", ":>", "\n", "\t\t\t\t\t\t", 
             RowBox[{"f", "@", "driver"}]}], ",", "\n", "\t\t\t\t\t", 
            RowBox[{"l_List", "\[RuleDelayed]", "\n", "\t\t\t\t\t\t", 
             RowBox[{"Replace", "[", 
              RowBox[{"l", ",", 
               RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Key", "[", "k_", "]"}], ":>", "\n", 
                  "\t\t\t\t\t\t\t\t", 
                  RowBox[{
                  "BoxForm`MakeSummaryItem", "[", "\n", "\t\t\t\t\t   \t\t\t", 
                   RowBox[{
                    RowBox[{"{", "\n", "\t\t\t\t\t   \t\t\t\t", 
                    RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "\"\<: \>\""}], "}"}]}], ",", "\n", 
                    "\t\t\t\t\t   \t\t\t\t", 
                    RowBox[{"k", "/.", 
                    RowBox[{"KeyMap", "[", 
                    RowBox[{"Key", ",", "driver"}], "]"}]}]}], "\n", 
                    "\t\t\t\t\t   \t\t\t\t", "}"}], ",", "\n", 
                    "\t\t   \t\t\t\t\t\t", "StandardForm"}], "]"}]}], ",", 
                 "\n", "\t\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"Rule", "|", "RuleDelayed"}], ")"}], "[", 
                   RowBox[{"t_", ",", "k_"}], "]"}], ":>", "\n", 
                  "\t\t   \t\t\t\t\t", 
                  RowBox[{
                  "BoxForm`MakeSummaryItem", "[", "\n", "\t\t\t\t\t   \t\t\t", 
                   RowBox[{
                    RowBox[{"{", "\n", "\t\t\t\t\t   \t\t\t\t", 
                    RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "\"\<: \>\""}], "}"}]}], ",", "\n", 
                    "\t\t\t\t\t   \t\t\t\t", 
                    RowBox[{"k", "/.", 
                    RowBox[{"KeyMap", "[", 
                    RowBox[{"Key", ",", "driver"}], "]"}]}]}], "\n", 
                    "\t\t\t\t\t   \t\t\t\t", "}"}], ",", "\n", 
                    "\t\t   \t\t\t\t\t\t", "StandardForm"}], "]"}]}]}], "\n", 
                "\t\t   \t\t\t\t", "}"}], ",", "\n", "\t\t   \t\t\t\t", "1"}],
               "]"}]}]}], "\n", "\t\t   \t\t", "}"}]}], "]"}], ",", "\n", 
        "\t", "\t\t   ", "StandardForm"}], "\n", "\t", "\t\t   ", "]"}]}]}], 
    "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SummarizedForm", "~", "SetAttributes", "~", "HoldAll"}], ";"}], 
   "*)"}]}]}], "CodeInput",
 CellChangeTimes->{{3.689694323702011*^9, 3.689694345162805*^9}, {
   3.689694523820763*^9, 3.6896945442897587`*^9}, {3.689694695965513*^9, 
   3.689694710199852*^9}, {3.689694841148572*^9, 3.689695078256775*^9}, {
   3.68969539410461*^9, 3.689695402801669*^9}, {3.6900057305210247`*^9, 
   3.690005817899727*^9}, {3.690056750122583*^9, 3.690056776681098*^9}, {
   3.698421914718638*^9, 3.698421919317665*^9}, {3.6984219801398067`*^9, 
   3.69842204545226*^9}, {3.698422091761859*^9, 3.6984220977459097`*^9}, 
   3.698437966508333*^9, {3.6984380161341267`*^9, 3.6984381630346622`*^9}, {
   3.698438326911627*^9, 3.698438630358811*^9}, {3.698439223372437*^9, 
   3.698439228429636*^9}, {3.698453067928525*^9, 
   3.698453109823567*^9}},ExpressionUUID->"b9435e28-dd42-4ff0-aa9b-\
0e4baf04ecec"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]IconForm\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.698438665451869*^9, 
  3.69843866644293*^9}},ExpressionUUID->"39d88719-b768-4698-9a3a-\
2cc0b357ba29"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "IconForm", "]"}], "=", "\n", "\t", 
   RowBox[{"Join", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Framed", "\[Rule]", "True"}], ",", "\n", "\t\t\t", 
       RowBox[{"\"\<IconFrameOptions\>\"", "\[Rule]", "Automatic"}], ",", 
       "\n", "\t\t\t", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"24", ",", "24"}], "}"}]}]}], "\n", "\t\t\t", "}"}], ",", 
     "\n", "\t\t", 
     RowBox[{"Options", "@", "Framed"}], ",", "\n", "\t\t", 
     RowBox[{"Options", "@", "Style"}]}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"IconForm", "[", "\n", "\t\t", 
    RowBox[{"expr_", ",", "\n", "\t\t", "iconExpr_", ",", "\n", "\t\t", 
     RowBox[{"infoSpec", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"_List", "|", "_Rule", "|", "_RuleDelayed"}], ")"}], "..."}],
        "}"}], ":", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", "\t", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"icon", "=", "\n", "\t\t", 
        RowBox[{"Replace", "[", 
         RowBox[{"iconExpr", ",", "\n", "\t\t\t", 
          RowBox[{"{", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"i_Image", ":>", 
             RowBox[{"Image", "[", 
              RowBox[{"i", ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"OptionValue", "@", "ImageSize"}]}]}], "]"}]}], ",", 
            "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"g", ":", 
              RowBox[{"_Graphics", "|", "_Graphics3D"}]}], "\[RuleDelayed]", 
             RowBox[{"Show", "[", 
              RowBox[{"g", ",", 
               RowBox[{"ImageSize", "->", 
                RowBox[{"OptionValue", "@", "ImageSize"}]}]}], "]"}]}], ",", 
            "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"e", ":", 
              RowBox[{"Except", "[", "None", "]"}]}], "\[RuleDelayed]", 
             RowBox[{"Pane", "[", 
              RowBox[{"e", ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"OptionValue", "@", "ImageSize"}]}], ",", 
               RowBox[{
               "ImageSizeAction", "\[Rule]", "\"\<ShrinkToFit\>\""}]}], 
              "]"}]}]}], "\n", "\t\t\t\t", "}"}]}], "]"}]}], ",", "\n", 
       "\t\t", 
       RowBox[{"info", "=", "\n", "\t\t\t", 
        RowBox[{"Replace", "[", 
         RowBox[{"infoSpec", ",", 
          RowBox[{"{", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Rule", "|", "RuleDelayed"}], ")"}], "[", 
             RowBox[{"k_", ",", "v_"}], "]"}], "\[RuleDelayed]", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"k", ",", "\n", "\t\t\t\t\t\t", 
              RowBox[{"Replace", "[", 
               RowBox[{"expr", ",", 
                RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", ":", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_Rule", "|", "_RuleDelayed"}], ")"}], ".."}], 
                    "}"}], "|", "_Association"}]}], ")"}], "|", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"_", "[", 
                    RowBox[{"a", ":", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_Rule", "|", "_RuleDelayed"}], ")"}], ".."}], 
                    "}"}], "|", "_Association"}]}], "]"}]}], ":>", "\n", 
                   "\t\t\t\t\t\t\t\t", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Hold", "[", "v", "]"}], "/.", "a"}], "//", 
                    "ReleaseHold"}], ")"}]}], ",", "\n", "\t\t\t\t\t\t\t", 
                  RowBox[{"_", ":>", "v"}]}], "\n", "\t\t\t\t\t\t\t", "}"}]}],
                "]"}]}], "\n", "\t\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", 
           "}"}], ",", "\t\t\t", "\n", "\t\t\t\t", "1"}], "]"}]}]}], "\n", 
      "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{"Interpretation", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Framed", "[", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t\t\t", 
             RowBox[{"Join", "[", "\n", "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"icon", "=!=", "None"}], ",", "\n", "\t\t\t\t\t\t\t", 
                 RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"OptionValue", "@", "Framed"}], ",", "\n", "\t", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{"Framed", "[", "\n", "\t", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"icon", ",", "\n", "\t", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "FilterRules", "[", "\n", "\t", "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    "Replace", "[", "\n", "\t", "\t\t\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    "OptionValue", "[", "\"\<IconFrameOptions\>\"", "]"}], 
                    ",", "\n", "\t", "\t\t\t\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Except", "[", "_List", "]"}], "\[RuleDelayed]", 
                    RowBox[{"{", "}"}]}]}], "\n", "\t", 
                    "\t\t\t\t\t\t\t\t\t\t\t\t", "]"}], ",", "\n", "\t", 
                    "\t\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"Options", "@", "Framed"}]}], "\n", "\t", 
                    "\t\t\t\t\t\t\t\t\t\t", "]"}], ",", "\n", "\t", 
                    "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"Background", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", ".95", "]"}]}], ",", "\n", "\t",
                     "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"RoundingRadius", "\[Rule]", "5"}], ",", "\n", 
                    "\t", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", ".8", "]"}]}]}], "\n", 
                    "\t\t\t\t\t\t\t\t\t\t", "]"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t\t", "icon"}], "\n", 
                   "\t\t\t\t\t\t\t\t\t", "]"}], "\n", "\t\t\t\t\t\t\t\t", 
                  "}"}], ",", "\n", "\t\t\t\t\t\t\t", 
                 RowBox[{"{", "}"}]}], "\n", "\t\t\t\t\t\t\t", "]"}], ",", 
               "\n", "\t\t\t\t\t\t", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "@", "info"}], ">", "0"}], ",", "\n", 
                 "\t\t\t\t\t\t\t", 
                 RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"Spacer", "[", "5", "]"}], ",", "\n", 
                   "\t\t\t\t\t\t\t\t", 
                   RowBox[{"Style", "[", "\n", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Grid", "[", "\n", "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"info", ",", "\n", "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"Spacings", "\[Rule]", "0"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"Alignment", "\[Rule]", "Left"}]}], "\n", 
                    "\t\t\t\t\t\t\t\t\t\t", "]"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t\t", "\"\<Text\>\"", ",", "\n", 
                    "\t\t\t\t\t\t\t\t\t", "10", ",", "\n", 
                    "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"TextAlignment", "\[Rule]", "Left"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"ShowStringCharacters", "\[Rule]", "False"}], ",",
                     "\n", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "ops", "}"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"Alternatives", "@@", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    RowBox[{"First", "/@", 
                    RowBox[{"Options", "@", "Style"}]}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t\t\t\t\t", "Background"}], "\n", 
                    "\t\t\t\t\t\t\t\t\t\t\t\t", "]"}]}]}], "\n", 
                    "\t\t\t\t\t\t\t\t\t\t", "]"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"FontColor", "\[Rule]", "Gray"}]}], "\n", 
                    "\t\t\t\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t\t\t\t", 
                  "}"}], ",", "\n", "\t\t\t\t\t\t\t", 
                 RowBox[{"{", "}"}]}], "\n", "\t\t\t\t\t\t\t", "]"}]}], "\n", 
              "\t\t\t\t\t\t", "]"}], "\n", "\t\t\t\t\t", "}"}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"Spacings", "\[Rule]", "0"}], ",", "\n", "\t\t\t\t\t", 
            RowBox[{"Alignment", "\[Rule]", "Center"}]}], "\n", "\t\t\t\t\t", 
           "]"}], ",", "\n", "\t\t\t\t", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "ops", "}"}], ",", 
            RowBox[{"Options", "@", "Framed"}]}], "]"}], ",", "\n", 
          "\t\t\t\t", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.9657", ",", " ", "0.9753", ",", " ", "0.9802"}], 
            "]"}]}], ",", "\n", "\t\t\t\t", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"GrayLevel", "[", ".85", "]"}]}], ",", "\n", "\t\t\t\t", 
          RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "\n", "\t\t\t\t", 
         "]"}], "//", "Deploy"}], ",", "\n", "\t\t\t\t", "expr"}], "\n", 
      "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"IconForm", "~", "SetAttributes", "~", "HoldFirst"}], 
  ";"}]}], "CodeInput",
 CellChangeTimes->{{3.690048626728397*^9, 3.690048736903688*^9}, {
   3.6900487700156384`*^9, 3.690048899961732*^9}, {3.6900489378050537`*^9, 
   3.690048969584399*^9}, {3.690049086916236*^9, 3.690049145537599*^9}, {
   3.690049209128571*^9, 3.6900492762785*^9}, {3.69004931908033*^9, 
   3.690049438571097*^9}, {3.690049508844289*^9, 3.690049575543963*^9}, {
   3.6900496752689877`*^9, 3.6900497099387007`*^9}, {3.690049955629685*^9, 
   3.6900501670345373`*^9}, {3.690050220333055*^9, 3.690050274649129*^9}, {
   3.690050306984963*^9, 3.6900503755018578`*^9}, {3.6900507049820223`*^9, 
   3.6900509291326237`*^9}, {3.690050994061736*^9, 3.690051012210326*^9}, {
   3.6900510442499247`*^9, 3.690051048794734*^9}, {3.690051153806099*^9, 
   3.6900512435141897`*^9}, {3.690051281089838*^9, 3.6900513129613247`*^9}, {
   3.690051368489558*^9, 3.6900513831619043`*^9}, {3.6900514847172728`*^9, 
   3.690051516891371*^9}, {3.6900516488285227`*^9, 3.690051658667385*^9}, 
   3.690051746609127*^9, {3.690051806134548*^9, 3.6900518141732807`*^9}, {
   3.690051845164565*^9, 3.6900518494265223`*^9}, {3.6900519860508747`*^9, 
   3.6900520309394007`*^9}, {3.690052344625146*^9, 3.6900523737105103`*^9}, {
   3.690052428178873*^9, 3.6900524809951267`*^9}, {3.690052520249981*^9, 
   3.690052567352141*^9}, {3.690052679413787*^9, 3.6900527755469313`*^9}, {
   3.690052849585779*^9, 3.690052877459126*^9}, {3.690052911135601*^9, 
   3.690052929214539*^9}, {3.6900529679458733`*^9, 3.690052972049749*^9}, {
   3.690053064517912*^9, 3.690053165673929*^9}, {3.690053255935545*^9, 
   3.690053262614633*^9}, {3.690053503492824*^9, 3.6900535075262117`*^9}, {
   3.690053816740954*^9, 3.690054107893075*^9}, {3.6900541813374987`*^9, 
   3.690054187501072*^9}, {3.6900563138943043`*^9, 3.690056382290536*^9}, {
   3.690058195122407*^9, 3.6900582172913923`*^9}, {3.690058408953959*^9, 
   3.690058422817512*^9}, {3.690058497606235*^9, 3.690058526174951*^9}, {
   3.6900589030127487`*^9, 3.690058905979764*^9}, {3.690562932958968*^9, 
   3.690563105856303*^9}, {3.6905635285631332`*^9, 3.690563547024178*^9}, {
   3.6905636378337584`*^9, 3.690563641717263*^9}, {3.690563806086586*^9, 
   3.690563867522009*^9}, 3.690563937364245*^9, {3.690564045435391*^9, 
   3.690564047615858*^9}, 3.690564114949874*^9, {3.690582388832306*^9, 
   3.6905823891744328`*^9}, {3.700422998575405*^9, 
   3.7004230001197*^9}},ExpressionUUID->"e2dbbaf8-dc1e-4789-88c7-02ec794834a1"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]$CompressionIcon\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.690068637867628*^9, 
  3.690068642194309*^9}},ExpressionUUID->"72be7f60-36f2-4ffd-a02e-\
c0c64a5c3b93"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"EdgeForm", "[", 
      RowBox[{"Directive", "[", 
       RowBox[{"Thin", ",", 
        RowBox[{"GrayLevel", "[", ".7", "]"}]}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GrayLevel", "[", ".95", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Rectangle", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2.5"}], ",", 
         RowBox[{"-", "2.5"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"2.5", ",", "2.5"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Thickness", "[", ".05", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Arrowheads", "@", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{".15", ",", "Automatic", ",", "arrow"}], "}"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EdgeForm", "@", "Black"}], ",", "\[IndentingNewLine]", 
       RowBox[{"GrayLevel", "[", ".8", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "1.5"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Thread", "[", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Darker", "/@", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Arrow", "/@", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{"p", ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"p", ",", "\[IndentingNewLine]", 
             RowBox[{"Thread", "[", "\[IndentingNewLine]", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"CirclePoints", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2.25", ",", 
                    RowBox[{
                    RowBox[{"\[Pi]", "/", "3"}], "+", 
                    RowBox[{"\[Pi]", "/", "6"}]}]}], "}"}], ",", "3"}], "]"}],
                 ",", "\[IndentingNewLine]", 
                RowBox[{"CirclePoints", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1.2", ",", 
                    RowBox[{
                    RowBox[{"\[Pi]", "/", "3"}], "+", 
                    RowBox[{"\[Pi]", "/", "6"}]}]}], "}"}], ",", "3"}], 
                 "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]",
               "]"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "}"}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], "~", "Graphics", "~", 
   RowBox[{"(", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"32", ",", "32"}], "}"}]}], ")"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.690066450710906*^9, 3.69006681030538*^9}, {
  3.6900668427264147`*^9, 3.690066865629339*^9}, {3.690066940849148*^9, 
  3.6900669466173077`*^9}},ExpressionUUID->"26eb7052-7610-480a-afc7-\
965e884092d0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$CompressionIcon", "=", 
   GraphicsBox[
    {GrayLevel[0.95], EdgeForm[{GrayLevel[0.7], Thickness[Tiny]}], 
     RectangleBox[{-2.5, -2.5}, {2.5, 2.5}], 
     {Thickness[0.05], Arrowheads[{{0.15, Automatic, 
         GraphicsBox[
          TagBox[
           PolygonBox[
            NCache[{{0, 
               Rational[1, 2]}, {1, 0}, {0, 
               Rational[-1, 2]}}, {{0, 0.5}, {1, 0}, {0, -0.5}}]], 
           "Triangle"]]}}], 
      {GrayLevel[0.8], EdgeForm[GrayLevel[0]], DiskBox[{0, 0}, 1.5]}, {
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 0], 
        ArrowBox[{{1.3777276490407724`*^-16, 2.25}, {7.347880794884119*^-17, 
         1.2}}]}, 
       {RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0], 
        ArrowBox[{{-1.9485571585149875`, -1.1249999999999993`}, \
{-1.0392304845413265`, -0.5999999999999996}}]}, 
       {RGBColor[0, 0, 
         NCache[
          Rational[2, 3], 0.6666666666666666]], 
        ArrowBox[{{1.9485571585149863`, -1.1250000000000009`}, {
         1.039230484541326, -0.6000000000000005}}]}}}},
    ImageSize->{32, 32}]}], ";"}], "\n", 
 RowBox[{
  GraphicsBox[{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.035], Opacity[1.], 
      FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$527904#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], Thickness[0.025], Opacity[1.], 
      FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
mPf/AAa41As=
       "]]},
     Annotation[#, "Charting`Private`Tag$527904#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], Thickness[0.015], Opacity[1.], 
      FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
fZeZG4N/Y05znVMyNU/0s1KrZjNTkYMrlWdHKzVPms4bi8ukobjThQCrZhKr
na+d1CpPQ9ayHTVC/0j84pqQEtOcjhdkzFNXKkkcoY9Ijs38QdNryiNrkcRd
U/lzTzfloBON63hvJom2LbdP19zOQaJwyjUpg4rPtbIe0cAc7PsRb3MqhZq/
/wy3lO3JxarxYumWWBLPPL7CWXskD7fzmXKa+lL9x9RlPihbgD/UV6dleJHI
KRsiOeFcgLpKJXbL7iTe7Qs5OFNVgKufjz/S/0zlA4lnozcL0Vh6dULFGxKb
TrDcd9Epwu3TShUTBlT9pzSIhT0vwZ1M1nED+iRKN4jyNfwuwSH+V111uiQK
b5scJqdK0C5yWNxHk+rn0WlxadNS7JQU88hVIrFju5mRjUEZpvMNHww/Rs3n
O9wGGRoV2MYdICd0lMTa5z7Sb70qMOw7d4G7GIkfed7tuFxXgZNH48u0hUnU
i152SVL8i2lbsiBEgETts0wlpy5XInNtt1fyPAN/sxuJmGyuxkou4b/J0wx8
fI1cEThRjdoiC09+jjPwSuam1syb1Zi96uK44xADd2Dxp0X3amwaNufraWTg
qdVCdBmuGix8pvLn4G8G0gYfneBhrsULu332bzdkYNqThpDL/XV45cnZ67n3
qd/PcHAZWF2PLVkh8f9pMTBo0530N8L1ONvQe9ZKjbJGr3/4w3qke6r7KJ9n
YIPjKu+o4Xp8HpCWqcHLwO8P3h9xHmtAfp4k99GfKyiwsmPMntaIhW7WXa8j
VnCHXJLSba4mdBl8H8YasoIOEeZFomJNuG++3HvBYwVftVSWJBo1oeLnnlu2
L6nzUzf7LvPRJjQ5q808fWkFI+GrsPdgM+5lvVXvUrWMK7ZRYsdaWpFh3FZ8
vGQZHzg4rnaab8U87qjsupxlvJOouLVlUxsObFPKnktYRlvaTJO2ahs+jUqF
Lo9llH4ehzwVbXj8rd2u4+rLuPeBTM/on3Z01dz1YaV+CZf+22us59WJph8t
2SIrlvD5y495CYmdeD60p0quYAmX7Xnk56o6cd1nucsvk5aw4THzmOTqLuTX
bmd95baEl7M0SGPowt+PDvauU1jCJx+upXEmdeHGQWGJj38W0bnn5+t87268
nhD1uTtxEW18kwZ7Q7tR4dOm55LRi1gyYr2eKaEbByrWL+f7LuLuJ2luB8u7
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
FA5PyPwfJCqc2w==
       "]]},
     Annotation[#, "Charting`Private`Tag$527904#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], Thickness[0.015], Opacity[1.], 
      FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJw123c8Vn/YB3BSERlFqVS0KEVFaXdVNIyMiIZfVkrIbGc1pKLIzkzKlpkV
Lntn7+x543Yfe7vPc57X83r8w/t1OK/7fK/PdZ3v9w879M2vGa5gYWF5xMbC
8r/f/+9rDP7/J/0DB4SWSALeri6T83A3B5EfCaZjlF91Xnro6m4PrOAx1UbZ
+deXgoFYJ1hOb0jMpfxu3RleB3dXOJlqHx5E+dsD64b3fzyAI/trrTVl29VD
DRWxPtB3UvLIecr7BXfyc33zB0t7+YrVlB0yLvhccA+G53nzfgVMAgRvHpc5
kRcCfcIq315QVqx6UKn0JxT++N5u20tZLVDh6+3kn7CdX1qlapmA4vIxIcPY
cLhwa2TuIeW7Mdb/jMIiwXh7QMtKyu2zI9r3gqNhSUvlnNASAXFGYhlKX+KA
Lfxjkd8iATXs61W3FMaDjOiht+spn4iXk/yYmwBFZ8+FDc8TkLHKOUU7IwlE
WyY4FSnnGeb3Z6ckQ8zP4PDQOQLsgp5zbk36DbtiXD6cmSWAe2PK2aLoVDDh
3l1lN0OARrNx3fqINHhIGFxNmyZgm+/C/Zs/0uGF1rcp/ikCGrIF/esC/oDG
9/LJh2MElOJXq8efEBSSbq60JAi41ZoSXiiXA0TmZRVTBgGx+m7fKvJywMpI
1kuRTsDq830yldm58LREZChmkID3xk7+ASn5sMCxpt5ygIDH9p2v3x4pgOKi
V4uS/QTk/rtnfz+xAE7267K69xAgUPvszPZfhfAnuG98oY2A2Zo9jxR/FoPx
62tlr/4RgOtMozl2lcAntYVullYCvtJGV+R8K4FMeYvqwUYClF7K+W4NKIUl
1ejkG9UEiBiMs310Lwe5jydninIJ8LAT2ilkVwUT7N7W4UjA4nfkX1xRDctG
Um12WQR87GNb0XepGrwjIizXp1P1sXSvC6+shohLz7AijoABvtP7p9tr4Nui
q91nfwLM9Hh/ey3WQemDLLLdlwDmJ76WQ1APd5pln+72JiD7yTupotf14Hrb
RsnbjYAH9+yPd65pAK0968K4Hak8qfy1LhFshKzQ4RpFU6q+L3uL7kk1Q4V2
nRDXAwKETVRlAh43w9WhvAe5hgSwPMsMK0trhlxumw38OgRUDqWcWQ8tQLt4
tVhBjYBPIVHiCoqtIKPv/GjtEQI++4mdUtJvA8GVyTZdEwwY+uSZs+ZiFxzI
vRtdwWCA91Bj0phBF5TeVN+VMMwAdsM/bnWvu2ByfOWkfg8DfoYE0FxyuuDc
vm5J4xoG2Btrnfh7qhtkbVdycPxigCzRFWZ7uAfC9JxFPugxoPF9o4TR5j7Q
+rvT10GbAWxDC7ZZx/rANMPa1kKLAUczjfO5NfvgSquq94mrDCjbNM4b7N4H
2wRKd1seZ8B/Vmfb3nD1g8g2w5Yn3AxQ2a0QrbLUDyHSl/YNJIyC6XUy+U/L
IIR3SC1yxYzCaIKZWsXMIPy9YREvHjYKqqYPDzbx06D6++uya36jIL33gue/
qzQ4e3yg7+rrUThemXI2KJcG5g1XZsdUR+GcbMfqVRFD8N9uUb5pGh1uBrUe
2msxArpZa/ae7KFDqKZUkLXLCNg2B6o/+0cHSeYey7SIEXiWpk7v/EsHlv9K
Dkh2j8Df5lQ17UQ6JNj9PFOqRocR71Ydrhd0KPY070o9PAqHNr5+qbySDieG
3DWv0Blwq3jbE4GlEVDglORazUlAysJel9rJEdA3+MXMEKNyMNfFf6x3BDZ4
tztwGlB1Ff1aF5I7ApVH59mhhQDPjy/3sdiOwIHYHNNFvTEQ0+xUGh8dhvQ2
2pC0/Dj86pU3wL5hkPBUibXTGoe7lvRex3/DUB3p41JgOA4PmmUll0qGYb1Y
0ufzr8epvPkf+hw6DLMxqYdY/oyDQ2/3GQWtYZDa4PHQZf8E7A5b8fxo+hAQ
3G92FnJMAm/L2SP5cUNQSFv6+XrDJGyZEf6mEDYEXK3Xnp/aOQkaAyIelzyG
QGOany341CSYToaKTZoOQaxvoqKE2STQAkeFdggPAdtVq0WD2kl4H+jM1W1H
g7rAbIPdPlOgU7j2ZeQjGpB5piMXQ6fgSpAfzcSYBo015/T046bAqmW0uOM6
DYx0HnO5FE9BHy902BygwWrJdezfZ6fgp172j4DmQbhTeIa9UXMaYu7nZ9sc
GIQQg6oq+XUzwL7uGGuwyCBc8WLsSt82AxIijj4ZAoNwu/Prxp3iM2D82+Rv
+9IASF+RK+26MAP7WUez6ysGgFm0lWXdoxkYuXkt38mEui7u73+iYQZ+PJ3g
EPrRD8185eIe7rOQryf6xcynH14ut789GDQLwr0/Ov587Acd7S88hZGzoNsp
3ixr2Q+hG2xD/+XMgrSWTsyas/3w67nqkxTGLJR56wtaNPZBeWNUu7D8HLwJ
NJfNW9EHSuUZnNFzc7BbqPuB53QvzIuVzB1hm4c2JSs2PVov3PE9MZHKPQ8z
134EDf3tBXujr4sRO+ch2d2iLc23F1rvMDYeU5qHtD0zSdckeuH9kO4IS9A8
5HxM4f98rQemmabKx04vQM3TXc2/5Xrgqum2Pe0XF0DyFe/7Zpke2Hr/WexL
lQXYeLU2nUeoB3joNiXf9Rcgd79KzdnebqgMuNXu+34BJHQ2H0uw6obWDZNH
d9YtwLdYif8WPnVBb4dCtI/+IjT4cdHsHbpgtujfYprxIuim5z1ite6CB9KH
ouqsFoFeX/FtTqsLzGSvbpp+vQhWqnNBqTu6wGm5gY32fREu31i3d8aoE97w
az9w6V6EsJv+++78agfhW/ev5t1cAs5jDIcn7u1Q/kE6kktvCbZvdYx3etIO
svH7xJSNlsDM4UOS59l2WNP4+XX2kyXoeuO9+lZlG9g9fPJOyWMJUlW/1/nQ
/4FV48oLW8upv7f2mOXd3QqS899a7Y4ug98DA8vela1gtFPMzPr0Mpgc2vc2
rr8Fkjo04nVkl0EueIvv4fAWiPUqOS6sRl2nRVh17GuB/YYOu06aLsPx09W5
PRLN0MD+Iqn92zL8SquLrj/UCDHltxsq2Ziw/3xaUAVfIxinC/n/XsOE2Kw3
CtljDVCUvK3Bg5cJcFpp/HN8A/xIOR0sI8SE7jqzlwMHG+Cede5/G6SYEP50
9bsnEvWg5ZC5ReYOE3TOutBv7a6l5k5/+XwcEwJ/s8yVrKqF1pZ0lRfJTGB9
89RZarAGFC86y0ymMaH1cb7RXGQN6L5L21uZywTnq49rVA7WwOSOcIe9dUyI
oRezHTlRDZ5f7vCZTTFhuqhJ+M6Waii8uUX20RwTLqY5vuSYrYKG8LliqyUm
yMd+OPXhZRVI++0tuLGShGqO8g8Sbyth/9R6kxJ+EhzN5St4PCtgtudM8NHD
JBwyGjAfvl4BPuZPXuUcISHg6cBaFKyABYGOMNnjJLg4ZFio+5dDb2VOqhSQ
EPQj01X8exnYfhhuSVIiQcNtIj74VwlY+9TeO3+PBBPn43vXW5RAY0GcoOoD
EiIOKLnZHS6BwrQkpqYpCQq7GRYXk4uBVfOw6VUrEupjR0Q/pRdBheLz+DZb
EkxjCZb1+QVwyEfu3FsPEuKfqv6471gAO9p8RdZ4k8Cn32qQdrkAHkVvevHO
l4QmQxkrxYp8qD9yxts4kISx97T7Jxry4N0bhn5zGHXdyuD9A588MBa+vyQS
SULapeyTXjfzgOejHad+NAn88Wxune25kOxm+PpvHAksx3y+nh/IAefXL2vl
00jQ+17XrxKRA9HbL67QzCDhsdrwiVvGOSDY5vH9ViYJmbqmD4raEMS3NEpd
zSFBNaZ2txs9C+YlaW+biknQyryaWc+ZAWpqKz45NFDr53l/v8PndDBfc9uV
v4mEwWc2b/asT4fCnzqLQc0keD8XMbyzOQ22WU/zBP8jYZlf54CLWApIsT7d
ItdNrV+0xg7O6N/wvP6irl8PdX/GC/pryd9QdpeVe6iXhOHStTaGR5Nhiwur
n/kACff6zHD8QiJo8XQ+3zFCAu9mzp/yRQmQL5PDOEkn4YjWLeVA+QTYVH+h
RGmUhK1mY/rHVePh9bF9ETcJEs4PXOZnCY8D+jDvL40xEqZ8qhqcYn/Bakag
4JVxEurKuSJeZcSAW3ypwKZJEnTZoySncqLhdedc+BTlnnOnN+kWR4HsmYnA
0ikSBlp2rNhTHwGiN18kaM+QcOWzyXO71nAI4Iys3DJLwu5Kr/O1XWHwo6b7
ag1li16nxAejP2ClXaGl2Dz1PGzHOaw7QkFw61HlesrxuezlT6q+A/OgqtSz
BRJWFy5eepwTAiTStvEvkjAnuaXELOEbeGnW8f2k3MPdcKRYLhgcVwxySi6R
cF1+hD9CNBD6NJe5flH+c768W23YF/b++7HTY5nKG0sBy9YKbzhUPH1sjvKG
WdeMzlhPWFVfoq7BJGHpmWJ4oKs7DImvfBJO+dozAR1NSzeIee4WNE5ZOFNg
SiDMBcInbvyVIkn4l+kv8vjBe6hQUlxhQtnKn/VR5YG38DNf64wfZbcWwTNy
XfZwS9DSLofyvTS2kJ57TyHFxaWwnfKzG3G0qdaHsHc0ZP0EZVOvr3eOV9+E
onfRhsuUq1h7Qln2n0PVA2HZJOWFktk7/st38eDRL9vmKYuoFtw4PmeFT2zN
Xg9RvrgjLy7Q8iV2GV4Yrabslz4eaTv9Cuvq+O/EUV57UclKTOod3jxMr39L
ueVsFEu52Ufc8bBJTY3ymomi3fejP+Pzhd56AcrqnQe1lq2/oGLNzjtV1POX
y/jJXHD3wC1m4aMOlF/kv/F9Fe+FCzVOb/ZRPqZR1ZdR6YPOr9uES6n1/Wiq
92aU/hXHP+Tk6VD2Nxdp28QVgFVP1ExHqfq0lU1pnt4XhKe047ZaUb7p1hcb
vesbptcs1Y1S9Y0/cTEyWSoEJSfvuOtSfiHmWZN2/js26S5rlVH5kH5R1pqq
GooAK/bsp+y1oUXnp9lPjHo81VAzR0LurmhZD9swbIi+kCFI+afSjeYXLtQJ
hic9TIPKo7W2Qt/RqEjcXLjomzRNglif6DH1/lj8FWM9tGqChFPGOtdWT/3C
USOXDSup/riuc0vnBms8nnhfSh0jqflR6CAxzZuAStUdTSVUvwWlG4hPHUhC
M33Zp0s0Et78y2wQTU5C7henlhMHSdA5xL+gfioZ6RzTrrpUP7v4cW4MlP+N
eZXi7d+ofu9lLXo8YJiKNjdDdqS0kxCq1XOiqzcVX/N3Hj3XRsItS9m99Xpp
yLeJ63VeK/V5PUs4ov5LR5aqH/lx1Pxx2t3zkvP6H9y99H7mQA0JnAbbj9bW
/sGq/Ib6Z1UkKO+I3+mhmolrGg4yMv9S/Vm9IMyilIXPDLFOooykzvUBl99c
QDQzD36SmEdC8hra5XU5iEYmASdyqHkocfx1fvn2HBTaAaeKskkIMXPadSkg
B19OGi5lUPPUJ+F0xhqfXGz7e+Tt5URq/noPt2c75yPrriHh0WASbPRUw8+V
5aPqRXUue2q+s0do+mdxFOCwKXlmjT8J576cKIpwLMADc+9erqbeD2eZyjYX
7AtRJifA6IczCa757zc8sSxG67Q7/maPqbw1G4VYq5VjR1WW/HlZEiLfFGx4
6FmOwkYKRzyp99uNHTPBd5rKcYPHPrGOU1Q/qK+K3PdfBebm7xbXot6Pj3lt
Hv1n9BdZbF/nt++m8h/SJbHftgrv8A3CWep9y/nJki0Qq/AvwX50BQuV/yeK
HStYq3FlQLpc1iITyq8kFf0nW40atmlpmyaZ8Nl0ncK/4mr8tId/o2E3E+rO
hZXTq2ow02FtkUYmE4a3fLnTPFaDEWy1Sx9TmZAm8Kg8e10tVvNM6aclMmFf
hQ63jXotej1tyZuLYMK/2ap9qY21yLf7wxyvFxPOTIh9FGurwz/Ps+2+mjBh
acUZw7ieBuzxNvXctZ4J3w/LaF5d0YiLAtOSd9Yy4fpU56H+HY04JDP33G01
E2gK6g4r9BpRTbNNrG1hGbz2vPSY6GhEjc1BfHy9yzAi+ZnxraUJ46z8P4wk
LIP21vTJ+dIWTGEkS9jKL8Pkqj7lAloLviqcEk64sAyhnb72TuytyO39ZKHt
1DL0rPGDOblWVLtdbb5Vchkcys8ovcZWHONX/HJy/TJsMa0+dDjpHypd2qE/
3bwEgj61t9CzHWtzEy5a6y7Bs9DRX1/i25Fd0aVEktqP+kbGdWhXtKOzeMTz
XrUluMhmmtLO1oHCalEPj8sugfkzpvN7qw5UjdKtdNuzBI7K3KSNcie+jZRe
uUxbhNt3Tc1vOnThYpbDrmpqv8xmOTVc+qkLA/ZqTSVT++kTUetMZPy7cPRm
uqTHrUVQGtthypbShQfzpwdPKSzC1KCJ4MORLuwTehZ6dt8i3JA3krO53o1t
qpuXOQeo/X7roQxr0R78/MrT4e+tBXhZdEfiyZEeFF8e5d6ptgDOj/48t75A
+WDlXvPLC8CsOvD5zp0eVDgvvH5SegFiYq2PzXj1INNbj+X72gVoG/q8de/K
XlyOOZgVlDkPxNqVHC/betGyhyVJTHAe2k2t1tcM9eJGRoOxx9p52HdV6cWO
2V5c6bxm7RzrPKhvk1JPWNeHKjxuG2Poc9DyIybH5VIfBlwK/Ya5c1Ag2XXp
YFwfsh1LkPYxngNFbaeTa2z6MfHtfv7tqbNw8LQCs8KpHz0IFQWLmFl4tvKU
tbNHPzb06UZnhsxCRf96w7mofgx61DQt6zILT8PbBd1b+nFbkOrMWr1Z0Lou
dzzv6AC+OEhf/LhmFkaUWwJZhwew8KKboILmDPDcElq1cXoA2bdcKxhQmIEe
X9v83SyDqJi1d8IWZkDvZ+bJwxsHMZVPs81/7wysWL+veNWFQZz/V3zCe2Ea
Rk1eLvn5DmJl9h5vp8BpOPWiQd7gPA2FrsqwWXZOwcStuEA/JRqWfX4tq1c7
BXslCFqZFg3l7/faKBZOwazarxsbzWjoxc81zB09Be2ZSxdu+NHwAN/DTYpP
pkBs775njuM03DQzuz2KawpE9OVszP2GMGjf2rkNUpMQ8+dtEP4YwgmuqFql
3ZMw9vqTBkfcEK4cb9lpt3ESvl5cb/Emfwg/MEalqxcm4GrGxvUi9CHslZb+
IJU/AY8zfazGTg1j1sEip8lrE/Do7Y+AloZhvP1OxOCN2Tgo6FVwcnUOI1PW
66CG7jj8vhAwf4Q2jO6u/TtFro3DuaVFZauFYQw4OPUp8ug45G2L+OK+fQRl
LAX6Xy+Ngdbciov3DUcwQG7DRvUPY7DxQ+pF1dER9KJffsEFBHj8jlh2mR7B
m7fUbrzbQYB1gwstd3kEz7nmvJtjI0BEj11ZgIeOJe6V03klDDhGHN50W5KO
yp67Vo6rMaDxDCPJ7CEdQ19c25OuPwpPr8jXBPXTsZ8tkO+I3QgcfvfaXI9O
x0XRk+RvvRG44ZTNvm2Sjudl4y8fvjgCDwxShO1ZRlHzchurwNoRmN6qkMPY
MoojivbtH78Ow8aUwjsvlEdR5Ii9vFzSEGyqCT5/PH4UZzt/sgr2DEKQidtG
wZRRlNKxTK4pGITLf94nM/6M4veMmJB34YNw0rH/4vviUSRv0i53mg6CncYq
n7sdo5h5buaj0uwAGDeoZOdwMpAZwnJgG9cAVEvqtyz/x8AMm+ldpZJ9cLVx
I/5nwMBelwMP1Xn64Nvro3PJRgxc/apmqWm0F9rU/O7IWzOwQsRWoDqmF268
ZNSsec9AHP5vn614L4T+vMpJi2PgbpuPPHW7e0CCdcfjzGQG9oxkbFm9sgd+
3Ni99X06A58uma84Qp37ZwtlN6/KZ6B1bc8Hh5Bu0DE5GOXVwECdLb727du6
oeOzHCvfPANHfiuci9vQBaUMVTetZQYedJBp3jvUCTxxdZe8WQl0rFrmHw7r
hGPc9/bMryFQnf7jjdrOThCfNnfS2ELgu2nT6ymbOqCpf6pN9wSBnK2Vt2ls
bdCTu3i+xIJAo7bVx6zrm2Dz6Py2LGsCX37YrpPs1QRXFKxEo54QmNLfFEFo
NoHxquF0UxsCHyZEdWq0NEKPC3eThxOB5XW2bv/aGwD3Kqk9CCDw6vOK+MH+
OjiaVhfSFUSg71qlK7VhdWDxarOAagiBvx3nFlPv14Gb5OPbgmEEmotEzDwa
qgXDn2N3L8cROLtXYzyFXgM6UW/7D+QQ6NByw66mrwoMwl5xi+YRKBf1aGzT
vSpQ5H2iLFhA4ItQc/cbg5Xw5fCNzT3FBHIHSfTlDP2FX2LThZuqCFzN+5/U
CUY5+B3ziKitJtAmatb7onk5VI+/+va2lrruNSOmOFYGnA9DK6sbCIywdrx6
YaIU/qwP3cTZRuCNMlKob7oYPoGh39t2Ag8cK72R9aQYcu6pSM52EOhUTct2
my2C7YUHnAu6CczQyHEUnS+EJ5JWvCyDVH22H3u0bikfxssrNp2iETjDwWOF
NvnQM/fjsNkQgfGzH7yNlvMgSy3ILXOEQFXbQ7UxzFzwam9YnCcIZHz87czC
mgOmrS8DxsYIvGnVzbaJAyHtiNfXznECf9a8eCvGkw2uMhARNkngyOShw4e3
ZMLIGoN0uykCc3d21u8X+QPP3EVEVaYJvMRbtygsmgHCR0PXtcwQWPMwJ2/6
cBqs38Lp5j5L4NrfWq1Nx1JhhYLyA7k5AjmuWNxNPpMCHaeL9n+ZJ9BrwRz/
k0+GzSZRAgcWCGR1Jdn3qyTBYkaFFlJedVovcVIjEW4kn6NXLhJoqj4n9Ew3
HvKM1c4oLhHYw5f906jiF+Rrb6ch5YHAqd8tTTHgE+pMP7BMPc9xhS7Z3iio
PWCv4E450epJQDgjAkwyuljHKCvfl9JftRAGWT1f119iElgWdDzyv1U/wZ3P
28aTcs+43FA8XyjsfJMH/yj7mQr4kUIhsFWZR3sLSeDJe2X3PJWDIOymcY0a
ZekS+s2dhn5gqF8a/Iry2Rne5ciX3mA3L1wcSZlh/BsOuLuD79u7l8soC9bj
Tg21T9B1xlWkl7LrZ9H8K3aOwH7E79oU5YYkVXsLzZegqPCqfZkyDw+0f9G9
DxbHL+SSlL0SbR9yxalg4ce25XnKW8IcmzgDrHH3dzUP+v/e39uwRDDkFTKS
frxqoly46/fonkcfkLestSSD8r9sdaZ3qBsu5i0YeVPexr2FS/CTJ0apcesb
U7bcHyXh/sQX/Za3JstQdpx59YRdNwDLd8roLFLrEajFt5ix+xumjd8zSKM8
6ffmjtnm73jbHHMeUq7a2fZwG88P3PVY7akQ5dPXtROKV4ThZPwhp1xq/elZ
lxNMZ8Nx60+rMR3KjeK901z0SCzot61ypOo5cU7O7FhDLLZrv7zITVmyzi8x
rzQOH3XLbvhE5QEy9CR3dcbjhFNi3mMqL5Gzna/86hJx/In/tw4qX/FBX99X
/U1CV+6GZqAc1vGvlixORrHhuhsjVD6D435eUMtMwfSg4W9HKQdxvhuzTEnF
Vc1Tss+oPA/8+jbhEp+GsbV+/gNU/rkJuZUJPzLQZIun932qXzaca6uNcsnG
0T2KRTpUP0HlC9EKf8Tz7jFzylS/3RihJt/1HHx47Me99aMETre9KLa5m4vF
rKYWElT/qnnr1l5/nY/jUQ+y2wcIav8vnJG9pgDpZdnrHPsJrGTjYu74UoDb
2WZK03oI6r5LrE3BhZjTUuecTM0Tw6zUqpnMYuTkTuXd9o+aJ81nzSTlSlDS
+VyATQuB1S5XjuuUlyBb2bYakUYCP7slpES3lOI5OavU5UoChxnD0vTpcrS4
ojq8BgncMZk/+2hjNTqPch/tzSTQvvXmyZqb1UgUTrolZVDrc6WsZ29gNfb9
jLc7kULN30bjzWW7arBqrFi2NYbAUyaXuGoP1eJWfgsuC1+q/1i6rAbl6/Gn
5qq0DC8CueRDpMdd6lFfpcRhyZ3A230h+6er6nHV07EHhp+oeiDxeOR6A5rJ
rkqoeEVg87EVd12pc8bWKZWKcSMq/ykNEj+eNuN2Ftu4AUMCZRv28jf8bkaa
wIuuOn0CRYUmhsjJZnSIGJL00ab6eWRKUtaiBTulJTxyVQjs2GppamfUiun8
Q/vDjlDz+RaPUYZWG7bxBCiIHCaw9qmP7BuvNvzxnafAXYLAD7xvt12sa8OJ
w/FluqIEGkQtuSYpt2Pa5iwIESRQ9zRLyYmLHcha2+2VPMfA3xymYuaburCS
W/Rv8hQDTa6Qy4LHulBXbP5h7BgDL2Vu/Jd5vQuzV54fc6IxcBsWf1xw78Lm
ISv+niYGnlglwpDj7sbCx2p/9v9m4Ojgg2O8rD14bqfPvq3GDEx72BBysb8X
Lz08fTX3LvX7GY6uA6v6sDUrJP4/HQYGbbyV/kq0D2caek/baFDW6vUPu9+H
DE9NH9WzDGxwWukdOdSHTwPSMrX4GPj93rtDLvR+FOBNch+JHUXB5W3016OD
WPjFtutl+ChuU0hSuclNQ9fBdz/YQkbRMdyqaK8EDffMlXvPe4zii9bKkkRT
Gip/6rlh/5zaP3Vz7LAaoaH5aV3WqQujGAFfRb0Hh3A324161yo6LttHShxp
HUGmWVvx0RI63nN0WuU8N4J5PJHZdTl0vJWovKV1Ix0HhFSyZxPoaD863ayr
TsdHkanQ5UFH2adxyFtBx6NvHHYc1aTj7ntyPSPUvs1Ne8f75foRXPxvt5kB
lTOLD0/YIypG8OnzD3kJidQcDu2pUigYwaXXvIqz1Ht87SeFi8+TRrDBhJUu
vWoMBXTb2V58GcGLWVqkGYzh7wf7e9cqjeDD91fSuJLGcMOgqNSHP8Po0hP7
Mt97HK8mRH7qThxGO9+kwd7QcVT6uPGpdNQwlgzbrmNJGMeBCuot7TuMOx+m
fdlfPo5LZwLX+D4eRk3e+3RlchzfuLjy8UgO47pvexUL7k2gQF8g53nqfDAa
PTKkLjWJP+38VKvchvDJLh7WgbOTWBbz3ljLaQh5NP5YWStOYum8zq7rj4bw
dZ3PTYe7kyi+8ubQauUhbOQv6tLznsRHT+QqL7IM4ZzzpiPn5ycxfsbI6bwu
DRVrpHZr/5nCrYoCG6Wu07CmVlpOs2QKI6dEM4UUaPhOPdxWoWEKVZOEbrdK
0/CM+mHJHcQUvrjcc3oVOw23CJ4Tdto5jfQ7cFsgZhCN2FXXS72fRkf38TzJ
8QF8blm7fUR5Bo9cuG57pX8AT+9gMdtxewbr7b1Sb7cMYO9f2btq92dw8cnx
dLPcAVQLPXY8yH4Gf62QV738ZQA3n9XdNhI3g7cbff4WHhzAqDCxTmXeWfTW
/GnAZ9SP3sdW/hYtncUyo0Hmce1+FMuvcimtm0WllCtq2qr9aO/73P5exywG
OoiJeRzvR6kaWtTnyVmUEq0fyuXox3sX19b4bJtD+b1bDEQj+tAtcXyDs8Uc
cg6X7hPp7cVdKwJietfNY/6+J5Y/G3vRr/T5QIHQPCpNhVbvKetF+RS+4eA9
89hU09stmNCLcvFRcrIn5jFsvCEs164Xx9Si2EB3HneV2DyW3NyLbh1Fnzli
55Fb1fXUG4UepJ1avlV3fgHPb5Z5mnSmB/vTCq3+KCzgWQk/7c5D1Pn9uZxC
oPoC1jlVHhIX7MEvhZMHlQ0X0CrZVcOltxvdu677332/gC/52U86vuzG57xT
Ivp/F9Bcs/qoTkQXftITjf1ybRHPvLL7yenfhVUy2rmxtxaxRvTRzsRPXSi0
EKyRr7+I9mtoqtNWXdjg932s1WoRWWxWtSid6cJp2F36x30Rq5Wt8t9978Rt
nknXL9QsYrzK/vxSejuG9fEtXZdfwuW2xrLGynYU9CyPO622hF9PX37xL74d
TfYIPxG6uYTTDlwT5Y/a8R57/uFcoyVcp5h6SGGpDa04WsRinZZQRa9YOX9N
G/77YiyxqmAJL1Re+NG7vRXtTluvCpdZxpV9BvwzZAu+7mqdcD6zTM156VOs
3S1oOZoUbyS3jKefujSxhragqw6395pr1HXWyzKxoi1YvGJ3Lc10GRM/fN2f
fKAZk4+EPBQKWUYaM/NGjnQjXtA1/irHxkTXlOc1QhsbUelf7b8/HEz8UahC
s5xrQMLXrmI/DxP7/0hz82Q14J1SjaTpTUxc99SbufpSAy6+vmZ1WJKJxoq1
Laxa9XjtpJj3ZS0mevXLvFF+XIuXa44094cyUb5kVQuXVi2amrk8sohgogYZ
llJwvBYfFpzynYxh4spL/aL7lmqw994Zy97fTGw3OxiV9boGPxx4rPigmIkH
RXVThFyrkeyaT1o7xMSF1qRWlP+LnDu/q0SLkihSyz61lv0vauz1nPkiTmJG
jESWWkEFqh38GG8uSeLtiwbReWcrUJdN8CafDIlvbER55aTL8dkDjTsDciRa
S7GlN2wpReHucuU+XRJ7nKpKw5pK8K9bRtipuyR+uy6XZeFZgvVh+1g/3ieR
Y1zsK8Fdgrg2L53LjESzZYVz/izFuHB6UTj0BYnRL8Yk/vQV4PWbKxZE3ElU
VL9tvSukAINhmZvmSWJWqXK1438FGL7i/cYwHxIPPr+0/URjPtrb7l/BHkji
ua8b9mkX56EPm6qkdjiJLIKa8j5v8rDM9L+a1kgS354+tvUv5OF864K+agyJ
ty44iu1Ly8WkfYIqIgkklopenvoRkYOMvznH1DNIPMv5vDT1bg7GmIud/pBJ
omVlAb1QJAePWBfsS8km8SnXiqaIw4jWp0Szp/JI3FVu2vBsXRZGjWRkrCwn
sSWze8G9Kg1lBS47mrdQn4/fp+u0ahoayK5TmGslcfnB6uSu6lTcaPpoy/M2
Evk0FEM31qbgm8tObfqdVH0Oy2+H+mTMz2j519hHokRpEP2PBmWDG5PCAyS6
ZMiGSzckYdloGL/eIInbEjp1BRoT8VLXo4flQyQ6xuvoBTXFY6mCi+05Bolf
/ojyzGjFY5PQkTp5gsT/jl1W8oiPwysr9A8qjpGY/OSTZFlCLAYuqS4cnSCx
MvWe7q3EGKx75WMkPEnifvbC+72J0ShJmrWxTJF41PLsTFdSJFb+Gq+LnibR
L2hq6XpyBLpekNJ6PENiW6dhc0FyOH78ItkpM0vi9M7ctV9+/8RrfP5LIXMk
Pvx4rZ/x+wdaesR/UZwnUTRh9MvllFB89axCfJRyf2TQveGUEFRcfmq0aZHK
i8w9nqOp39CrN3Ptd8pJv47yz5oF48p0q+RdSyQWXTl0yMY8EKW2PdcJpHxD
9/HkvLk/Xv2VwM27TK3XBLZZWHxF4TUs+Izy28QKk24LHxQqlbdupWwzeFNE
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
gLRoWG7m/wAGtp7J
       "]]},
     Annotation[#, "Charting`Private`Tag$527904#4"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], Thickness[0.015], Opacity[1.], 
      FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
WHxm8f8DJChnmQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$527904#5"]& ], 
    TagBox[
     {RGBColor[0.772079, 0.431554, 0.102387], Thickness[0.015], Opacity[1.], 
      FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
pTdQpR0bUPmFQC3XfX1ZfxMglEldIHMmTr8o8mVjjwcr+qPob98IvGL/nnM9
dxyUHgh9TcwQmNzr/ESSPxb8FSAt5QeBX37s279/YzR8WWla5jZLYO02on+3
eBQ8DBKX0Jwj8JwAZUFMIhLEDiaupv0ksPduTd3c/ghYs5EnIOgXgauK9OmD
h8KBQ1XjjtI8gdznbW8WnggD1vGm3YG/CQz9Y4PXVUJgg2WG8J4/BLL7/+Pa
rRkMC+Ud+kjy8uPG+T90g+By4anJrgUCrXTmRR8aBUCdhfYJtUUCRwSrk807
XkG9wZZxJPljzGwRbdAPwhN9J/cskfdzWPWd4ugL6NvjrhpEcr69Y3Tq9DOw
LH/H/o1kjdtyJsv/PIWqkddrzv0lsC32cPr15d4QJBjmEkLyyIzSRK6gF2zz
qoNhkiOthCP/iT6GTRr8Bhv/EXj0VtutEA03SLli0Ut6D8q3TF7ZZuYMZiat
cY9JPvlTYCn9kSO4/RZrTid52qII9gTZQ8STm8ptJIv04zZd7bvw7oS/+CjJ
/q8k6s+7mQHXgciLsyRTC7TcbfWugZrqYybpccjPD8xAI2WwPXymlvQ4DM13
vcubsxcbXzCWSI/DjSnegzzROrjjjXbw5H/vH2bWIpJgjNMFSY8HSW7cXjS1
894dFGijt5STPFyt8zcs0RYX6v6Yh5G8mW8jr8jLe5ihzWdiQbLd7gyZIMeH
GLm0qVCBZO+fjx25jFywfZuC4QK5HjH6ggvlOzywdOaWaSnJPyK9blhv8MRr
Nlhzl+TubYy7m/mf4Pb72g9EST5+ySCvmeMp/sjd51NLrv9klXKe1S8f3JRs
/430OhyQHp3jJT2v4YNrtze5n99PKVkfor5EpsGjs3wky1Ii8+ta/fHee8W1
L8l6gHJj2e1EAH73ya+7T9ZL+i/icSQlCGcco+JZZH3lxr5+1t0ZjP581CEg
OYU13PevOQQlP1MufyHrMy4n+Yx2ZRiWxX6OP0hyLM/Tb3bF4bh8aFbxIVnP
H9/Gf/fLjcDsvsioj2T9831VWpaXFImWG0PCbpP9svYUoy/Dj/S6nWpNhmQ/
QZezREdUHJ4OyprXIPvt8hdy8l2Kx7uHkm6tmSJwjuHc7HIzAZvZrWxlyP7V
DjPqu+SZiDMZd6qZHwky/4uVV68kva6terX3BwK7OHn/bg1Mwi2cP1tLRwjy
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
/h8xofka
       "]]},
     Annotation[#, "Charting`Private`Tag$527904#6"]& ]},
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->{24, 24},
   Method->{"ScalingFunctions" -> None},
   PlotRange->{{-2.499999707837932, 2.5}, {-2.499999648203012, 
    2.4999996956862214`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.05], 
      Scaled[0.05]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], ";"}]}], "CodeInput",
 CellChangeTimes->{{3.6900567534698257`*^9, 3.690056756707999*^9}, {
   3.6900625177092648`*^9, 3.690062541286964*^9}, 3.6900625869044952`*^9, 
   3.690063014845945*^9, 3.690066906541884*^9, 
   3.690066957116123*^9},ExpressionUUID->"25ea8eb8-3c58-4fc9-b787-\
8736e7d43791"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]StoreExpression\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.689511438306011*^9},ExpressionUUID->"7a407bb0-d3c1-4cc2-8cd4-\
c62710cf0394"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CompressedSummaryForm", "[", "\n", "\t", 
    RowBox[{"expr_", ",", "\n", "\t", 
     RowBox[{"icon_:", "None"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", "=", 
       RowBox[{"Compress", "@", "expr"}]}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"SummarizedForm", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Unevaluated", "[", 
        RowBox[{"CompressedData", "@", "c"}], "]"}], ",", "\n", "\t\t\t", 
       "\"\<Compressed\>\"", ",", "\n", "\t\t\t", "icon", ",", "\n", "\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Head", "@", "expr"}], ",", "\"\<Input\>\""}], "]"}], "\n", 
        "\t\t\t\t", "}"}], ",", "\n", "\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"\"\<Expression: \>\"", "\[Rule]", "\"\<expr\>\""}], ",", 
         "\n", "\t\t\t\t", 
         RowBox[{"\"\<Bytes: \>\"", "\[Rule]", "\"\<byte_count\>\""}], ",", 
         "\n", "\t", "\t\t\t", 
         RowBox[{"\"\<Dimensions: \>\"", "\[Rule]", "\"\<dimensions\>\""}]}], 
        "\n", "\t", "\t\t\t", "}"}], ",", "\n", "\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"\"\<expr\>\"", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"HoldForm", "@", "expr"}], ",", "\"\<Input\>\""}], 
           "]"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{"\"\<byte_count\>\"", "\[Rule]", 
          RowBox[{"ByteCount", "@", "expr"}]}], ",", "\n", "\t", "\t\t\t", 
         RowBox[{"\"\<dimensions\>\"", "->", 
          RowBox[{"Dimensions", "@", "expr"}]}]}], "\n", "\t\t\t\t", "}"}]}], 
      "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CompressedSummaryForm", "~", "SetAttributes", "~", "HoldFirst"}], 
  ";"}]}], "CodeInput",
 CellChangeTimes->{{3.689695825821807*^9, 3.689695843717106*^9}, {
   3.6896958748120747`*^9, 3.6896958798052683`*^9}, {3.689695947302292*^9, 
   3.6896959891194553`*^9}, {3.689696138885662*^9, 3.689696239713067*^9}, {
   3.689696452810728*^9, 3.689696466305979*^9}, {3.689876912991571*^9, 
   3.689876958608882*^9}, {3.689877077352757*^9, 3.689877090629438*^9}, {
   3.68987712086447*^9, 3.689877264383692*^9}, 3.689877659181876*^9, {
   3.68987775384265*^9, 3.6898777906756*^9}, {3.689877825408283*^9, 
   3.689877826840178*^9}, {3.68987793809531*^9, 3.6898779384791813`*^9}, {
   3.689878069556983*^9, 3.689878072203979*^9}, {3.69005591389072*^9, 
   3.690055935673378*^9}, {3.6900562792549143`*^9, 3.6900562867725697`*^9}, {
   3.69005679580375*^9, 
   3.690056804437584*^9}},ExpressionUUID->"04d54935-0f45-4d28-be9f-\
ac7d9e3eb9d9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "CompressedIconForm", "]"}], "=", 
   RowBox[{"Options", "@", "IconForm"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CompressedIconForm", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{"icon_:", "None"}], ",", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"c", "=", 
        RowBox[{"Compress", "@", "expr"}]}], ",", "\n", "\t\t", 
       RowBox[{"shortForm", "=", 
        RowBox[{"Short", "[", 
         RowBox[{"HoldForm", "@", "expr"}], "]"}]}]}], "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{"IconForm", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"CompressedData", "@", "c"}], ",", "\n", "\t\t\t", "icon", ",",
        "\n", "\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Size: \>\"", ",", "\n", "\t\t\t\t\t", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"bytes", "=", 
               RowBox[{"ByteCount", "@", "c"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{"Which", "[", "\n", "\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"bytes", ">", 
                SuperscriptBox["10", "9"]}], ",", "\n", "\t\t\t\t\t\t\t\t", 
               RowBox[{"Quantity", "[", 
                RowBox[{
                 RowBox[{"Round", "[", 
                  RowBox[{
                   RowBox[{"bytes", "/", 
                    SuperscriptBox["10", "9"]}], ",", ".01"}], "]"}], ",", 
                 "\"\<Gigabytes\>\""}], "]"}], ",", "\n", "\t\t\t\t\t\t\t", 
               RowBox[{"bytes", ">", 
                SuperscriptBox["10", "6"]}], ",", "\n", "\t\t\t\t\t\t\t\t", 
               RowBox[{"Quantity", "[", 
                RowBox[{
                 RowBox[{"Round", "[", 
                  RowBox[{
                   RowBox[{"bytes", "/", 
                    SuperscriptBox["10", "6"]}], ",", ".01"}], "]"}], ",", 
                 "\"\<Megabytes\>\""}], "]"}], ",", "\n", "\t\t\t\t\t\t\t", 
               RowBox[{"bytes", ">", 
                SuperscriptBox["10", "3"]}], ",", "\n", "\t\t\t\t\t\t\t\t", 
               RowBox[{"Quantity", "[", 
                RowBox[{
                 RowBox[{"Round", "[", 
                  RowBox[{
                   RowBox[{"bytes", "/", 
                    SuperscriptBox["10", "3"]}], ",", ".01"}], "]"}], ",", 
                 "\"\<Kilobytes\>\""}], "]"}], ",", "\n", "\t\t\t\t\t\t\t", 
               "True", ",", "\n", "\t\t\t\t\t\t\t\t", 
               RowBox[{"Quantity", "[", 
                RowBox[{
                 RowBox[{"Round", "[", 
                  RowBox[{"bytes", ",", ".01"}], "]"}], ",", 
                 "\"\<Bytes\>\""}], "]"}]}], "\n", "\t\t\t\t\t\t\t", "]"}]}], 
            "\n", "\t\t\t\t\t", "]"}], ",", "SpanFromLeft"}], "}"}], ",", 
         "\n", "\t\t\t\t", 
         RowBox[{"{", 
          RowBox[{"\"\<Expr: \>\"", ",", 
           RowBox[{"Short", "[", 
            RowBox[{"HoldForm", "@", "expr"}], "]"}]}], "}"}]}], "\n", 
        "\t\t\t\t", "}"}], ",", "\n", "\t\t\t", "ops", ",", "\n", "\t\t\t", 
       RowBox[{"Framed", "\[Rule]", "False"}]}], "\n", "\t\t\t", "]"}]}], 
    "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CompressedIconForm", "~", "SetAttributes", "~", "HoldFirst"}], 
  ";"}]}], "CodeInput",
 CellChangeTimes->{{3.690051681080368*^9, 3.690051703151517*^9}, {
  3.690051735774432*^9, 3.690051742494224*^9}, {3.690051863034436*^9, 
  3.690051898322991*^9}, {3.690052035968478*^9, 3.6900520706563787`*^9}, {
  3.690052286429084*^9, 3.690052320459353*^9}, {3.6900524023095303`*^9, 
  3.69005240504572*^9}, {3.690054231599133*^9, 3.6900542340649137`*^9}, {
  3.690055115588735*^9, 3.690055158040121*^9}, {3.6900562927234917`*^9, 
  3.690056296004223*^9}, {3.6900584651821957`*^9, 3.6900584908769827`*^9}, {
  3.690058601046192*^9, 3.6900586924189672`*^9}, {3.690067004189603*^9, 
  3.690067068593382*^9}, {3.6900671856944427`*^9, 3.690067359024197*^9}, {
  3.690147779212988*^9, 
  3.6901478127939587`*^9}},ExpressionUUID->"a574d9bf-4637-4d22-a0a2-\
6ed3b30900b8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CompressedForm", "[", "\n", "\t\t", 
    RowBox[{"expr_", ",", "\n", "\t\t", 
     RowBox[{"icon_:", "Automatic"}], ",", "\n", "\t\t", "args___", ",", "\n",
      "\t\t", 
     RowBox[{"mode", ":", 
      RowBox[{"\"\<Summary\>\"", "|", "\"\<Icon\>\""}], ":", 
      "\"\<Frame\>\""}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Switch", "[", 
    RowBox[{"mode", ",", "\n", "\t\t", "\"\<Box\>\"", ",", "\n", "\t\t\t", 
     RowBox[{"CompressedSummaryForm", "[", 
      RowBox[{"expr", ",", "\n", "\t\t\t\t", 
       RowBox[{"Replace", "[", 
        RowBox[{"icon", ",", 
         RowBox[{"Automatic", "\[RuleDelayed]", "$CompressionIcon"}]}], "]"}],
        ",", "args"}], "]"}], ",", "\n", "\t\t", "\"\<Frame\>\"", ",", "\n", 
     "\t\t\t", 
     RowBox[{"CompressedIconForm", "[", 
      RowBox[{"expr", ",", "\n", "\t\t\t\t", 
       RowBox[{"Replace", "[", 
        RowBox[{"icon", ",", 
         RowBox[{"Automatic", "\[RuleDelayed]", "$CompressionIcon"}]}], "]"}],
        ",", "args"}], "]"}]}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CompressedForm", "~", "SetAttributes", "~", "HoldFirst"}], 
  ";"}]}], "CodeInput",
 CellChangeTimes->{{3.68987796140583*^9, 3.6898779746307163`*^9}, {
   3.689878517293582*^9, 3.689878590521916*^9}, {3.689881235081408*^9, 
   3.689881246829496*^9}, {3.690055528456497*^9, 3.690055545678032*^9}, 
   3.69005558388759*^9, {3.690055889098925*^9, 3.690055907879772*^9}, {
   3.6900563927687397`*^9, 3.690056403091757*^9}, {3.6900565867185307`*^9, 
   3.6900565964223127`*^9}, 3.690056716122085*^9, {3.69005683308534*^9, 
   3.69005684083738*^9}, {3.690056873242813*^9, 
   3.690056890196664*^9}},ExpressionUUID->"38f0768b-0058-46d1-9bb2-\
4f07e2333326"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StoreExpression", "[", 
    RowBox[{"expr_", ",", "args___"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"comp", "=", 
       RowBox[{"CompressedForm", "[", 
        RowBox[{"expr", ",", "Automatic", ",", "args"}], "]"}]}], "}"}], ",", 
     "\n", "\t\t", 
     RowBox[{"CellPrint", "@", "\n", "\t\t\t", 
      RowBox[{"Cell", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"BoxData", "@", 
         RowBox[{"ToBoxes", "@", 
          RowBox[{"Unevaluated", "[", 
           RowBox[{
            RowBox[{"expr", "=", "comp"}], ";"}], "]"}]}]}], ",", "\n", 
        "\t\t\t\t", "\"\<Input\>\""}], "\t", "\n", "\t\t\t\t", "]"}]}]}], 
    "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{"StoreExpression", "~", "SetAttributes", "~", 
  "HoldFirst"}]}], "CodeInput",
 CellChangeTimes->{{3.689511439572464*^9, 3.6895114613004923`*^9}, {
   3.689511823877915*^9, 3.6895120132384787`*^9}, {3.6895120926058283`*^9, 
   3.689512121531351*^9}, {3.6895121541231623`*^9, 3.6895122200165033`*^9}, {
   3.689512365464868*^9, 3.6895123677896023`*^9}, {3.6895124059494133`*^9, 
   3.689512461489091*^9}, {3.689512552065338*^9, 3.6895125589908943`*^9}, {
   3.6896961550989933`*^9, 3.689696157896611*^9}, {3.689696263691855*^9, 
   3.689696277208268*^9}, {3.690056650818966*^9, 3.690056654017796*^9}, 
   3.690056955248694*^9, {3.690057000422852*^9, 
   3.690057018981943*^9}},ExpressionUUID->"db97122f-8728-48f1-aa6f-\
be9eb34c4600"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Notebooks\[RightFloor]", "CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.6984387057980137`*^9, 
  3.698438706957353*^9}},ExpressionUUID->"42352380-b52a-4df2-a27c-\
2d26f03f0f75"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CompileNotebook\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.685365360152829*^9, 
  3.685365367311613*^9}},ExpressionUUID->"506c5f6a-52dc-4d10-ba2a-\
06fc91d75bbf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CompileNotebook", "[", 
   RowBox[{"nb", ":", 
    RowBox[{"_Notebook", "|", "_NotebookObject", "|", "Automatic"}], ":", 
    "Automatic"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"compiledNotebook", "=", "\n", "\t\t\t", 
       RowBox[{"Replace", "[", 
        RowBox[{"nb", ",", 
         RowBox[{"{", "\n", "\t", "\t", "\t\t", 
          RowBox[{
           RowBox[{"Automatic", "\[RuleDelayed]", 
            RowBox[{"NotebookGet", "@", 
             RowBox[{"EvaluationNotebook", "[", "]"}]}]}], ",", "\n", "\t", 
           "\t", "\t\t", 
           RowBox[{"_NotebookObject", ":>", 
            RowBox[{"NotebookGet", "@", "nb"}]}]}], "\n", "\t", "\t", "\t", 
          "}"}]}], "]"}]}], ",", "\n", "\t\t", "styles", ",", "\n", "\t\t", 
      "getsANDimports"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"styles", "=", 
      RowBox[{"StylesheetNotebook", "@", "compiledNotebook"}]}], ";", "\n", 
     "\t", 
     RowBox[{"compiledNotebook", "=", 
      RowBox[{"If", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Quiet", "[", 
          RowBox[{"Options", "[", 
           RowBox[{"compiledNotebook", ",", "StyleDefinitions"}], "]"}], 
          "]"}], "===", 
         RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
        RowBox[{"Append", "[", 
         RowBox[{"compiledNotebook", ",", 
          RowBox[{"StyleDefinitions", "\[Rule]", "styles"}]}], "]"}], ",", 
        "\n", "\t\t", 
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"compiledNotebook", ",", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"StyleDefinitions", "\[Rule]", "_"}], ")"}], "\[Rule]", 
           RowBox[{"(", 
            RowBox[{"StyleDefinitions", "\[Rule]", "styles"}], ")"}]}]}], 
         "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], ";", "\n", "\t", 
     "\n", "\t\t", "\n", "\t\t", "compiledNotebook"}]}], "\n", "\t\t", "]"}], 
  "\t"}]], "CodeInput",
 CellChangeTimes->{{3.685367212706182*^9, 3.685367329253413*^9}, {
  3.685367360547285*^9, 3.6853674906336203`*^9}, {3.685367537400461*^9, 
  3.685367574463985*^9}, {3.6853676246517878`*^9, 3.685367695656969*^9}, {
  3.6853682004800787`*^9, 3.685368209876258*^9}, {3.685368275006481*^9, 
  3.68536827779958*^9}, {3.685369523231662*^9, 3.685369564057405*^9}, {
  3.686346737842136*^9, 
  3.686346784176832*^9}},ExpressionUUID->"e81915f7-ba4d-4c5f-9f4e-\
d2d115749c6c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]GenerateNewPackage\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.68668037588973*^9, 3.686680379896185*^9}, {
  3.686680752015154*^9, 3.686680755189355*^9}, {3.7044723022562323`*^9, 
  3.704472304881241*^9}},ExpressionUUID->"46aef745-ccfa-4228-9a89-\
3caa2fd09965"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GenerateNewPackage", "[", 
    RowBox[{"name", ":", "_String", ":", "\"\<Untitled Package\>\""}], "]"}], 
   ":=", "\n", "\t", 
   RowBox[{"CreateDocument", "@", 
    RowBox[{"Notebook", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", "\t", 
       RowBox[{
        RowBox[{"Cell", "[", 
         RowBox[{"name", ",", "\"\<CodeSection\>\""}], "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"Cell", "[", 
         RowBox[{
          RowBox[{"BoxData", "@", "\"\<Begin[\\\"`Private`\\\"];\>\""}], ",", 
          "\"\<InputSection\>\""}], "]"}], ",", "\n", "\t", "\t", 
        RowBox[{"Cell", "[", 
         RowBox[{"\"\<Exposed\>\"", ",", "\"\<Subsection\>\"", ",", 
          RowBox[{"DefaultNewCellStyle", "\[Rule]", "\"\<CodeInput\>\""}]}], 
         "]"}], ",", "\n", "\t", "\t", 
        RowBox[{"Cell", "[", 
         RowBox[{"\"\<Constants\>\"", ",", "\"\<Subsubsection\>\"", ",", 
          RowBox[{"DefaultNewCellStyle", "\[Rule]", "\"\<CodeInput\>\""}]}], 
         "]"}], ",", "\n", "\t", "\t", 
        RowBox[{"Cell", "[", 
         RowBox[{"\"\<Functions\>\"", ",", "\"\<Subsubsection\>\"", ",", 
          RowBox[{"DefaultNewCellStyle", "\[Rule]", "\"\<CodeInput\>\""}]}], 
         "]"}], ",", "\n", "\t", "\t", 
        RowBox[{"Cell", "[", 
         RowBox[{"\"\<Formatting\>\"", ",", "\"\<Subsubsection\>\"", ",", 
          RowBox[{"DefaultNewCellStyle", "\[Rule]", "\"\<CodeInput\>\""}]}], 
         "]"}], ",", "\n", "\t", "\t", 
        RowBox[{"Cell", "[", 
         RowBox[{"\"\<Internal\>\"", ",", "\"\<Subsection\>\"", ",", 
          RowBox[{"DefaultNewCellStyle", "\[Rule]", "\"\<CodeInput\>\""}]}], 
         "]"}], ",", "\n", "\t", "\t", 
        RowBox[{"Cell", "[", 
         RowBox[{"\"\<Constants\>\"", ",", "\"\<Subsubsection\>\"", ",", 
          RowBox[{"DefaultNewCellStyle", "\[Rule]", "\"\<CodeInput\>\""}]}], 
         "]"}], ",", "\n", "\t", "\t", 
        RowBox[{"Cell", "[", 
         RowBox[{"\"\<Functions\>\"", ",", "\"\<Subsubsection\>\"", ",", 
          RowBox[{"DefaultNewCellStyle", "\[Rule]", "\"\<CodeInput\>\""}]}], 
         "]"}], ",", "\n", "\t", "\t", 
        RowBox[{"Cell", "[", 
         RowBox[{"\"\<Formatting\>\"", ",", "\"\<Subsubsection\>\"", ",", 
          RowBox[{"DefaultNewCellStyle", "\[Rule]", "\"\<CodeInput\>\""}]}], 
         "]"}], ",", "\n", "\t", "\t", 
        RowBox[{"Cell", "[", 
         RowBox[{
          RowBox[{"BoxData", "@", "\"\<End[];\>\""}], ",", 
          "\"\<InputSection\>\""}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"Cell", "[", 
         RowBox[{"\"\<\>\"", ",", "\"\<SectionSeparator\>\""}], "]"}]}], "\n",
        "\t\t", "}"}], ",", "\n", "\t\t", 
      RowBox[{"StyleDefinitions", "\[Rule]", "\n", "\t\t\t", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p", "=", "$PackageName"}], "}"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"FrontEnd`FileName", "[", 
          RowBox[{
           RowBox[{"{", "p", "}"}], ",", "\"\<CodePackage.nb\>\""}], "]"}]}], 
        "\n", "\t\t\t\t", "]"}]}]}], "\n", "\t\t", "]"}]}]}], 
  ";"}]], "CodeInput",
 CellChangeTimes->{{3.6866803808959723`*^9, 3.686680666698144*^9}, {
   3.686680702472224*^9, 3.686680713035654*^9}, {3.686680756275738*^9, 
   3.6866808191802883`*^9}, 3.686680853209467*^9, 3.686680931684602*^9, 
   3.688430698687993*^9, {3.6974635486481733`*^9, 3.697463592460725*^9}, {
   3.699639820029366*^9, 3.6996399123389997`*^9}, {3.699639954697711*^9, 
   3.69963995907425*^9}, 3.7009304945474997`*^9, {3.701029059684704*^9, 
   3.701029085466505*^9}, 
   3.726941845317767*^9},ExpressionUUID->"a26495a2-5176-4911-8a80-\
32f91110c20c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]GenerateCodePackage\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.687226143261218*^9, 
  3.6872261481644983`*^9}},ExpressionUUID->"ac606045-aa71-4436-9b87-\
e011d34981c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GenerateCodePackage", "[", "nb_Notebook", "]"}], ":=", "\n", "\t", 
   RowBox[{"Insert", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"DeleteCases", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"nb", "/.", 
        RowBox[{"{", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Cell", "[", 
            RowBox[{"t__", ",", "\n", "\t\t\t\t\t", 
             RowBox[{"s", ":", 
              RowBox[{
              "\"\<Chapter\>\"", "|", "\"\<Section\>\"", "|", 
               "\"\<Subsection\>\"", "|", "\"\<Subsubsection\>\""}]}], ",", 
             "o__"}], "]"}], ":>", "\n", "\t\t\t\t\t", 
           RowBox[{"Cell", "[", 
            RowBox[{"t", ",", 
             RowBox[{"\"\<Code\>\"", "<>", "s"}], ",", "o"}], "]"}]}], ",", 
          "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"Cell", "[", 
            RowBox[{"e__", ",", "\"\<Code\>\"", ",", "o___"}], "]"}], ":>", 
           "\n", "\t", "\t", "\t\t\t", 
           RowBox[{"Cell", "[", 
            RowBox[{"e", ",", "\"\<CodeInput\>\"", ",", "o"}], "]"}]}]}], 
         "\n", "\t", "\t\t\t", "}"}]}], ",", "\n", "\t", "\t\t", 
       RowBox[{"StyleDefinitions", "\[Rule]", "_"}]}], "\n", "\t\t\t", "]"}], 
     ",", "\n", "\t\t", 
     RowBox[{"StyleDefinitions", "\[Rule]", "\n", "\t\t\t", 
      RowBox[{"appFEFile", "[", "\"\<CodePackage.nb\>\"", "]"}]}], ",", "\n", 
     "\t\t", "2"}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateCodePackage", "[", "nb_NotebookObject", "]"}], ":=", "\n",
    "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MatchQ", "[", 
        RowBox[{"#", ",", "_Notebook"}], "]"}], ",", 
       RowBox[{"CreateDocument", "@", "#"}], ",", "$Failed"}], "]"}], "&"}], 
    "@", "\n", "\t\t", 
    RowBox[{"GenerateCodePackage", "[", 
     RowBox[{"NotebookGet", "[", "nb", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateCodePackage", "[", 
    RowBox[{"f_String", "?", 
     RowBox[{"(", "FileExistsQ", ")"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nb", "=", 
       RowBox[{"NotebookOpen", "[", 
        RowBox[{"f", ",", 
         RowBox[{"Visible", "\[Rule]", "False"}]}], "]"}]}], "}"}], ",", "\n",
      "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"NotebookClose", "@", "nb"}], ";", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MatchQ", "[", 
              RowBox[{"#", ",", "_Notebook"}], "]"}], ",", 
             RowBox[{"CreateDocument", "@", "#"}], ",", "$Failed"}], "]"}], 
           "&"}], "@", "#"}]}], ")"}], "&"}], "@", "\n", "\t", "\t\t", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"GenerateCodePackage", "[", 
         RowBox[{"NotebookGet", "@", "nb"}], "]"}], ",", 
        RowBox[{"Visible", "\[Rule]", "_"}]}], "]"}]}]}], "\n", "\t\t", 
    "]"}]}], ";"}]}], "CodeInput",
 CellChangeTimes->{{3.699198789426134*^9, 3.699199167351899*^9}, {
  3.699199223593524*^9, 3.699199311423336*^9}, {3.699199354168172*^9, 
  3.699199390773604*^9}, {3.6991994679717083`*^9, 3.69919946993134*^9}, {
  3.7033476686334352`*^9, 3.7033476775765457`*^9}, {3.703347712717485*^9, 
  3.703347717999507*^9}, {3.703347844938141*^9, 
  3.703347845087556*^9}},ExpressionUUID->"5d3a670e-4a17-4340-ab95-\
3675adc9523c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]CleanStyledNotebook\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.6872264427536077`*^9, 
  3.687226448688509*^9}},ExpressionUUID->"bd19de91-97eb-4e1d-a58c-\
06aaeb740621"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$CleanStylingRules", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<CodeSection\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Section\>\"", ",", 
        RowBox[{"FrontEnd`InputGroup", "\[Rule]", "True"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<CodeInput\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Input\>\"", ",", 
        RowBox[{"AutoIndent", "\[Rule]", "True"}], ",", 
        RowBox[{"PageWidth", "\[Rule]", "\[Infinity]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<InputSection\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Input\>\"", ",", 
        RowBox[{"CellGroupingRules", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<SectionGrouping\>\"", ",", "40"}], "}"}]}]}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Section\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Section\>\"", ",", 
        RowBox[{"ShowGroupOpener", "\[Rule]", "True"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.687226184046227*^9, 3.6872262547820797`*^9}, {
  3.6872262933787622`*^9, 3.6872263665871983`*^9}, {3.701229026812191*^9, 
  3.701229030650445*^9}},ExpressionUUID->"f6cd55d8-4f4b-46c5-b299-\
da82ddaade8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CleanStyledNotebook", "[", "n_Notebook", "]"}], ":=", 
  "\[IndentingNewLine]", "\t", 
  RowBox[{"n", "/.", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cell", "[", 
        RowBox[{"e___", ",", 
         RowBox[{"First", "@", "#"}], ",", "o___"}], "]"}], "\[Rule]", 
       RowBox[{"Cell", "[", 
        RowBox[{"e", ",", 
         RowBox[{"Sequence", "@@", 
          RowBox[{"Last", "@", "#"}]}], ",", "o"}], "]"}]}], "&"}], "/@", 
     "$CleanStylingRules"}], ")"}]}]}]], "CodeInput",
 CellChangeTimes->{{3.687226155424094*^9, 3.68722618224059*^9}, {
  3.687226373844411*^9, 
  3.687226425954809*^9}},ExpressionUUID->"20188a6c-cf51-421c-a6da-\
e8e11bb143b8"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]DockedCells Helpers\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.6863468011801987`*^9, 
  3.6863468141719513`*^9}},ExpressionUUID->"07149e8b-3d99-48c9-a5f0-\
f36098f59937"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SetDockedCells", "]"}], "=", 
   RowBox[{"Options", "@", "Cell"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDockedCells", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"nb", ":", 
      RowBox[{"_NotebookObject", "|", "Automatic"}], ":", "Automatic"}], ",", 
     "\n", "\t", "expr_", ",", "\n", "\t", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n",
    "\t", 
   RowBox[{"SetOptions", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Replace", "[", 
      RowBox[{"nb", ",", 
       RowBox[{"Automatic", "\[RuleDelayed]", 
        RowBox[{"EvaluationNotebook", "[", "]"}]}]}], "]"}], ",", "\n", 
     "\t\t", 
     RowBox[{"DockedCells", "\[Rule]", 
      RowBox[{"Cell", "[", 
       RowBox[{
        RowBox[{"BoxData", "@", 
         RowBox[{"ToBoxes", "@", "expr"}]}], ",", "ops"}], "]"}]}]}], "\n", 
    "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearDockedCells", "[", 
    RowBox[{"nb", ":", 
     RowBox[{"_NotebookObject", "|", "Automatic"}], ":", "Automatic"}], "]"}],
    ":=", "\n", "\t", 
   RowBox[{"SetOptions", "[", 
    RowBox[{
     RowBox[{"Replace", "[", 
      RowBox[{"nb", ",", 
       RowBox[{"Automatic", "\[RuleDelayed]", 
        RowBox[{"EvaluationNotebook", "[", "]"}]}]}], "]"}], ",", 
     RowBox[{"DockedCells", "\[Rule]", "None"}]}], "]"}]}], 
  ";"}]}], "CodeInput",
 CellChangeTimes->{{3.686346819288776*^9, 3.686346917902748*^9}, {
  3.686347100935939*^9, 3.686347102807818*^9}, {3.686347385387538*^9, 
  3.686347404739747*^9}},ExpressionUUID->"e4ae1c2b-d5a3-4c7b-873c-\
7d133087d614"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EditDockedCells", "]"}], "=", 
   RowBox[{"Options", "@", "Cell"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EditDockedCells", "[", 
    RowBox[{
     RowBox[{"nb", ":", 
      RowBox[{"_NotebookObject", "|", "Automatic"}], ":", "Automatic"}], ",", 
     "\n", "\t", 
     RowBox[{"function", ":", 
      RowBox[{"Except", "[", 
       RowBox[{"_Rule", "|", "_RuleDelayed"}], "]"}], ":", "Identity"}], ",", 
     "\n", "\t", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"notebook", "=", 
       RowBox[{"Replace", "[", 
        RowBox[{"nb", ",", 
         RowBox[{"Automatic", "\[RuleDelayed]", 
          RowBox[{"EvaluationNotebook", "[", "]"}]}]}], "]"}]}], "}"}], ",", 
     "\n", "\t\t", 
     RowBox[{"SetOptions", "[", 
      RowBox[{"notebook", ",", "\n", "\t\t\t", 
       RowBox[{"DockedCells", "\[Rule]", 
        RowBox[{"Replace", "[", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"DockedCells", "/.", 
             RowBox[{"Options", "[", 
              RowBox[{"notebook", ",", "DockedCells"}], "]"}]}], ")"}], "/.", 
           "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"Cell", "[", 
             RowBox[{"b_BoxData", ",", "o___"}], "]"}], "\[RuleDelayed]", 
            RowBox[{"Cell", "[", 
             RowBox[{
              RowBox[{"BoxData", "@", 
               RowBox[{"ToBoxes", "@", 
                RowBox[{"function", "@", 
                 RowBox[{"ToExpression", "@", "b"}]}]}]}], ",", "o"}], 
             "]"}]}]}], ",", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"Cell", "[", 
            RowBox[{
             RowBox[{"e", ":", 
              RowBox[{
               RowBox[{"Except", "[", 
                RowBox[{"_Rule", "|", "_RuleDelayed"}], "]"}], "..."}]}], ",",
              "op___"}], "]"}], "\[RuleDelayed]", 
           RowBox[{"Cell", "[", 
            RowBox[{"e", ",", "ops", ",", "op"}], "]"}]}]}], "\n", "\t\t\t\t",
          "]"}]}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]}], "CodeInput",
 CellChangeTimes->{{3.686346925443368*^9, 3.686347023304298*^9}, {
  3.6863470839347973`*^9, 3.686347220279706*^9}, {3.686347271255003*^9, 
  3.6863474347541857`*^9}},ExpressionUUID->"16a5fe7a-e88c-41b7-bc59-\
a98b6c9e8054"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AvailableToolbars", "[", 
    RowBox[{"args_", ",", 
     RowBox[{"restrictKey_:", "\"\<bar\>\""}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Cases", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"FEResourceFind", "[", 
      RowBox[{"\"\<FEExpressions\>\"", ",", "args"}], "]"}], ",", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"r", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"_String", "?", 
          RowBox[{"(", 
           RowBox[{"StringContainsQ", "[", "restrictKey", "]"}], ")"}]}], 
         "\[Rule]", "_"}], ")"}]}], "\[RuleDelayed]", "r"}]}], "\n", "\t\t", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetToolbar", "[", 
    RowBox[{
     RowBox[{"nb", ":", 
      RowBox[{"_NotebookObject", "|", "Automatic"}], ":", "Automatic"}], ",", 
     "toolbarName_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"tb", "=", 
        RowBox[{"AvailableToolbars", "@", "toolbarName"}]}], ",", "\n", 
       "\t\t", 
       RowBox[{"notebook", "=", 
        RowBox[{"Replace", "[", 
         RowBox[{"nb", ",", 
          RowBox[{"Automatic", "\[RuleDelayed]", 
           RowBox[{"EvaluationNotebook", "[", "]"}]}]}], "]"}]}]}], "\n", 
      "\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{"SetOptions", "[", 
      RowBox[{"notebook", ",", "\n", "\t\t\t", 
       RowBox[{"DockedCells", "\[Rule]", 
        RowBox[{"Replace", "[", 
         RowBox[{"tb", ",", 
          RowBox[{"{", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "}"}], "\[RuleDelayed]", "None"}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"_", "->", 
                RowBox[{"b", ":", 
                 RowBox[{"Except", "[", 
                  RowBox[{"_Cell", "|", "_List"}], "]"}]}]}], ",", "___"}], 
              "}"}], "\[RuleDelayed]", 
             RowBox[{"Cell", "@", 
              RowBox[{"BoxData", "@", "b"}]}]}], ",", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"_", "\[Rule]", "e_"}], ",", "___"}], "}"}], 
             "\[RuleDelayed]", "e"}]}], "\n", "\t\t\t\t", "}"}]}], "]"}]}]}], 
      "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], ";"}]}], "CodeInput",
 CellChangeTimes->{{3.686347464966991*^9, 3.6863475160719147`*^9}, {
   3.6863475989271927`*^9, 3.686347632375826*^9}, {3.686347687504834*^9, 
   3.686347697030911*^9}, {3.686347751564528*^9, 3.686347752413883*^9}, {
   3.686347783938609*^9, 3.686347860329137*^9}, {3.686347900222938*^9, 
   3.6863479268434687`*^9}, {3.6863479611757402`*^9, 3.686347968186401*^9}, {
   3.686348222307482*^9, 3.686348244973447*^9}, 3.686348279015533*^9, {
   3.686348311112323*^9, 3.686348432959558*^9}, {3.68634857971668*^9, 
   3.686348581309939*^9}, 
   3.697416827096608*^9},ExpressionUUID->"47720c36-e84c-48da-90eb-\
0be7661146a3"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Selection and evaluation\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.686662717873302*^9, 
  3.686662727664173*^9}},ExpressionUUID->"2cec6a1e-50ba-490e-9618-\
258cb3c4d961"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectAbove", "[", 
    RowBox[{
     RowBox[{"cellBase", ":", 
      RowBox[{"_CellObject", "|", "Automatic"}], ":", "Automatic"}], ",", 
     RowBox[{"breakTest_:", "None"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cell", "=", 
       RowBox[{"Replace", "[", 
        RowBox[{"cellBase", ",", 
         RowBox[{"Automatic", "\[RuleDelayed]", 
          RowBox[{"EvaluationCell", "[", "]"}]}]}], "]"}]}], "}"}], ",", "\n",
      "\t\t", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"nb", "=", 
          RowBox[{"ParentNotebook", "@", "cell"}]}], ",", 
         RowBox[{"test", "=", "\n", "\t", "\t\t", 
          RowBox[{"Replace", "[", 
           RowBox[{"breakTest", ",", 
            RowBox[{"{", "\n", "\t", "\t\t\t\t\t", 
             RowBox[{
              RowBox[{"None", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "===", "cell"}], "&"}], ")"}]}], ",", "\n", 
              "\t", "\t\t\t\t\t\t", 
              RowBox[{"s_String", "\[RuleDelayed]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MatchQ", "[", 
                  RowBox[{
                   RowBox[{"NotebookRead", "[", "#", "]"}], ",", 
                   RowBox[{"Cell", "[", 
                    RowBox[{"_", ",", "s", ",", "___"}], "]"}]}], "]"}], 
                 "&"}], ")"}]}]}], "\n", "\t", "\t\t\t\t\t", "}"}]}], 
           "]"}]}]}], "}"}], ",", "\n", "\t", "\t\t", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cellChunks", "=", 
           RowBox[{"SplitBy", "[", 
            RowBox[{
             RowBox[{"Cells", "@", "nb"}], ",", "test"}], "]"}]}], "}"}], ",",
          "\n", "\t", "\t\t\t", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"cells", "=", "\n", "\t", "\t\t\t\t", 
             RowBox[{"Replace", "[", "\n", "\t", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"FirstCase", "[", 
                RowBox[{"cellChunks", ",", 
                 RowBox[{"_", "?", 
                  RowBox[{"(", 
                   RowBox[{"MemberQ", "[", "cell", "]"}], ")"}]}]}], "]"}], 
               ",", "\n", "\t", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"cell", ",", "___"}], "}"}], "\[RuleDelayed]", "\n", 
                "\t", "\t\t\t\t\t\t", 
                RowBox[{"cellChunks", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"First", "@", 
                    RowBox[{"First", "@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"cellChunks", ",", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{"MemberQ", "[", "cell", "]"}], ")"}]}]}], 
                    "]"}]}]}], "-", "1"}], "]"}], "]"}]}]}], "\n", "\t", 
              "\t\t\t\t\t", "]"}]}], "}"}], ",", "\n", "\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"SelectionMove", "[", 
             RowBox[{"cell", ",", "Before", ",", "Cell"}], "]"}], ";", "\n", 
            "\t", "\t\t\t\t\t", 
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{"FrontEndTokenExecute", "[", 
               RowBox[{"nb", ",", "\"\<SelectPreviousLine\>\""}], "]"}], ",", 
              
              RowBox[{"Length", "@", "cells"}]}], "]"}], ";"}]}], "\n", "\t", 
          "\t\t\t\t\t", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"SelectionMove", "[", 
             RowBox[{"cell", ",", "Before", ",", "Cell"}], "]"}], ";"}], 
           "*)"}], "\n", "\t", "\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "]"}]}],
       "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], ";"}]], "CodeInput",
 CellChangeTimes->{
  3.6866581758591948`*^9, {3.68665835006074*^9, 3.686658618194105*^9}, {
   3.686658649378368*^9, 3.686658750694315*^9}, {3.686658807849078*^9, 
   3.6866590468335037`*^9}, {3.686659120463676*^9, 3.686659150781109*^9}, {
   3.686662839014081*^9, 3.6866629309244423`*^9}, {3.686978224571178*^9, 
   3.686978225617079*^9}, {3.687186641340069*^9, 3.687186654015329*^9}, 
   3.687215566848878*^9, {3.6872156286742907`*^9, 3.687215674934181*^9}, {
   3.687215900784176*^9, 3.687215915298802*^9}, {3.6872159780449657`*^9, 
   3.687216015183185*^9}, {3.687216088935192*^9, 
   3.687216113324052*^9}},ExpressionUUID->"87815c96-353e-4c13-bffe-\
200f9ca498ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvaluateAbove", "[", 
    RowBox[{
     RowBox[{"cellBase", ":", 
      RowBox[{"_CellObject", "|", "Automatic"}], ":", "Automatic"}], ",", 
     RowBox[{"breakTest_:", "None"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cell", "=", 
       RowBox[{"Replace", "[", 
        RowBox[{"cellBase", ",", 
         RowBox[{"Automatic", "\[RuleDelayed]", 
          RowBox[{"EvaluationCell", "[", "]"}]}]}], "]"}]}], "}"}], ",", "\n",
      "\t\t", 
     RowBox[{
      RowBox[{"SelectAbove", "[", 
       RowBox[{"cell", ",", "breakTest"}], "]"}], ";", "\n", "\t", "\t", 
      RowBox[{"FrontEndTokenExecute", "[", 
       RowBox[{
        RowBox[{"ParentNotebook", "@", "cell"}], ",", 
        "\"\<EvaluateCells\>\""}], "]"}], ";", "\n", "\t\t", 
      RowBox[{"SelectionMove", "[", 
       RowBox[{"cellBase", ",", "After", ",", "Cell"}], "]"}], ";"}]}], "\n", 
    "\t\t", "]"}]}], ";"}]], "CodeInput",
 CellChangeTimes->{
  3.6866581758591948`*^9, {3.68665835006074*^9, 3.686658618194105*^9}, {
   3.686658649378368*^9, 3.686658750694315*^9}, {3.686658807849078*^9, 
   3.6866590468335037`*^9}, {3.686659120463676*^9, 3.686659150781109*^9}, {
   3.686662839014081*^9, 3.686662946638892*^9}, {3.6869782198415318`*^9, 
   3.686978221207107*^9}, {3.6872160222088423`*^9, 3.687216052224758*^9}, 
   3.687216115400866*^9, {3.688919159670793*^9, 
   3.688919169317905*^9}},ExpressionUUID->"a9fd19bb-8f93-4978-bec6-\
edc043c47eb4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SelectBelow", "[", 
    RowBox[{
     RowBox[{"cellObject_:", "Automatic"}], ",", 
     RowBox[{"breakTest_:", "None"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cell", "=", 
       RowBox[{"Replace", "[", 
        RowBox[{"cellObject", ",", 
         RowBox[{"Automatic", "\[RuleDelayed]", 
          RowBox[{"EvaluationCell", "[", "]"}]}]}], "]"}]}], "}"}], ",", "\n",
      "\t\t", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"nb", "=", 
          RowBox[{"ParentNotebook", "@", "cell"}]}], ",", 
         RowBox[{"test", "=", "\n", "\t\t\t", 
          RowBox[{"Replace", "[", 
           RowBox[{"breakTest", ",", 
            RowBox[{"{", "\n", "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{"None", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "===", "cell"}], "&"}], ")"}]}], ",", "\n", 
              "\t\t\t\t\t\t", 
              RowBox[{"s_String", "\[RuleDelayed]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MatchQ", "[", 
                  RowBox[{
                   RowBox[{"NotebookRead", "[", "#", "]"}], ",", 
                   RowBox[{"Cell", "[", 
                    RowBox[{"_", ",", "s", ",", "___"}], "]"}]}], "]"}], 
                 "&"}], ")"}]}]}], "\n", "\t\t\t\t\t\t", "}"}]}], "]"}]}]}], 
        "}"}], ",", "\n", "\t\t\t", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cellChunks", "=", 
           RowBox[{"SplitBy", "[", 
            RowBox[{
             RowBox[{"Cells", "@", "nb"}], ",", "test"}], "]"}]}], "}"}], ",",
          "\n", "\t\t\t\t", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"cells", "=", "\n", "\t\t\t\t\t", 
             RowBox[{"Replace", "[", 
              RowBox[{
               RowBox[{"FirstCase", "[", 
                RowBox[{"cellChunks", ",", 
                 RowBox[{"_", "?", 
                  RowBox[{"(", 
                   RowBox[{"MemberQ", "[", "cell", "]"}], ")"}]}]}], "]"}], 
               ",", "\n", "\t\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"___", ",", "cell"}], "}"}], "\[RuleDelayed]", "\n", 
                "\t\t\t\t\t\t\t\t", 
                RowBox[{"cellChunks", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"First", "@", 
                    RowBox[{"First", "@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"cellChunks", ",", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{"MemberQ", "[", "cell", "]"}], ")"}]}]}], 
                    "]"}]}]}], "+", "1"}], "]"}], "]"}]}]}], "\n", 
              "\t\t\t\t\t\t\t", "]"}]}], "}"}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"SelectionMove", "[", 
             RowBox[{"cell", ",", "After", ",", "Cell"}], "]"}], ";", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{"FrontEndTokenExecute", "[", 
               RowBox[{"nb", ",", "\"\<SelectNextLine\>\""}], "]"}], ",", 
              RowBox[{"Length", "@", "cells"}]}], "]"}], ";"}]}], "\n", 
          "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", 
      "]"}]}], "\n", "\t\t", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EvaluateBelow", "[", 
    RowBox[{
     RowBox[{"cell_:", "Automatic"}], ",", 
     RowBox[{"breakTest_:", "None"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", "=", 
       RowBox[{"Replace", "[", 
        RowBox[{"cell", ",", 
         RowBox[{"Automatic", "\[RuleDelayed]", 
          RowBox[{"EvaluationCell", "[", "]"}]}]}], "]"}]}], "}"}], ",", "\n",
      "\t", "\t", 
     RowBox[{
      RowBox[{"SelectBelow", "[", 
       RowBox[{"c", ",", "breakTest"}], "]"}], ";", "\n", "\t", "\t", 
      RowBox[{"FrontEndTokenExecute", "[", 
       RowBox[{
        RowBox[{"ParentNotebook", "@", "c"}], ",", "\"\<EvaluateCells\>\""}], 
       "]"}], ";", "\n", "\t\t", 
      RowBox[{"SelectionMove", "[", 
       RowBox[{"cell", ",", "After", ",", "Cell"}], "]"}], ";"}]}], "\n", 
    "\t\t", "]"}]}], ";"}]}], "CodeInput",
 CellChangeTimes->{
  3.6866581758591948`*^9, {3.68665835006074*^9, 3.686658618194105*^9}, {
   3.686658649378368*^9, 3.686658750694315*^9}, {3.686658807849078*^9, 
   3.6866590468335037`*^9}, {3.686659120463676*^9, 3.686659150781109*^9}, {
   3.6866591821459084`*^9, 3.686659237179296*^9}, {3.6866592808897877`*^9, 
   3.6866593338964043`*^9}, {3.686662959237166*^9, 3.686663003927903*^9}, {
   3.6866636062462997`*^9, 3.686663641418775*^9}, {3.687216062929091*^9, 
   3.687216064934371*^9}, {3.6889191761659727`*^9, 
   3.688919180027978*^9}},ExpressionUUID->"581e7e33-0933-4ee5-8b90-\
a9079b24852f"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Saving stuff\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.692457081200148*^9, 
  3.692457082767825*^9}},ExpressionUUID->"9c377c4c-6257-480e-956b-\
dc6357fee966"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NotebookSaveRename", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"f1", ":", 
     RowBox[{"_NotebookObject", "|", 
      RowBox[{"_String", "?", "FileExistsQ"}]}]}], ",", "\n", "\t", 
    "f2_String", ",", "\n", "\t", 
    RowBox[{"type", ":", 
     RowBox[{"_String", "|", "Automatic"}], ":", "Automatic"}]}], "\n", "\t", 
   "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"nb", "=", 
       RowBox[{"Replace", "[", 
        RowBox[{"f1", ",", 
         RowBox[{"_String", "\[RuleDelayed]", 
          RowBox[{"NotebookOpen", "[", 
           RowBox[{"f1", ",", 
            RowBox[{"Visible", "\[Rule]", "False"}]}], "]"}]}]}], "]"}]}], 
      ",", "\n", "\t\t", 
      RowBox[{"t", "=", 
       RowBox[{"Replace", "[", 
        RowBox[{"type", ",", "\n", "\t\t\t", 
         RowBox[{"Automatic", "\[RuleDelayed]", "\n", "\t\t\t\t", 
          RowBox[{"Switch", "[", 
           RowBox[{
            RowBox[{"FileExtension", "@", "f2"}], ",", "\n", "\t\t\t\t\t", 
            "\"\<nb\>\"", ",", "\n", "\t\t\t\t\t\t", "\"\<Notebook\>\"", ",", 
            "\n", "\t\t\t\t\t", 
            RowBox[{"\"\<m\>\"", "|", "\"\<wl\>\""}], ",", "\n", 
            "\t\t\t\t\t\t", "\"\<Package\>\"", ",", "\n", "\t\t\t\t\t", 
            "\"\<pdf\>\"", ",", "\n", "\t\t\t\t\t\t", "\"\<PDF\>\"", ",", 
            "\n", "\t\t\t\t\t", "\"\<xmL\>\"", ",", "\n", "\t\t\t\t\t\t", 
            "\"\<XML\>\"", ",", "\n", "\t\t\t\t\t", "\"\<rtf\>\"", ",", "\n", 
            "\t\t\t\t\t\t", "\"\<RichText\>\"", ",", "\n", "\t\t\t\t\t", 
            "\"\<ps\>\"", ",", "\n", "\t\t\t\t\t\t", "\"\<PostScript\>\"", 
            ",", "\n", "\t\t\t\t\t", "\"\<tex\>\"", ",", "\n", 
            "\t\t\t\t\t\t", "\"\<LaTeX\>\"", ",", "\n", "\t\t\t\t\t", "_", 
            ",", "\n", "\t\t\t\t\t\t", "\"\<Text\>\""}], "\n", "\t\t\t\t\t", 
           "]"}]}]}], "\n", "\t\t\t\t", "]"}]}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"FrontEndTokenExecute", "[", 
      RowBox[{
      "nb", ",", "\n", "\t\t\t", "\"\<SaveRename\>\"", ",", "\n", "\t", "\t", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ExpandFileName", "@", "f2"}], ",", "t"}], "}"}]}], "\n", 
      "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MatchQ", "[", 
        RowBox[{"f1", ",", "_String"}], "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"NotebookClose", "@", "nb"}]}], "\n", "\t\t\t", "]"}], ";", 
     "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FileExistsQ", "@", "f2"}], ",", "\n", "\t\t\t", 
       RowBox[{"ExpandFileName", "@", "f2"}], ",", "\n", "\t\t\t", 
       "$Failed"}], "]"}]}]}], "\n", "\t\t", "]"}]}]], "CodeInput",
 CellChangeTimes->{{3.692457083543371*^9, 3.692457251577464*^9}, {
  3.6924573770384912`*^9, 3.69245755132244*^9}, {3.6924576435429983`*^9, 
  3.692457646699535*^9}, {3.692457697467691*^9, 
  3.6924576978099737`*^9}},ExpressionUUID->"00cf38d9-c13a-4158-9c70-\
c6aef5867a64"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]formatting\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.685381353323016*^9, 
  3.685381357234295*^9}},ExpressionUUID->"230f880f-5e01-4fb5-a98d-\
49fe3b9a6bf2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lengthZeroQ", "[", 
   RowBox[{
    RowBox[{"(", "_", ")"}], "[", "__", "]"}], "]"}], ":=", "False"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"lengthZeroQ", "[", "_", "]"}], ":=", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lengthZeroQ", "~", "SetAttributes", "~", "HoldAllComplete"}], 
  ";"}]}], "CodeInput",
 CellChangeTimes->{{3.685378891706975*^9, 
  3.6853789857143593`*^9}},ExpressionUUID->"cb94a346-01a9-477a-93ce-\
62bada28751a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pythonAtomicExprs", "=", 
   RowBox[{"(", "\n", "\t", 
    RowBox[{
     RowBox[{"_", "?", "lengthZeroQ"}], "|", "\n", "\t", "_Set", "|", "\n", 
     "\t", "_Rule", "|", "\n", "\t", "_SetDelayed", "|", "\n", "\t", 
     "_RuleDelayed", "|", "\n", "\t", "_Row", "|", "\n", "\t", "_List"}], 
    "\n", "\t", ")"}]}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.685377536294182*^9, 3.6853775433684483`*^9}, {
  3.685377582241344*^9, 3.685377600142914*^9}, {3.68537763074223*^9, 
  3.6853777831299677`*^9}, {3.685377814121139*^9, 3.685377841098423*^9}, {
  3.685377873755555*^9, 3.685377906153428*^9}, {3.685377939096507*^9, 
  3.685377961807762*^9}, {3.685378017807919*^9, 3.685378024754908*^9}, {
  3.6853780762384577`*^9, 3.6853781763701963`*^9}, {3.685378818563931*^9, 
  3.685378931199139*^9}, {3.6853790190268507`*^9, 3.685379019745059*^9}, {
  3.6853804777405663`*^9, 
  3.685380495194106*^9}},ExpressionUUID->"108f4c2d-b820-4d36-a570-\
30c46378256e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pythonAtomicExprs", "=", "pythonAtomicExprs"}], "}"}], ",", 
    "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Format", "[", 
       RowBox[{"pythonForm", "[", 
        RowBox[{"code_", ",", 
         RowBox[{"depth_:", "1"}]}], "]"}], "]"}], ":=", "\n", "\t\t", 
      RowBox[{"Interpretation", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"TextCell", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"tabination", "=", 
              RowBox[{"\"\<\\n\>\"", "<>", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"depth", ">", "0"}], "//", "TrueQ"}], ",", "\n", 
                 "\t\t\t\t\t\t\t\t\t\t\t\t", 
                 RowBox[{"StringRepeat", "[", 
                  RowBox[{"\"\<\\t\>\"", ",", "depth"}], "]"}], ",", "\n", 
                 "\t\t\t\t\t\t\t\t\t\t\t\t", "\"\<\>\""}], "]"}]}]}], "}"}], 
            ",", "\n", "\t\t\t\t", 
            RowBox[{"Replace", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Hold", "[", "code", "]"}], "/.", 
               RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                  "\"\<\\n\>\"", "|", "\"\<\\t\>\"", "|", 
                   "\"\<\[IndentingNewLine]\>\""}], ")"}], "\[Rule]", 
                 "\"\<\>\""}], "\n", "\t\t\t\t\t\t\t\t\t\t\t", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"HoldPattern", "[", 
                   RowBox[{"h_", "[", 
                    RowBox[{"a___", ",", 
                    RowBox[{"CompoundExpression", "[", "e__", "]"}], ",", 
                    "b___"}], "]"}], "]"}], "\[RuleDelayed]", 
                  RowBox[{"h", "[", 
                   RowBox[{"a", ",", "e", ",", "b"}], "]"}]}], "*)"}], "\n", 
                "\t\t\t\t\t\t\t\t\t\t\t", "}"}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{"{", "\n", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"a", ":", 
                  RowBox[{"Hold", "@", "pythonAtomicExprs"}]}], 
                 "\[RuleDelayed]", 
                 RowBox[{"ReplacePart", "[", 
                  RowBox[{"a", ",", 
                   RowBox[{"0", "\[Rule]", "HoldForm"}]}], "]"}]}], ",", "\n",
                 "\t\t\t\t\t", 
                RowBox[{"e_", "\[RuleDelayed]", 
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"eval", "=", 
                    RowBox[{
                    RowBox[{"MapAt", "[", 
                    RowBox[{"pythonForm", ",", 
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{"e", ",", 
                    RowBox[{"0", "\[Rule]", "HoldForm"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"2", ";;"}]}], "}"}]}], "]"}], "/.", "\n", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{"pythonForm", "[", "c_", "]"}], "]"}], 
                    "\[RuleDelayed]", 
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{"tabination", ",", 
                    RowBox[{"pythonForm", "[", 
                    RowBox[{"c", ",", 
                    RowBox[{"depth", "+", "1"}]}], "]"}]}], "}"}]}]}]}]}], 
                    "}"}], ",", "\n", "\t\t\t\t\t\t\t\t", 
                   RowBox[{"eval", "/;", "True"}]}], "]"}]}]}], "\n", 
               "\t\t\t\t\t", "}"}]}], "]"}]}], "\n", "\t\t\t\t", "]"}], 
          RowBox[{"(*", 
           RowBox[{"/.", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"HoldPattern", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"h", ":", 
                  RowBox[{"Except", "[", 
                   RowBox[{
                   "Times", "|", "HoldForm", "|", "Set", "|", "SetDelayed"}], 
                   "]"}]}], ")"}], "[", "e___", "]"}], "]"}], 
              "\[RuleDelayed]", 
              RowBox[{"h", "[", 
               RowBox[{"Times", "[", "e", "]"}], "]"}]}], ")"}]}], "*)"}], 
          ",", "\n", "\t\t\t", "\"\<Output\>\"", ",", "\n", "\t\t\t", 
          RowBox[{"Deployed", "\[Rule]", "True"}]}], "]"}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"Defer", "@", "code"}]}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"pythonForm", "~", "SetAttributes", "~", "HoldFirst"}]}]}], "\n",
    "]"}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.685377536294182*^9, 3.6853775433684483`*^9}, {
   3.685377582241344*^9, 3.685377600142914*^9}, {3.68537763074223*^9, 
   3.6853777831299677`*^9}, {3.685377814121139*^9, 3.685377841098423*^9}, {
   3.685377873755555*^9, 3.685377906153428*^9}, {3.685377939096507*^9, 
   3.685377961807762*^9}, {3.685378017807919*^9, 3.685378024754908*^9}, {
   3.6853780762384577`*^9, 3.685378388811898*^9}, {3.685378423900854*^9, 
   3.685378468413396*^9}, {3.685378530876061*^9, 3.685378583682097*^9}, {
   3.685378624452523*^9, 3.685378669939825*^9}, {3.685379033193409*^9, 
   3.68537905147289*^9}, {3.685379087292856*^9, 3.685379372659679*^9}, 
   3.685379409421554*^9, {3.685379468737649*^9, 3.6853795546290293`*^9}, {
   3.68537959845864*^9, 3.685379865082197*^9}, {3.6853799020917463`*^9, 
   3.685379905307246*^9}, {3.685379945511438*^9, 3.6853801273488398`*^9}, {
   3.685380172987198*^9, 3.685380203954761*^9}, {3.685380266666314*^9, 
   3.685380349070983*^9}, {3.685380395903524*^9, 3.685380449116707*^9}, {
   3.685380510684214*^9, 3.6853806184881353`*^9}, {3.685380670636183*^9, 
   3.685380854816393*^9}, {3.6853809021909924`*^9, 3.68538098747641*^9}, {
   3.685381020397996*^9, 3.685381187459552*^9}, 3.685381247862748*^9, {
   3.685381290987377*^9, 
   3.685381297247469*^9}},ExpressionUUID->"fb3f7bdc-172c-4cba-aae0-\
0586e5942329"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Templates\[RightFloor]", "CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7051919302274218`*^9, 
  3.705191931379286*^9}},ExpressionUUID->"1db50f4b-4705-4eca-8a69-\
a1cb9ee9df3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PaletteTemplateNotebook", "[", 
   RowBox[{"title_:", "None"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"CreateDocument", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"Import", "@", "\n", "\t\t\t", 
     RowBox[{"PackageFilePath", "[", 
      RowBox[{"\"\<Templates\>\"", ",", "\"\<PaletteTemplate.nb\>\""}], 
      "]"}]}], "/.", "\n", "\t\t\t\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"StringQ", "@", "title"}]}], ",", "\n", "\t\t\t\t\t", 
      RowBox[{"{", "\n", "\t\t\t\t\t\t", 
       RowBox[{
        RowBox[{"Cell", "[", "\n", "\t\t\t\t\t\t\t", 
         RowBox[{
          RowBox[{"d_", "?", 
           RowBox[{"(", "\n", "\t", "\t\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Not", "@", 
              RowBox[{"FreeQ", "[", "\n", "\t", "\t\t\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{"Flatten", "@", 
                 RowBox[{"{", "#", "}"}]}], ",", "\n", "\t", 
                "\t\t\t\t\t\t\t\t", 
                RowBox[{"_String", "?", 
                 RowBox[{"(", "\n", "\t", "\t\t\t\t\t\t\t\t\t", 
                  RowBox[{"StringContainsQ", "[", 
                   RowBox[{
                   "\"\<$PaletteTitle$\>\"", "|", "\"\<$PaletteName$\>\""}], 
                   "]"}], "\n", "\t", "\t\t\t\t\t\t\t\t\t", ")"}]}]}], 
               "]"}]}], "\n", "\t", "\t\t\t\t\t\t\t", "&"}], ")"}]}], ",", 
          "\n", "\t", "\t\t\t\t\t\t", "e__"}], "\n", "\t", "\t\t\t\t\t\t", 
         "]"}], ":>", "\n", "\t", "\t\t\t\t\t\t", 
        RowBox[{"Cell", "[", "\n", "\t", "\t\t\t\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MatchQ", "[", 
              RowBox[{"d", ",", "_String"}], "]"}], ",", "\n", "\t", 
             "\t\t\t\t\t\t\t\t", 
             RowBox[{"TextData", "[", "d", "]"}], ",", "\n", 
             "\t\t\t\t\t\t\t\t\t", "d"}], "\n", "\t\t\t\t\t\t\t\t\t", "]"}], "/.",
            "\n", "\t\t\t\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"s_String", "?", 
             RowBox[{"(", "\n", "\t", "\t\t\t\t\t\t\t\t\t", 
              RowBox[{"StringContainsQ", "[", 
               RowBox[{
               "\"\<$PaletteTitle$\>\"", "|", "\"\<$PaletteName$\>\""}], 
               "]"}], "\n", "\t", "\t\t\t\t\t\t\t\t\t", ")"}]}], ":>", "\n", 
            "\t\t\t\t\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Function", "[", "\n", "\t\t\t\t\t\t\t\t\t\t\t", 
              RowBox[{"#", "/.", 
               RowBox[{
               "b_Placeholder", ":>", "\n", "\t\t\t\t\t\t\t\t\t\t\t\t", 
                RowBox[{"Cell", "@", 
                 RowBox[{"BoxData", "@", 
                  RowBox[{"ToBoxes", "@", "b"}]}]}]}]}], "\n", 
              "\t\t\t\t\t\t\t\t\t\t\t", "]"}], "[", "\n", 
             "\t\t\t\t\t\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MatchQ", "[", 
                 RowBox[{"d", ",", "_String"}], "]"}], ",", "\n", 
                "\t\t\t\t\t\t\t\t\t\t\t\t", "Identity", ",", "\n", 
                "\t\t\t\t\t\t\t\t\t\t\t\t", "RowBox"}], "\n", 
               "\t\t\t\t\t\t\t\t\t\t\t\t", "]"}], "[", "\n", 
              "\t\t\t\t\t\t\t\t\t\t\t\t", 
              RowBox[{"List", "@@", "\n", "\t\t\t\t\t\t\t\t\t\t\t\t\t", 
               RowBox[{"StringReplace", "[", 
                RowBox[{"s", ",", 
                 RowBox[{
                 "{", "\n", "\t", "\t", "\t", "\t\t\t\t\t\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{
                   "\"\<$PaletteTitle$\>\"", "->", "\n", "\t", 
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"Placeholder", "[", "\"\<Title\>\"", "]"}]}], ",",
                    "\n", "\t", "\t\t\t\t\t\t\t\t\t\t\t\t\t", 
                   RowBox[{
                   "\"\<$PaletteName$\>\"", "->", "\n", "\t", 
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"Placeholder", "[", "\"\<Name\>\"", "]"}]}]}], 
                  "\n", "\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "}"}]}], "]"}]}], 
              "\n", "\t\t\t\t\t\t\t\t\t\t\t\t", "]"}], "\n", 
             "\t\t\t\t\t\t\t\t\t\t\t", "]"}]}]}], ",", "\n", 
          "\t\t\t\t\t\t\t\t", "e"}], "\n", "\t\t\t\t\t\t\t\t", "]"}]}], "\n", 
       "\t\t\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t", 
      RowBox[{"{", "\n", "\t\t\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"s_String", "?", 
          RowBox[{"(", 
           RowBox[{"StringContainsQ", "[", "\"\<$PaletteTitle$\>\"", "]"}], 
           ")"}]}], ":>", "\n", "\t", "\t\t\t\t\t", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"s", ",", "\n", "\t", "\t\t\t\t\t\t", 
           RowBox[{"\"\<$PaletteTitle$\>\"", "\[Rule]", "title"}]}], "\n", 
          "\t\t\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"s_String", "?", 
          RowBox[{"(", 
           RowBox[{"StringContainsQ", "[", "\"\<$PaletteName$\>\"", "]"}], 
           ")"}]}], ":>", "\n", "\t", "\t\t\t\t\t", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"s", ",", "\n", "\t\t\t\t\t\t\t", 
           RowBox[{"\"\<$PaletteName$\>\"", "->", "\n", "\t\t\t\t\t\t\t\t", 
            RowBox[{"StringReplace", "[", 
             RowBox[{"title", ",", "\n", "\t\t\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"Except", "[", 
                RowBox[{"\"\<$\>\"", "|", "WordCharacter"}], "]"}], 
               "\[Rule]", "\"\<\>\""}]}], "\n", "\t\t\t\t\t\t\t\t\t", 
             "]"}]}]}], "\n", "\t\t\t\t\t\t\t", "]"}]}]}], "\n", "\t\t\t\t\t",
        "}"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t", 
   "]"}]}]], "CodeInput",
 CellChangeTimes->{{3.705191935338468*^9, 3.7051920658726597`*^9}, {
  3.705192386859263*^9, 3.705192406944068*^9}, {3.705192486182497*^9, 
  3.7051925140031557`*^9}, {3.7051925542345657`*^9, 3.7051925921003838`*^9}, {
  3.705192646066051*^9, 3.705192678494038*^9}, {3.70519271442784*^9, 
  3.705192732931624*^9}, {3.7051928912477303`*^9, 3.7051928971321373`*^9}, {
  3.705192981793734*^9, 3.705193167379438*^9}, {3.705193204260597*^9, 
  3.7051932903281*^9}, {3.709989564444953*^9, 3.7099895755771923`*^9}, {
  3.710002724810691*^9, 
  3.7100027257667*^9}},ExpressionUUID->"871ee9dc-33e7-45c5-931b-905cd884d2d1"]\

}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"f1e71fcd-d477-4adf-b37c-\
5ce91bda0e45"]
}, Open  ]],

Cell["", "SectionSeparator",ExpressionUUID->"2f9082be-65cc-4840-be68-\
b6c9cc68a203"]
},
WindowSize->{807, 829},
WindowMargins->{{249, Automatic}, {Automatic, 0}},
TaggingRules->{"SearchTextTranslated" -> "", "LinkTrails" -> ""},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"BTools"}, "CodePackage.nb", 
  CharacterEncoding -> "UTF-8"]
]

