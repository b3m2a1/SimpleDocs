(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



TutorialNotebook::usage=
	"Formats a tutorial notebook from a spec";


DocGenGenerateTutorial::usage=
	"Generates a tutorial from a spec or from a template";


TutorialContextTemplate::usage=
	"Generates a template that autofills with all the function in a context";
TutorialTemplate::usage=
	"Generates a template to build a tutorial from";


Begin["`Private`"];


$DocGenDirectory (* To invoke the autoloader *)


(* ::Subsubsection::Closed:: *)
(*Items*)



tutorialChunk["Section",text_,ops___]:=
	Cell[text,"Section",ops];
tutorialChunk["Emphasis",text_,ops___]:=
	Cell[text,"TextEmphasisNote",ops];
tutorialChunk["Text",text_,ops___]:=
	Cell[parseRefText@text,"Text",ops];
tutorialChunk["Input",text_,ops___]:=
	Cell[text,"Input",ops];
tutorialChunk["Output",text_,ops___]:=
	Cell[text,"Output",ops];
tutorialChunk["Picture",img_,ops___]:=
	Cell[img,"Picture",ops];
tutorialChunk["Caption",img_,ops___]:=
	Cell[img,"Caption",ops];


tutorialChunk["Grid",grid_,ops___]:=
	If[Length@grid>0,
		With[{ml=Max@Map[Length,grid]},
			Cell[
				BoxData[GridBox[
						PadRight[#,ml,""]&/@
							MapIndexed[
								If[Last@#2===1,
									parseRefText[#],
									Replace[parseRefText[#],{
										(d:_TextData|_BoxData|_String)|Cell[d_,___]:>
											Cell[d,"TableText"],
										e_:>
											Cell[BoxData[e],"TableText"]
										}]
									]&,
								grid,
								{2}
								]
							]
						],
				"DefinitionBox",
				ops
				]
			],
		Sequence@@{}
		]


tutorialJumpLinkIcon=ToBoxes@Image[RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}}}], "Byte", ColorSpace -> "RGB", ImageSize -> {8, 9}, Interleaving -> True, MetaInformation -> Association["Comments" -> Association["Software" -> "Adobe ImageReady"]]];
tutroialJumpLinkIconActive=ToBoxes@Image[RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], "Byte", ColorSpace -> "RGB", ImageSize -> {8, 9}, Interleaving -> True];
tutorialChunk["JumpLink",title_,to_,ops___]:=
	TemplateBox[{
    Cell[title],to,
    	tutorialJumpLinkIcon,
    	tutroialJumpLinkIconActive
    },
    "GrayLinkWithIcon",
    BaseStyle->{"TutorialJumpBoxLink"}];
tutorialChunk["LinkColumns",rawLinks_,n_,ops___]:=
	With[{links=
		Replace[rawLinks,
			(title_->to_):>
				tutorialChunk["JumpLink",title,to],
			1
			]
		},
 	Cell[
 		BoxData[
 			GridBox[
		 		Transpose@{
		 			Take[links,n],
			 		PadRight[Take[links,{n+1,-1}],n,""]
			 		}
		 		]
			],
 		"TutorialJumpBox",
 		ops]
 	];


tutorialChunk[data_->style_]:=
	tutorialChunk[style,data]
tutorialChunk[data:_TextData|_String]:=
	tutorialChunk["Text",data];
tutorialChunk[data_BoxData]:=
	tutorialChunk["Input",data];
tutorialChunk[data_List]:=
	If[MatchQ[data, {_Rule, ___}],
		tutorialChunk["LinkColumns",data,
			Ceiling[Length@data/2]
			],
		tutorialChunk["Grid",data]
		];
tutorialChunk[Cell[d_,style_,ops___]]:=
	tutorialChunk[
		Replace[style,{
			"TutorialInput"->"Input",
			"TutorialOutput"->"Output",
			"TutorialText"->"Text",
			"TutorialJumpLink"->"JumpLink",
			"TutorialImage"->"Picture",
			"TutorialCaption"->"Caption",
			"TutorialSubsection"->
				"Section"
			}],
		d,
		ops]


iTutorialSections[subsections_]:=
	Cell[CellGroupData[
		tutorialChunk/@
			(subsections)
		]];


(* ::Subsubsection::Closed:: *)
(*Anchor bar*)



iTutorialAnchorBar[name_,fs_,guides_,tuts_]:=
	Cell[
		BoxData@
			ToBoxes@
				Grid[{{
					Grid[{{
						Item[
							Row@{
								Spacer[8],
								RawBoxes@Cell["TUTORIAL","PacletNameCell"],
								Spacer[8]
								},
							Background->docTypeColor["TUTORIAL"],
							ItemSize->Full]
							}},
						Alignment->{Automatic,Center},
						ItemSize->{{Full,Scaled[0.02`]},2.5}],
					RawBoxes@
						Cell[
							TextData@
								Riffle[{
									Cell[
										BoxData@
											ActionMenuBox[Cell@TextData@{"Related Tutorials","  ",docArrow},
												generateGuideRefs[tuts],
												Appearance->None,MenuAppearance->Automatic,
												BaseStyle->"AnchorBarActionMenu",
												MenuStyle->"RelatedTutorialsSection"
												]
										],
									Cell[
										BoxData@
											ActionMenuBox[Cell@TextData@{"Related Guides","  ",docArrow},
												generateGuideRefs[guides],
												Appearance->None,MenuAppearance->Automatic,
												BaseStyle->"AnchorBarActionMenu",
												MenuStyle->"TutorialMoreAboutSection"
												]
										],
									Cell[
										BoxData@
											ActionMenuBox[Cell@TextData@{"Functions","  ",docArrow},
												generateSymRefs[fs],
												Appearance->None,MenuAppearance->Automatic,
												BaseStyle->"AnchorBarActionMenu",
												MenuStyle->"GuideFunction"
												]
										],
									Cell[
										BoxData@
											ActionMenuBox[Cell@TextData@{"URL","  ",docArrow},
												generateUrlRefs[name],
												Appearance->None,MenuAppearance->Automatic,
												BaseStyle->"AnchorBarActionMenu",
												MenuStyle->"URLMenu"
												]
										]
									},
								"\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]"
								],
							"AnchorBar"]
					}},
				ItemSize->{{Scaled[0.35`],{Scaled[0.65`]}}, Automatic},
				Alignment->{{Left,Right},Center}
				],
		"AnchorBarGrid"
		];


(* ::Subsubsection::Closed:: *)
(*iTutorialMain*)



iTutorialMain[title_,linkblock_:{}]:=
	Cell[CellGroupData@Flatten@{
		Cell[title,"Title"],
		tutorialChunk@Replace[linkblock,{
			links:{__}:>
				Thread[links->links]
			}]
		}]


(* ::Subsubsection::Closed:: *)
(*Related*)



iTutorialRelatedSection[guides_,tuts_,links_]:=
	If[Length@Flatten@{guides,tuts,links}>0,
		Cell[CellGroupData@Flatten@{
			If[ListQ@guides&&Length@guides>0,
				Cell[CellGroupData@Flatten@{
					Cell["Related Guides", "TutorialMoreAboutSection",
			 			WholeCellGroupOpener->True],
			 	 Cell[BoxData@guideRefBox[#,"TutorialMoreAbout"],
			 	 	"TutorialMoreAbout"]&/@guides
			 		}],
			 	Nothing
			 	],
			If[ListQ@links&&Length@tuts>0,
				Cell[CellGroupData@Flatten@{
					Cell["Related Tutorials", "RelatedTutorialsSection",
			 			WholeCellGroupOpener->True],
			 	 Cell[BoxData@guideRefBox[#,"RelatedTutorials"],
			 	 	"RelatedTutorials"]&/@tuts
			 		}],
			 	Nothing
			 	],
			If[ListQ@links&&Length@links>0,
				Cell[CellGroupData@Flatten@{
					Cell["Related Links", "TutorialRelatedLinksSection",
						WholeCellGroupOpener->True],
					Cell[
						TextData@
							Cell[
								BoxData@
									TemplateBox[{First@#, Last@#},
								  	"WebLink",
									  BaseStyle->{"TutorialRelatedLinks"}
										]
								],
						"TutorialRelatedLinks"
						]&/@links
			 		}],
			 	Nothing
			 	]
			 }],
	 	Nothing
	 	];


(* ::Subsubsection::Closed:: *)
(*Metadata*)



iTutorialMetadata[guideName_,guideLink_,abstract_,ops___]:=
	docMetadata@
		{
			ops,
			"Label"->"Tutorial",
			"Keywords"->guideName,
			"Summary"->abstract,
			"Title"->guideName,
			"WindowTitle"->guideName,
			"Type"->"Tutorial",
			"URI"->StringTrim[pacletLinkBuild[guideLink,"tutorial"],"paclet:"]
			} 


(* ::Subsubsection::Closed:: *)
(*Generate*)



tutorialPostProcessJumpLinks[nb_]:=
	With[{
		uri=
			Lookup[
				Lookup[TaggingRules/.Options[nb,TaggingRules],"Metadata"],
				"uri"
				],
		links=
			Cases[First@nb,
				TemplateBox[{_,_,_,_},"GrayLinkWithIcon",___],
				\[Infinity]
				]
		},
		With[{reps=
			Select[DeleteDuplicates[links],
				Not@StringMatchQ[#[[1,2]],"paclet:*"|"http:*"|"https:*"]&
				]
			},
			ReplacePart[nb,
				1->
					ReplaceAll[First@nb,
						Map[#->
								ReplacePart[#,
									{1,2}->
										"paclet:"<>
											Replace[
												FirstCase[First@nb,
													Cell[
														Replace[#[[1,1]],{
															Cell[c_,e___]:>
																c|Cell[c,e]
															}],"Section",___,
															CellID->id_,___]:>
														id,
													None,
													\[Infinity]
													],{
													None->uri,
													e_:>uri<>"#"<>ToString[e]
												}]
									]&,
							reps
							]			
						]
				]
			]
		];


iDocGenGenerateTutorial[guideName_,guideLink_,abstract_,sections_,
	functions_,relatedGuides_,relatedTutorials_,relatedLinks_]:=
	tutorialPostProcessJumpLinks@Block[{cid=1},
		Notebook[{
			iTutorialAnchorBar[guideLink,functions,relatedGuides,relatedTutorials],
			iTutorialMain[guideName,
				Cases[sections,
					Cell[c_,"TutorialSubsection",___]:>c
					]],
			iTutorialSections[sections],
			iTutorialRelatedSection[
				relatedGuides,
				relatedTutorials,
				relatedLinks],
			Cell[" ", "FooterCell"]
			}//.Cell[e__,
				l:Except[CellID->_]
				]:>Cell[e,l,(CellID->(cid++))],
			StyleDefinitions->
				Notebook[{
					Cell[
						StyleData[
							StyleDefinitions->
								FrontEnd`FileName[{"Wolfram"},
									"Reference.nb",CharacterEncoding->"UTF-8"]
							]
						],
					Cell[StyleData["Notebook"],
						DockedCells->
							{
								First@
									FrontEndResource["FEExpressions","HelpViewerToolbar"],
								Cell["",
									CellSize->{1,1},
									CellOpen->False,
									CellFrame->{{0,0},{2,0}},
									CellFrameColor->docTypeColor@"TUTORIAL"
									]
								}
						]
					}],
				TaggingRules->{
					"ColorType"->"TutorialColor",
					"Metadata"->
						iTutorialMetadata[guideName,guideLink,abstract],
					"NewStyles"->True
					}
			]
		];


(* ::Subsubsection::Closed:: *)
(*TutorialNotebook*)



Options[TutorialNotebook]=
	{
		"Title"->None,
		"Abstract"->Automatic,
		"Functions"->{},
		"Sections"->{},
		"RelatedGuides"->{},
		"RelatedTutorials"->{},
		"RelatedLinks"->{}
		};
TutorialNotebook[ops:OptionsPattern[]]:=
	With[{
		t=Replace[OptionValue@"Title",Except[_String|_Rule]:>"No Title"],
		a=OptionValue@"Abstract",
		fs=Replace[OptionValue@"Functions",Except[_List]:>{}],
		s=Replace[OptionValue@"Sections",Except[_List]:>{}],
		g=Replace[OptionValue@"RelatedGuides",Except[_List]:>{}],
		rt=Replace[OptionValue@"RelatedTutorials",Except[_List]:>{}],
		l=Replace[OptionValue@"RelatedLinks",Except[_List]:>{}]
		},
		docGenBlock@
			iDocGenGenerateTutorial[
				Replace[t,{(n_->_):>n}],
				Replace[t,
					{
						s_String:>
							StringReplace[s,Except[WordCharacter]->""],
						(_->n_):>
							n
						}
					],
				Replace[a,
					Except[_String]:>
						FirstCase[s,_String,"No description..."]
					],
				s,
				fs,
				g,
				rt,
				l]
		];


(* ::Subsubsection::Closed:: *)
(*DocGenGenerateTutorial*)



Options[DocGenGenerateTutorial]=
	Join[
		Options[TutorialNotebook],
		Options[CreateDocument]
		];
DocGenGenerateTutorial[ops:OptionsPattern[]]:=
	CreateDocument[
		TutorialNotebook[FilterRules[{ops},Options@TutorialNotebook]],
		FilterRules[{ops},Options@CreateDocument],
		WindowTitle->
			Replace[Lookup[{ops},"Title","No Title"],
				e:Except[_String]:>
					FirstCase[e,_String,"No Title",\[Infinity]]
				]<>" - Guide",
		ClosingSaveDialog->False,
		Saveable->False
		];


DocGenGenerateTutorial[nb_NotebookObject]:=
	Block[{$DocGenLine=0},
		DocGenGenerateTutorial@#
		]&/@scrapeTutorialTemplate@nb


(* ::Subsubsection::Closed:: *)
(*DocGenSaveTutorial*)



Options[docGenSaveTutorial]=
	Options[DocGenGenerateTutorial];
docGenSaveTutorial[
	guide:_String|None|{__String}|
		_NotebookObject|_EvaluationNotebook|_InputNotebook:None,
	dir_String?DirectoryQ,
	extension:True|False:True,
	ops:OptionsPattern[]
	]:=
	Replace[
		If[guide===None,
			DocGenGenerateTutorial[Visible->False,ops],
			DocGenGenerateTutorial[guide,Visible->False,ops]
			],{
		nb:_NotebookObject|{__NotebookObject}:>(
			Quiet@CreateDirectory[
				FileNameJoin@{
					dir,
					If[extension,
						"Guides",
						Nothing
						]
					},
				CreateIntermediateDirectories->True
				];
			Map[
				Export[
					FileNameJoin@{
						dir,
						If[extension,
							"Tutorials",
							Nothing
							],
						URLParse[
							CurrentValue[
								#,
								{TaggingRules,"Metadata","uri"}
								],
							"Path"
							][[-1]]<>".nb"
						},
					DeleteCases[NotebookGet@#,Visible->_]
					]&,
				Flatten@{nb}
			]),
		_->$Failed
		}];


Options[DocGenSaveTutorial]=
	Join[
		{
			Directory->Automatic,
			Extension->True
			},
		Options[docGenSaveTutorial]
		];
DocGenSaveTutorial[
	guide:_String|None|{__String}|
		_NotebookObject|_EvaluationNotebook|_InputNotebook:None,
	ops:OptionsPattern[]
	]:=
	With[{
			dir=Replace[OptionValue[Directory], Automatic:>$DocGenDirectory],
			extension=OptionValue[Extension]},
		With[
			{
				res=
					docGenSaveTutorial[guide,
						dir,
						extension
						]
				},
			res/;Head[res]=!=docGenSaveTutorial
			]
		];


(* ::Subsubsection::Closed:: *)
(*TutorialTemplate*)



Options[TutorialTemplate]=
	{
		"Title"->Automatic,
		"Link"->Automatic,
		"Description"->Automatic,
		"Functions"->Automatic,
		"Content"->Automatic,
		"RelatedGuides"->Automatic,
		"RelatedTutorials"->Automatic,
		"RelatedLinks"->Automatic,
		"CreateDocument"->False
		};
TutorialTemplate[s_String,ops:OptionsPattern[]]:=
	If[TrueQ@OptionValue["CreateDocument"], CreateDocument, Identity]@
	Notebook[{
		Cell[CellGroupData[
			Flatten@{
				Replace[OptionValue@"Title",
					{
						Automatic->
							Cell[s<>" Tutorial","TutorialTitle"],
						t_String:>
							Cell[t,"TutorialTitle"],
						Except[_List|_Cell]->{}
						}
					],
				Replace[OptionValue@"Link",{
					Automatic:>
						Cell[StringReplace[s,Except[WordCharacter]->""],
							"TutorialLink"],
					l_String:>
						Cell[l,"TutorialLink"],
					Except[_List|_Cell]->{}
					}],
				Replace[OptionValue@"Description",{
					Automatic:>
						Cell[s<>" description...","TutorialText"],
					a_String:>
						Cell[a,"TutorialText"],
					Except[_List|_Cell]->{}
					}],
				Replace[OptionValue@"Content",{
					Automatic->{
						Cell["Tutorial content...","TutorialText"]
						},
					c:{(_String|_List|_Rule)..}:>
						Replace[c,{
							t_String:>
								Cell[t,"TutorialText"],
							l_List:>
								Map[
									{
										Cell[
											Replace[First@#,
												b:Except[_String|_?BoxQ]:>
													BoxData@ToBoxes@b
												],
											"TutorialTableRow"],
										Cell[
											Replace[Last@#,
												b:Except[_String|_?BoxQ]:>
													BoxData@ToBoxes@b
												],
											"TutorialTableColumn"]
										}&,
									l],
							(sec_->stuff_):>
								Cell[CellGroupData[Flatten@{
									Cell[sec,"TutorialSubsection"],
									Replace[Flatten[{stuff},1],{
										t_String?makeRefTest:>
											BoxData@inlineRefBox[t],
										t_String:>
											Cell[t,"TutorialText"],
										l_List:>
											Map[
												Flatten@{
													Cell[
														Replace[First@#,{
															b:Except[_String|_?BoxQ]:>
																BoxData@ToBoxes@b,
															t_String?makeRefTest:>
																BoxData@inlineRefBox[t]
															}],
														"TutorialTableRow"],
													Map[
														Cell[
															Replace[#,{
																b:Except[_String|_?BoxQ]:>
																	BoxData@ToBoxes@b,
																t_String?makeRefTest:>
																	BoxData@inlineRefBox[t]
																}],
															"TutorialTableColumn"]&,
														Rest@#
														]
													}&,
												l],
										i_?ImageQ:>
											Cell[BoxData@ToBoxes@i,
												"TutorialImage"
												],
										(i_?ImageQ->cap_):>
											Cell[
												CellGroupData[{
													Cell[BoxData@ToBoxes@i,
														"TutorialImage"
														],
													Cell[cap,
														"TutorialCaption"
														]
													}]
												]
										},
										1]
									}]
									]		
							},
							1]
					}],
				Replace[OptionValue@"Functions",{
					Automatic->{
						Cell["Related Functions","SeeAlsoSection"],
						Cell["","SeeAlso"]
						},
					l:{__String}:>
						Cell[CellGroupData[Flatten@{
							Cell["Related Functions","SeeAlsoSection"],
							Sequence@@
								Map[Cell[#,"SeeAlso"]&,l]
							},Closed]],
					Except[_List|_Cell]->{}
					}],
				Replace[OptionValue@"RelatedGuides",{
					Automatic->{
						Cell["Related Guides","GuidesSection"],
						Cell["Related Guide Title | RelatedGuide",
							"RelatedGuide"]
						},
					l:{(_String|_Rule)..}:>
						{
							Cell["Related Guides","GuidesSection"],
							Map[
								Cell[
									First@#<>" | "<>
										StringReplace[Last@#,Except[WordCharacter]->""],
									"RelatedGuide"]&,
								Replace[l,
									t_String:>(t->t),
									1]
								]
							},
					Except[_List|_Cell]->{}
					}],
				Replace[OptionValue@"RelatedTutorials",{
					Automatic->{
						Cell["Related Tutorials","TutorialSection"],
						Cell["Related Tutorial Title | RelatedTutorial",
							"RelatedTutorial"]
						},
					l:{(_String|_Rule)..}:>
						{
							Cell["Related Tutorials","TutorialSection"],
							Map[
								Cell[
									First@#<>" | "<>
										StringReplace[Last@#,Except[WordCharacter]->""],
									"RelatedTutorial"]&,
								Replace[l,
									t_String:>(t->t),
									1]
								]
							},
					Except[_List|_Cell]->{}
					}],
				Replace[OptionValue@"RelatedLinks",{
					Automatic->{
						Cell["Related Links","LinksSection"],
						Cell["Related Link Title | RelatedLink","RelatedLink"]
						},
					l:{(_String|_Rule)..}:>
						{
							Cell["Related Tutorials","LinksSection"],
							Map[
								Cell[
									First@#<>" | "<>
										StringReplace[Last@#,Except[WordCharacter]->""],
									"RelatedTutorial"]&,
								Replace[l,
									t_String:>(
										URLBuild[
											ReplacePart[
												URLParse[t],{
												"Scheme"->None,
												"Query"->{}
												}]
											]->t),
									1]
								]
							},
					Except[_List|_Cell]->{}
					}],
				Cell["","SectionSeparator"]
				},
			Open]
			]
		},
		StyleDefinitions->
			With[{p=$PackageName},
				FrontEnd`FileName[{p},"DocGen.nb"]
				]
		];
TutorialTemplate[s:{__String},ops:OptionsPattern[]]:=
	Notebook[Flatten[First@TutorialTemplate[#,ops]&/@s],
		StyleDefinitions->
			With[{p=$PackageName},
				FrontEnd`FileName[{p},"DocGen.nb"]
				]
		];


(* ::Subsubsection::Closed:: *)
(*TutorialContextTemplate*)



TutorialContextTemplate[pat_, o:OptionsPattern[TutorialTemplate]]:=
	TutorialTemplate[pat<>" Tutorial", contextNames[pat<>"*"],
	 o
	 ]


(* ::Subsubsection::Closed:: *)
(*scrapeTutorialTemplate*)



scrapeTutorialChunk[c:{__Cell}]:=
	docGenBlock[
		With[
			{
				title=FirstCase[c,Cell[s_,___,"TutorialTitle",___]:>s],
				link=FirstCase[c,Cell[l_,___,"TutorialLink",___]:>l,None],
				content=
					Cases[c,
						Cell[_,
							___,
							"TutorialText"|"TutorialInput"|"TutorialOutput"|
							"TutorialImage"|
							"TutorialJumpLink"|"TutorialCaption"|
							"TutorialSubsection"|"TutorialTableRow"|
							"TutorialTableColumn",
							___
							]
						],
				funcs=Cases[c,Cell[f_,"SeeAlso",___]:>f],
				guides=Cases[c,Cell[__,"RelatedGuide",___]],
				tuts=Cases[c,Cell[__,"RelatedTutorial",___]],
				links=Cases[c,Cell[__,"RelatedLink",___]]
				},
			{
				"Title"->
					If[link===None,title,title->link],
				"Abstract"->
					FirstCase[content,
						Cell[t_,"TutorialText",___]:>t
						],
				"Functions"->
					Replace[funcs,
						{
							s_String?(StringContainsQ[" -> "]):>
								Rule@@StringSplit[s, " -> "],
							s_String?docSymStringPat:>
								ToExpression[s,StandardForm,Hold],
							_->Nothing
							},
						1],
				"Sections"->
					Replace[
						SplitBy[content,
							Replace[{
								Cell[_,"TutorialJumpLink",___]->
									1,
								Cell[_,"TutorialTableRow"|"TutorialTableColumn",___]->
									-1,
								_->0
								}]
							],{
						l:{Cell[_,"TutorialTableRow",___],___}:>
							SequenceCases[l,
								l2:{
									Cell[_,"TutorialTableRow",___],
									Except[Cell[_,"TutorialTableRow",___]]...
									}:>
									ReplacePart[l2,
										{_,2}->"Text"
										]
								],
						e:Except[{Cell[_,"TutorialJumpLink",___],___}]:>
							(Sequence@@e)
						},
						1],
				"RelatedGuides"->
					Replace[First/@guides,
						{
							s_String:>
								Replace[StringSplit[s," | "],{
									{str_}:>
										str->pacletLinkBuild[str,"guide"],
									{l_,g_}:>
										l->pacletLinkBuild[g,"guide"]
									}],
							_->Nothing
							},
						1],
				"RelatedTutorials"->
					Replace[First/@tuts,
						{
							s_String:>
								Replace[StringSplit[s," | "],{
									{str_}:>
										str->pacletLinkBuild[str,"tutorial"],
									{l_,g_}:>
										l->pacletLinkBuild[g,"tutorial"]
									}],
							_->Nothing
							},
						1],
				"RelatedLinks"->
					Replace[First/@links,
						{
							s_String:>
								Replace[StringSplit[s," | "],{
									{str_}:>
										str->str,
									{l_,g_}:>
										l->g
									}],
							_->Nothing
							},
						1],
				WindowTitle->
					Replace[link,Except[_String]->title]
				}
			]
		];
scrapeTutorialTemplate[c:{__Cell}]:=
	With[{cells=NotebookTools`FlattenCellGroups@c},
		scrapeTutorialChunk@cells[[#]]&/@
			Replace[
				Flatten@Position[cells,Cell[__,"TutorialTitle",___]],{
					i:{__}:>
						Span@@@Partition[Riffle[i,Append[Rest@i-1,-1]],2]
				}]
		]


scrapeTutorialTemplate[cells:{__CellObject}]:=
	scrapeTutorialTemplate[NotebookRead/@cells];
scrapeTutorialTemplate[nb_NotebookObject]:=
	scrapeTutorialTemplate@
		Replace[NotebookRead@nb,{
			c_Cell:>
				{c},
			c:{__Cell}:>
				c,
			_:>
				Cells@nb
			}];


End[];



