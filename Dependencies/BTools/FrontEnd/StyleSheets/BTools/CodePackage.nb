(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    146624,       3149]
NotebookOptionsPosition[    137872,       3002]
NotebookOutlinePosition[    138261,       3019]
CellTagsIndexPosition[    138218,       3016]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[StyleData[StyleDefinitions -> FrontEnd`FileName[{"BTools"}, 
  "SyntaxHighlighting.nb", CharacterEncoding -> "UTF-8"]],ExpressionUUID->\
"6fc2dbb7-58fc-4a42-bf89-89fae7bcdf9f"],

Cell[BoxData[
 RowBox[{"<<", "BTools`FrontEnd`"}]], "Input",
 CellChangeTimes->{{3.727652528507365*^9, 3.727652535127715*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"07809128-ebcb-4b55-b4b4-3da5baa01559"],

Cell[CellGroupData[{

Cell["Notebook", "Section",
 CellChangeTimes->{{3.7019919195251827`*^9, 
  3.7019919206287117`*^9}},ExpressionUUID->"f5bdd7f4-c32f-4375-866c-\
a347d3a8c5cd"],

Cell[CellGroupData[{

Cell["Notebook", "Subsection",
 CellChangeTimes->{{3.701991926180812*^9, 
  3.7019919272283773`*^9}},ExpressionUUID->"12e5facd-3d52-4381-a19b-\
6712d90834c2"],

Cell[CellGroupData[{

Cell[StyleData["Notebook"],
 ExportAutoReplacements->{"\t" -> "  ", ParentList},
 AutoGeneratedPackage->Automatic,
 InitializationCellEvaluation->False,
 NotebookEventActions->{
  "ReturnKeyDown" :> (
    If[Length[FrontEnd`ReturnTracking`LastTimes] == 0, 
      FrontEnd`ReturnTracking`LastTimes = {Yesterday}]; 
    FrontEnd`ReturnTracking`LastTimes = {
       Last[FrontEnd`ReturnTracking`LastTimes], Now}; 
    If[Part[FrontEnd`ReturnTracking`LastTimes, 2] - Part[
       FrontEnd`ReturnTracking`LastTimes, 1] < Quantity[0.25, "Seconds"], 
      If[
       MatchQ[
        NotebookRead[
         EvaluationNotebook[]], 
        Alternatives[
         Blank[Cell], {
          BlankSequence[Cell]}]], Do[
         With[{FrontEnd`ReturnTracking`s = FrontEnd`ReturnTracking`s}, 
          Replace[
           NotebookRead[FrontEnd`ReturnTracking`s], {Cell[
              Pattern[FrontEnd`ReturnTracking`e, 
               Blank[]], "Input", 
              Pattern[FrontEnd`ReturnTracking`o, 
               BlankNullSequence[]]] :> (
             SelectionMove[
              FrontEnd`ReturnTracking`s, All, Cell, AutoScroll -> False]; 
             FrontEndTokenExecute[
              FrontEnd`ReturnTracking`s, "Style", "CodeInput"]; Null), Cell[
              Pattern[FrontEnd`ReturnTracking`e, 
               Blank[]], "CodeInput", 
              Pattern[FrontEnd`ReturnTracking`o, 
               BlankNullSequence[]]] :> (
             SelectionMove[
              FrontEnd`ReturnTracking`s, All, Cell, AutoScroll -> False]; 
             FrontEndTokenExecute[
              FrontEnd`ReturnTracking`s, "Style", "Input"]; Null)}]], {
         FrontEnd`ReturnTracking`s, 
          SelectedCells[]}]; Null]]), PassEventsDown -> True},
 NotebookDynamicExpression:>If[InputNotebook[] === EvaluationNotebook[], 
   Replace[
    Quiet[
     NotebookFileName[]], {Pattern[$CellContext`f$, 
       Blank[String]] :> With[{$CellContext`header = TemplateApply["", 
          Association["AppName" -> Replace[
             Names["AppFromFile"], {
               Pattern[$CellContext`s, 
                Blank[]], 
               BlankNullSequence[]} :> 
             ToExpression[$CellContext`s]][$CellContext`f$], "SpacedAppName" -> 
           StringJoin[" ", 
             Replace[
              Replace[
               Names["AppFromFile"], {
                 Pattern[$CellContext`s, 
                  Blank[]], 
                 BlankNullSequence[]} :> 
               ToExpression[$CellContext`s]][$CellContext`f$], Except[
                Blank[String]] -> ""], " "], "FileName" -> $CellContext`f$, 
           "FileBaseName" -> FileBaseName[$CellContext`f$], "DirectoryName" -> 
           DirectoryName[$CellContext`f$]]]}, 
       If[
       FrontEndResourceString["PackageHeader"] =!= $CellContext`header, 
        Block[{$ContextPath = {"System`"}}, 
          Needs["BTools`"]]; Replace[
          Names["FEAddResource"], {
            Pattern[$CellContext`s, 
             Blank[]], 
            BlankNullSequence[]} :> ToExpression[$CellContext`s]][
         "PackageHeader", $CellContext`header]]]}]],
 WindowStatusArea->Dynamic[
   If[
    CurrentValue["NotebookSelected"], 
    With[{StatusAreaTracking`mp = Replace[
        MousePosition["DocumentAbsolute"], {None -> {1., 1.}, {
           Pattern[StatusAreaTracking`w, 
            Blank[]], 
           Pattern[StatusAreaTracking`h, 
            Blank[]]} :> {
           Max[{StatusAreaTracking`h, 1.}], 
           Max[{StatusAreaTracking`w, 1.}]}}], 
      StatusAreaTracking`wh = {20, 8}}, 
     StringJoin[{"R: ", 
       Insert[
        Map[ToString, 
         MapThread[
         1 + Floor[#/#2]& , {StatusAreaTracking`mp, StatusAreaTracking`wh}]], 
        " C: ", 2]}]], ""]],
 DockedCells->Cell[
   BoxData[
    TagBox[
     GridBox[{{
        ButtonBox[
        "\"\"", ButtonFunction :> Null, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJzN1LEKgkAcx/GjGhoa2pt6i9bGVqMHUDJpMdAgehQfTRRFRRFFRNH53xUR
f5d+RUt/+Bx3x/fWW2on5TASQthTuSjqZW1Z6nU7l4edaR8NU99vzLNu6NZK
G8vLhTSTJmIw9MZgXNclxHGc1zvP8wjhve/7hPA+CAJCeB+GISG8j6KIENZT
HMfQs39IkgTifZqmEO+zLIN4n+c5xPuiKCDel2UJ8b6qKoj3dV1DvG+aBuJ9
27YQ77uug3jf9z30Qy++6MU/9vf9Jz782wZ/3A10cb5o
             "], "Byte", 
             ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
           Image[CompressedData["
1:eJzN1D8LgkAYx/GjGhoa2pt6F62NrUYvQMmkxUCD6KX48vyDf1FRUcenKyIe
l35FSw98jrvje+sttZNyGAkh7KlcFPWytiz1up3Lw860j4ap7zfmWTd0a6WN
5eVCmkkTMRh6YzCu6xLiOM7rned5hPDe931CeB8EASG8D8OQEN5HUUQI6ymO
Y+jZPyRJAvE+TVOI91mWQbzP8xzifVEUEO/LsoR4X1UVxPu6riHeN00D8b5t
W4j3XddBvO/7HvqhF1/04h/7+/4TH/5tgz/uBiL0ySo=
             "], "Byte", 
             ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAaiHmAmIUBBfzHg1HAtm3b/hPCM2fO/D9C1RNUi6T+Pznqt2/fThAjq9+z
Zw9BjKz+4MGDBDGy+mPHjhHEyOpPnz5NECOrP3/+PEGMrP7SpUsEMbL6q1ev
EsTI6m/cuEEQI6u/ffs2QYys/s6dOwQxBeoZSFDPMBjVg9jEYCLLNpQyDgDj
cGlm
             "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
         Enabled -> False, ImageSize -> {150, 35}, 
         Appearance -> {"Palette", ImagePadding -> {{0, 1}, {1, 0}}}, 
         Evaluator -> Automatic, Method -> "Preemptive"], 
        TemplateBox[{
          TagBox[
           ButtonBox[
           "\"Load Application\"", 
            ButtonFunction :> (
             With[{BTools`Formatting`Private`nb$ = EvaluationNotebook[]}, 
               Internal`WithLocalSettings[CurrentValue[
                   FrontEnd`EvaluationNotebook[], {
                   TaggingRules, "UUIDButtons", "Active", 
                    "Button-590233c6-9680-4d8a-a854-3b15b03893d8"}] = True, 
                 ReleaseHold[
                  Hold[
                   Catch[
                    
                    Block[{BTools`Private`FrontEnd`loadPackageFailures = {}, \
$ContextPath = {"System`"}}, Check[
                    Needs["BTools`"], 
                    Throw[$Failed]]; GeneralUtilities`WithMessageHandler[
                    Replace[
                    Replace[
                    Join[
                    Names["BTools`AppFromFile"], 
                    Names["BTools`*`AppFromFile"], 
                    Names["*`AppFromFile"]], {
                    Pattern[BTools`Private`FrontEnd`symList, {
                    BlankSequence[]}] :> SelectFirst[
                    ToExpression[BTools`Private`FrontEnd`symList], Length[
                    DownValues[#]] > 0& ]}][
                    EvaluationNotebook[]], {$Failed :> Null, 
                    Pattern[$CellContext`a, 
                    Blank[]] :> (Get[
                    StringJoin[$CellContext`a, "`"]]; 
                    FrontEnd`Private`GetUpdatedSymbolContexts[])}], AppendTo[
                    BTools`Private`FrontEnd`loadPackageFailures, #]& ]; 
                    If[Length[BTools`Private`FrontEnd`loadPackageFailures] > 
                    0, 
                    CreateDocument[
                    Map[Cell[
                    BoxData[
                    ToBoxes[#]], Selectable -> True, Background -> White, 
                    CellFrame -> 1, CellFrameColor -> GrayLevel[0.7, 0.5]]& , 
                    
                    If[
                    Length[BTools`Private`FrontEnd`loadPackageFailures] > 100, 
                    Append[
                    Take[BTools`Private`FrontEnd`loadPackageFailures, 99], 
                    Skeleton[
                    Length[BTools`Private`FrontEnd`loadPackageFailures] - 
                    99]], BTools`Private`FrontEnd`loadPackageFailures]], 
                    WindowTitle -> "Failed to load", WindowSize -> {All, 150},
                     Background -> GrayLevel[0.9], WindowElements -> None, 
                    WindowFrameElements -> {"CloseBox"}, ShowCellBracket -> 
                    False, CellBracketOptions -> {
                    "OverlapContent" -> False}]]]]]], CurrentValue[
                   FrontEnd`EvaluationNotebook[], {
                   TaggingRules, "UUIDButtons", "Active", 
                    "Button-590233c6-9680-4d8a-a854-3b15b03893d8"}] = False]; 
               Null]; Null), Appearance -> {"Default" -> Image[CompressedData["
1:eJzN1DELgkAYxvGjGoKW9qa+RWtjq9EHUDJpMdAg+ih+NFEUFUUUEUXn65Zn
kIgnmnrhd3DHf7rh3Ro37TITQrhLdWj6Y+84+vO4VpeT7V4t2zwf7Ltpmc7O
mKvHjbJSFmIy8oPJ+L4vGbRBEEgGbRiGkkEbRZFk0MZxLBm0SZJIBn+VpimF
P8yyjEKb5zmFtigKCm1ZlhTaqqootHVdU2ibpqHQtm1Loe26jkLb9z2FdhgG
Cu04jtQPrfiyFf/Sep4nGbJv3vbPC0P8eK0=
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJzN1L0KglAYxvFDNQQt7U3dRWtjq9EFKJm0GGgQXYqX5wd+oqKijqezPINE
PNHUC78D5/CfzvBujZt2mQkh3KU6NP2xdxz9eVyry8l2r5Ztng/23bRMZ2fM
1eNGWSkLMRn5wWR835cM2iAIJIM2DEPJoI2iSDJo4ziWDNokSSSDv0rTlMIf
ZllGoc3znEJbFAWFtixLCm1VVRTauq4ptE3TUGjbtqXQdl1Hoe37nkI7DAOF
dhxH6odWfNmKf2k9z5MM2Tdv++cF+7uDbw==
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAaiLmBmIUBBfzHgVHAtm3b/hPCI0AtQXVQtf9JVbt9+3aCGKZ2z549BDFM
7cGDBwlimNpjx44RxDC1p0+fJohhas+fP08Qw9ReunSJIIapvXr1KkEMU3vj
xg2CGKb29u3bBDFM7Z07dwhiMtQyEKmWYbConTlz5n9CmEB5g1H+AACpMiOr

                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              Dynamic[
               FEPrivate`If[
                FrontEnd`CurrentValue[
                 FrontEnd`EvaluationNotebook[], {
                 TaggingRules, "UUIDButtons", "Active", 
                  "Button-590233c6-9680-4d8a-a854-3b15b03893d8"}, False], 
                "Pressed", Automatic, Automatic]]}, ImageSize -> {150, 35}, 
            FrameMargins -> 5, ImageSize -> {150, 35}, Method -> "Queued", 
            Evaluator -> Automatic], 
           EventHandlerTag[{"MouseClicked" :> Internal`WithLocalSettings[
               FrontEndExecute[
                FrontEnd`NotebookSuspendScreenUpdates[
                 FrontEnd`EvaluationNotebook[]]], 
               If[
                TrueQ[
                 Replace[
                  Replace[Automatic, Pattern[BTools`Formatting`Private`d, 
                    Blank[Dynamic]] :> First[BTools`Formatting`Private`d]], 
                  Automatic -> True]], CurrentValue[
                  FrontEnd`EvaluationNotebook[], {
                  TaggingRules, "UUIDButtons", "Active", 
                   "Button-590233c6-9680-4d8a-a854-3b15b03893d8"}] = True], 
               FrontEndExecute[
                FrontEnd`NotebookResumeScreenUpdates[
                 FrontEnd`EvaluationNotebook[]]]], PassEventsDown -> True, 
             Method -> "Preemptive", PassEventsUp -> True}]], 
          TagBox[
           ButtonBox[
           "\"Load Package\"", 
            ButtonFunction :> (
             With[{BTools`Formatting`Private`nb$ = EvaluationNotebook[]}, 
               Internal`WithLocalSettings[CurrentValue[
                   FrontEnd`EvaluationNotebook[], {
                   TaggingRules, "UUIDButtons", "Active", 
                    "Button-33d6ec4d-a39a-4e80-8d92-b8c5561caada"}] = True, 
                 ReleaseHold[
                  Hold[
                   Catch[
                    
                    Block[{BTools`Private`FrontEnd`loadPackageFailures = {}, \
$ContextPath = {"System`"}}, Check[
                    Needs["BTools`"], 
                    Throw[$Failed]]; GeneralUtilities`WithMessageHandler[
                    Replace[
                    Replace[
                    Join[
                    Names["BTools`AppFromFile"], 
                    Names["BTools`*`AppFromFile"], 
                    Names["*`AppFromFile"]], {
                    Pattern[BTools`Private`FrontEnd`symList, {
                    BlankSequence[]}] :> SelectFirst[
                    ToExpression[BTools`Private`FrontEnd`symList], Length[
                    DownValues[#]] > 0& ]}][
                    EvaluationNotebook[]], {Except[
                    Blank[String]] :> (Get[
                    StringReplace[
                    NotebookFileName[], ".nb" -> ".m"]]; 
                    FrontEnd`Private`GetUpdatedSymbolContexts[]; Null), 
                    Pattern[$CellContext`a, 
                    Blank[]] :> (Needs[
                    StringJoin[$CellContext`a, "`"]]; 
                    With[{BTools`Private`FrontEnd`appD = Replace[
                    Join[
                    Names["BTools`AppDirectory"], 
                    Names["BTools`*`AppDirectory"], 
                    Names["*`AppDirectory"]], {
                    Pattern[BTools`Private`FrontEnd`df, {
                    BlankSequence[]}] :> SelectFirst[
                    ToExpression[BTools`Private`FrontEnd`df], Length[
                    DownValues[#]] > 0& ][$CellContext`a], Blank[] :> 
                    FileNameJoin[{$UserBaseDirectory, 
                    "Applications", $CellContext`a}]}]}, 
                    Replace[
                    Join[
                    Names["BTools`AppGet"], 
                    Names["BTools`*`AppGet"], 
                    Names["*`AppGet"]], {
                    Pattern[BTools`Private`FrontEnd`symList, {
                    BlankSequence[]}] :> SelectFirst[
                    ToExpression[BTools`Private`FrontEnd`symList], Length[
                    DownValues[#]] > 0& ]}][$CellContext`a]]; 
                    FrontEnd`Private`GetUpdatedSymbolContexts[]; Null)}], 
                    AppendTo[
                    BTools`Private`FrontEnd`loadPackageFailures, #]& ]; 
                    If[Length[BTools`Private`FrontEnd`loadPackageFailures] > 
                    0, 
                    CreateDocument[
                    Map[Cell[
                    BoxData[
                    ToBoxes[#]], Selectable -> True, Background -> White, 
                    CellFrame -> 1, CellFrameColor -> GrayLevel[0.7, 0.5]]& , 
                    
                    If[
                    Length[BTools`Private`FrontEnd`loadPackageFailures] > 100, 
                    Append[
                    Take[BTools`Private`FrontEnd`loadPackageFailures, 99], 
                    Skeleton[
                    Length[BTools`Private`FrontEnd`loadPackageFailures] - 
                    99]], BTools`Private`FrontEnd`loadPackageFailures]], 
                    WindowTitle -> "Failed to load", WindowSize -> {All, 150},
                     Background -> GrayLevel[0.9], WindowElements -> None, 
                    WindowFrameElements -> {"CloseBox"}, ShowCellBracket -> 
                    False, CellBracketOptions -> {
                    "OverlapContent" -> False}]]]]]], CurrentValue[
                   FrontEnd`EvaluationNotebook[], {
                   TaggingRules, "UUIDButtons", "Active", 
                    "Button-33d6ec4d-a39a-4e80-8d92-b8c5561caada"}] = False]; 
               Null]; Null), Appearance -> {"Default" -> Image[CompressedData["
1:eJzN1LEKglAYhuFDNTQ0tDd1F62NrUYXoGTRYqBBdClemiiKiiKKiKKznQbh
c+mrpn54DpzDO53hX2tX5TQRQlhzeSjqfWua6mO/lJeDYV3Ohn7cGTf9rJsb
bSofV9JCmonR9G+Mxrbt3nEcCnvXdSnsPc+jsPd9n8I+CAIK+zAMqeEfX30U
RdTwv68+jmMK+yRJKOzTNKWwz7KMwj7Pcwr7oigo7MuypLCvqorCvq5rCvum
aSjs27alsO+6jvqxF1/04l/7T3y420Y77glB1L5o
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
              Image[CompressedData["
1:eJzN1L0KglAYxvFDNTQ0tDd1F62NrUYXoGTRYqBBdClenh/4iYqKOtppEB6X
nmrqhd+Bc/hPZ3jX2lU5TYQQ1lweinrfmqb62C/l5WBYl7OhH3fGTT/r5kab
yseVtJBmYjT9G6Oxbbt3HIfC3nVdCnvP8yjsfd+nsA+CgMI+DENq+MdXH0UR
Nfzvq4/jmMI+SRIK+zRNKeyzLKOwz/Ocwr4oCgr7siwp7KuqorCv65rCvmka
Cvu2bSnsu66jfuzFF7341/4TH+620Y57AsVAySo=
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAaiHmAmIUBBfzHg1HAzJkz/2/bto0gHqHq/5Og/j+56rdv304QI6vfs2cP
QYys/uDBgwQxsvpjx44RxMjqT58+TRAjqz9//jxBjKz+0qVLBDGy+qtXrxLE
yOpv3LhBECOrv337NkGMrP7OnTsEMZnqGUhQzzBY1RODiSzbUMo4AAT5aWY=

                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              Dynamic[
               FEPrivate`If[
                FrontEnd`CurrentValue[
                 FrontEnd`EvaluationNotebook[], {
                 TaggingRules, "UUIDButtons", "Active", 
                  "Button-33d6ec4d-a39a-4e80-8d92-b8c5561caada"}, False], 
                "Pressed", Automatic, Automatic]]}, ImageSize -> {150, 35}, 
            FrameMargins -> 5, ImageSize -> {150, 35}, Method -> "Queued", 
            Evaluator -> Automatic], 
           EventHandlerTag[{"MouseClicked" :> Internal`WithLocalSettings[
               FrontEndExecute[
                FrontEnd`NotebookSuspendScreenUpdates[
                 FrontEnd`EvaluationNotebook[]]], 
               If[
                TrueQ[
                 Replace[
                  Replace[Automatic, Pattern[BTools`Formatting`Private`d, 
                    Blank[Dynamic]] :> First[BTools`Formatting`Private`d]], 
                  Automatic -> True]], CurrentValue[
                  FrontEnd`EvaluationNotebook[], {
                  TaggingRules, "UUIDButtons", "Active", 
                   "Button-33d6ec4d-a39a-4e80-8d92-b8c5561caada"}] = True], 
               FrontEndExecute[
                FrontEnd`NotebookResumeScreenUpdates[
                 FrontEnd`EvaluationNotebook[]]]], PassEventsDown -> True, 
             Method -> "Preemptive", PassEventsUp -> True}]], 
          TagBox[
           ButtonBox[
           "\"Open Package\"", 
            ButtonFunction :> (
             With[{BTools`Formatting`Private`nb$ = EvaluationNotebook[]}, 
               Internal`WithLocalSettings[CurrentValue[
                   FrontEnd`EvaluationNotebook[], {
                   TaggingRules, "UUIDButtons", "Active", 
                    "Button-c0a09a32-e26b-44bc-931b-a7a8eaa0a4c0"}] = True, 
                 ReleaseHold[
                  Hold[
                   SystemOpen[
                    StringReplace[
                    NotebookFileName[], ".nb" -> ".m"]]]], CurrentValue[
                   FrontEnd`EvaluationNotebook[], {
                   TaggingRules, "UUIDButtons", "Active", 
                    "Button-c0a09a32-e26b-44bc-931b-a7a8eaa0a4c0"}] = False]; 
               Null]; Null), Appearance -> {"Default" -> Image[CompressedData["
1:eJzN1LEKglAYhuFDNTQ0tDd1F62NrUYXoGTRYqBBdClemiiKiiKKiKKznQbh
c+mrpn54DpzDO53hX2tX5TQRQlhzeSjqfWua6mO/lJeDYV3Ohn7cGTf9rJsb
bSofV9JCmonR9G+Mxrbt3nEcCnvXdSnsPc+jsPd9n8I+CAIK+zAMqeEfX30U
RdTwv68+jmMK+yRJKOzTNKWwz7KMwj7Pcwr7oigo7MuypLCvqorCvq5rCvum
aSjs27alsO+6jvqxF1/04l/7T3y420Y77glB1L5o
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
              Image[CompressedData["
1:eJzN1L0KglAYxvFDNTQ0tDd1F62NrUYXoGTRYqBBdClenh/4iYqKOtppEB6X
nmrqhd+Bc/hPZ3jX2lU5TYQQ1lweinrfmqb62C/l5WBYl7OhH3fGTT/r5kab
yseVtJBmYjT9G6Oxbbt3HIfC3nVdCnvP8yjsfd+nsA+CgMI+DENq+MdXH0UR
Nfzvq4/jmMI+SRIK+zRNKeyzLKOwz/Ocwr4oCgr7siwp7KuqorCv65rCvmka
Cvu2bSnsu66jfuzFF7341/4TH+620Y57AsVAySo=
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAaiHmAmIUBBfzHg1HAzJkz/2/bto0gHqHq/5Og/j+56rdv304QI6vfs2cP
QYys/uDBgwQxsvpjx44RxMjqT58+TRAjqz9//jxBjKz+0qVLBDGy+qtXrxLE
yOpv3LhBECOrv337NkGMrP7OnTsEMZnqGUhQzzBY1RODiSzbUMo4AAT5aWY=

                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              Dynamic[
               FEPrivate`If[
                FrontEnd`CurrentValue[
                 FrontEnd`EvaluationNotebook[], {
                 TaggingRules, "UUIDButtons", "Active", 
                  "Button-c0a09a32-e26b-44bc-931b-a7a8eaa0a4c0"}, False], 
                "Pressed", Automatic, Automatic]]}, ImageSize -> {150, 35}, 
            FrameMargins -> 5, ImageSize -> {150, 35}, Method -> "Queued", 
            Evaluator -> Automatic], 
           EventHandlerTag[{"MouseClicked" :> Internal`WithLocalSettings[
               FrontEndExecute[
                FrontEnd`NotebookSuspendScreenUpdates[
                 FrontEnd`EvaluationNotebook[]]], 
               If[
                TrueQ[
                 Replace[
                  Replace[Automatic, Pattern[BTools`Formatting`Private`d, 
                    Blank[Dynamic]] :> First[BTools`Formatting`Private`d]], 
                  Automatic -> True]], CurrentValue[
                  FrontEnd`EvaluationNotebook[], {
                  TaggingRules, "UUIDButtons", "Active", 
                   "Button-c0a09a32-e26b-44bc-931b-a7a8eaa0a4c0"}] = True], 
               FrontEndExecute[
                FrontEnd`NotebookResumeScreenUpdates[
                 FrontEnd`EvaluationNotebook[]]]], PassEventsDown -> True, 
             Method -> "Preemptive", PassEventsUp -> True}]]}, "RowDefault"], 
        
        ButtonBox[
        "\"\"", ButtonFunction :> Null, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJzN1LEKglAYhuFDNTQ0tDd1F62NrUYXoGTRYqBBdClemiiKiiKKiKKznQbh
c+mrpn54DpzDO53hX2tX5TQRQlhzeSjqfWua6mO/lJeDYV3Ohn7cGTf9rJsb
bSofV9JCmonR9G+Mxrbt3nEcCnvXdSnsPc+jsPd9n8I+CAIK+zAMqeEfX30U
RdTwv68+jmMK+yRJKOzTNKWwz7KMwj7Pcwr7oigo7MuypLCvqorCvq5rCvum
aSjs27alsO+6jvqxF1/04l/7T3y420Y77glB1L5o
             "], "Byte", ColorSpace -> 
             "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJzN1L0KglAYxvFDNTQ0tDd1F62NrUYXoGTRYqBBdClenh/4iYqKOtppEB6X
nmrqhd+Bc/hPZ3jX2lU5TYQQ1lweinrfmqb62C/l5WBYl7OhH3fGTT/r5kab
yseVtJBmYjT9G6Oxbbt3HIfC3nVdCnvP8yjsfd+nsA+CgMI+DENq+MdXH0UR
Nfzvq4/jmMI+SRIK+zRNKeyzLKOwz/Ocwr4oCgr7siwp7KuqorCv65rCvmka
Cvu2bSnsu66jfuzFF7341/4TH+620Y57AsVAySo=
             "], "Byte", ColorSpace -> 
             "RGB", Interleaving -> True], "Pressed" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAaiHmAmIUBBfzHg1HAzJkz/2/bto0gHqHq/5Og/j+56rdv304QI6vfs2cP
QYys/uDBgwQxsvpjx44RxMjqT58+TRAjqz9//jxBjKz+0qVLBDGy+qtXrxLE
yOpv3LhBECOrv337NkGMrP7OnTsEMZnqGUhQzzBY1RODiSzbUMo4AAT5aWY=

             "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, Enabled -> 
         False, ImageSize -> {
           Scaled[1], 35}, 
         Appearance -> {"Palette", ImagePadding -> {{1, 0}, {1, 0}}}, 
         Evaluator -> Automatic, Method -> "Preemptive"]}}, 
      GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"]]],
 PrivateNotebookOptions->{"FileContents"->{"NotebookData"},
 "FileOutlineCache"->False},
 TrackCellChangeTimes->False,
 ShowPredictiveInterface->
  False,ExpressionUUID->"84f9e714-6bf1-41e1-aaae-3f34913cbef6"],

Cell[BoxData[
 RowBox[{"StyleSheetEdit", "[", 
  RowBox[{"\"\<Notebook\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"ExportAutoReplacements", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<\\t\>\"", "\[Rule]", "\"\<  \>\""}], ",", " ", 
      "ParentList"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7401126736985826`*^9, 3.740112690838971*^9}},
 CellLabel->
  "In[664]:=",ExpressionUUID->"ff96a9f3-0772-4546-8870-098ff8f6be19"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dynamic", "Subsubsection",
 CellChangeTimes->{{3.70374423199159*^9, 
  3.7037442331279*^9}},ExpressionUUID->"b2f31c29-ec5d-4bbc-93af-85d979fe9aa8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "$packageHeader", "=", "\[IndentingNewLine]", 
   "\"\<\n(* ::Title:: *)\n(*`FileBaseName` Package*)\n\n(* \
::Text::GrayLevel[.5]:: *)\n(*Autogenerated`SpacedAppName`package*)\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7037443623206577`*^9, 3.703744652521206*^9}, {
   3.7037446958669033`*^9, 3.703744802053486*^9}, {3.7037448332687883`*^9, 
   3.703744852905096*^9}, {3.703744898261154*^9, 3.703744976372929*^9}, {
   3.703745462096941*^9, 3.703745486476871*^9}, 3.703745583430985*^9, {
   3.703746248750482*^9, 3.703746249459302*^9}, {3.703746282507964*^9, 
   3.703746284201675*^9}, 3.703747215279295*^9, 3.703890599203141*^9, 
   3.703890756317429*^9},ExpressionUUID->"2101fde1-b465-4f8a-97be-\
dcbc9520323c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", "=", "\"\<\>\""}], 
      RowBox[{"(*", "$packageHeader", "*)"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"StyleSheetEdit", "[", 
      RowBox[{"\"\<Notebook\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{
       "NotebookDynamicExpression", "\[RuleDelayed]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"InputNotebook", "[", "]"}], "===", 
           RowBox[{"EvaluationNotebook", "[", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Replace", "[", 
           RowBox[{
            RowBox[{"Quiet", "@", 
             RowBox[{"NotebookFileName", "[", "]"}]}], ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"f_String", "\[RuleDelayed]", "\[IndentingNewLine]", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"header", "=", "\[IndentingNewLine]", 
                  RowBox[{"TemplateApply", "[", 
                   RowBox[{"p", ",", 
                    RowBox[{"<|", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "\"\<AppName\>\"", "\[Rule]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Replace", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Names", "[", "\"\<BTools`AppFromFile\>\"", "]"}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "Names", "[", "\"\<BTools`*`AppFromFile\>\"", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Names", "[", "\"\<*`AppFromFile\>\"", "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"s_", ",", " ", "___"}], "}"}], "\[RuleDelayed]", 
                    
                    RowBox[{"ToExpression", "@", "s"}]}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                    "]"}], "[", "f", "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "\"\<SpacedAppName\>\"", "\[Rule]", "\[IndentingNewLine]", 
                    RowBox[{"\"\< \>\"", "<>", "\[IndentingNewLine]", 
                    RowBox[{"Replace", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Replace", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Names", "[", "\"\<BTools`AppFromFile\>\"", "]"}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "Names", "[", "\"\<BTools`*`AppFromFile\>\"", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Names", "[", "\"\<*`AppFromFile\>\"", "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"s_", ",", " ", "___"}], "}"}], "\[RuleDelayed]", 
                    
                    RowBox[{"ToExpression", "@", "s"}]}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                    "]"}], "[", "f", "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Except", "[", "_String", "]"}], "\[Rule]", 
                    "\"\<\>\""}]}], "\[IndentingNewLine]", "]"}], "<>", 
                    "\"\< \>\""}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<FileName\>\"", "\[Rule]", "f"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<FileBaseName\>\"", "\[Rule]", 
                    RowBox[{"FileBaseName", "@", "f"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<DirectoryName\>\"", "\[Rule]", 
                    RowBox[{"DirectoryName", "@", "f"}]}]}], 
                    "\[IndentingNewLine]", "|>"}]}], "]"}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "FrontEndResourceString", "[", "\"\<PackageHeader\>\"", 
                    "]"}], "=!=", "header"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"$ContextPath", "=", 
                    RowBox[{"{", "\"\<System`\>\"", "}"}]}], "}"}], ",", 
                    RowBox[{"Needs", "[", "\"\<BTools`\>\"", "]"}]}], "]"}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Replace", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "Names", "[", "\"\<BTools`FEAddResource\>\"", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "Names", "[", "\"\<BTools`*`FEAddResource\>\"", "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Names", "[", "\"\<*`FEAddResource\>\"", "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"s_", ",", " ", "___"}], "}"}], "\[RuleDelayed]", 
                    
                    RowBox[{"ToExpression", "@", "s"}]}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                    "]"}], "[", 
                    RowBox[{"\"\<PackageHeader\>\"", ",", "header"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
               "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}]}],
            "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7037443623206577`*^9, 3.703744652521206*^9}, {
   3.7037446958669033`*^9, 3.703744802053486*^9}, {3.7037448332687883`*^9, 
   3.703744852905096*^9}, {3.703744898261154*^9, 3.703744976372929*^9}, {
   3.703745462096941*^9, 3.703745486476871*^9}, 3.703745583430985*^9, {
   3.703746248750482*^9, 3.703746249459302*^9}, {3.703746282507964*^9, 
   3.703746284201675*^9}, 3.703747215279295*^9, 3.703890599203141*^9, 
   3.703890756317429*^9, {3.712927393061968*^9, 3.712927415525807*^9}, {
   3.716915480475268*^9, 3.716915481333493*^9}, {3.721051011112672*^9, 
   3.72105102077669*^9}, {3.721054305995926*^9, 3.721054307704629*^9}, 
   3.726971966224399*^9, {3.726972194644813*^9, 3.726972256330422*^9}, 
   3.7326388610821247`*^9},ExpressionUUID->"5e7189aa-7741-4123-927b-\
ee43268e1b8b"]
}, Closed]],

Cell[CellGroupData[{

Cell["DockedCells", "Subsubsection",
 CellChangeTimes->{{3.701993971591833*^9, 
  3.7019939734235573`*^9}},ExpressionUUID->"2f4377c3-5249-4bbc-92bf-\
a0acb7d421a7"],

Cell[BoxData[
 RowBox[{"StyleSheetEdit", "[", 
  RowBox[{"\"\<Notebook\>\"", ",", 
   RowBox[{"DockedCells", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.702185390406602*^9, 3.702185394209564*^9}, {
   3.7101732472781057`*^9, 3.710173247515284*^9}, 3.7269719662361393`*^9, {
   3.7326388767997313`*^9, 
   3.7326388770447617`*^9}},ExpressionUUID->"66fb33f2-d0e4-4fd9-8b09-\
991e1774cf4a"],

Cell[BoxData[
 RowBox[{"<<", "BTools`FrontEnd`"}]], "Input",
 CellChangeTimes->{{3.727652528507365*^9, 
  3.727652535127715*^9}},ExpressionUUID->"f515ffcc-b8a5-4362-af09-\
cb8ebe8c75c7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Begin", "[", "\"\<BTools`Private`FrontEnd`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p", "=", "\"\<\>\""}], 
     RowBox[{"(*", "$packageHeader", "*)"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"StyleSheetEdit", "[", 
     RowBox[{"\"\<Notebook\>\"", ",", "\[IndentingNewLine]", 
      RowBox[{"DockedCells", "\[Rule]", "\[IndentingNewLine]", 
       RowBox[{"Cell", "[", 
        RowBox[{"BoxData", "@", 
         RowBox[{"ToBoxes", "@", "\[IndentingNewLine]", 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Replace", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Join", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    "Names", "[", "\"\<BTools`GradientButton\>\"", "]"}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{
                    "Names", "[", "\"\<BTools`*`GradientButton\>\"", "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Names", "[", "\"\<*`GradientButton\>\"", "]"}]}],
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                  
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"s", ":", 
                    RowBox[{"{", "__", "}"}]}], "\[RuleDelayed]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"SelectFirst", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToExpression", "@", "s"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "@", 
                    RowBox[{"DownValues", "[", "#", "]"}]}], ">", "0"}], 
                    "&"}]}], "\[IndentingNewLine]", "]"}]}], 
                   "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                 "]"}], "[", 
                RowBox[{
                "\"\<\>\"", ",", "\[IndentingNewLine]", "Null", ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Enabled", "\[Rule]", "False"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"150", ",", "35"}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Appearance", "\[Rule]", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{"\"\<Palette\>\"", ",", "\[IndentingNewLine]", 
                    RowBox[{"ImagePadding", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}]}], 
                   "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"BTools`Formatting`GradientButtonBar", "[", 
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                   "\"\<Load Application\>\"", "\[RuleDelayed]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Catch", "@", "\[IndentingNewLine]", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "BTools`Private`FrontEnd`loadPackageFailures", "=", 
                    RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"$ContextPath", "=", 
                    RowBox[{"{", "\"\<System`\>\"", "}"}]}]}], 
                    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{
                    RowBox[{"Check", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Needs", "[", "\"\<BTools`\>\"", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Throw", "[", "$Failed", "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    
                    RowBox[{
                    "GeneralUtilities`WithMessageHandler", "[", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Replace", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Replace", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Names", "[", "\"\<BTools`AppFromFile\>\"", "]"}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "Names", "[", "\"\<BTools`*`AppFromFile\>\"", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Names", "[", "\"\<*`AppFromFile\>\"", "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"symList", ":", 
                    RowBox[{"{", "__", "}"}]}], "\[RuleDelayed]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"SelectFirst", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", "symList", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "@", 
                    RowBox[{"DownValues", "[", "#", "]"}]}], ">", "0"}], 
                    "&"}]}], "\[IndentingNewLine]", "]"}]}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                    "]"}], "[", 
                    RowBox[{"EvaluationNotebook", "[", "]"}], "]"}], ",", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"$Failed", ":>", "\[IndentingNewLine]", "Null"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"a_", "\[RuleDelayed]", "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Get", "@", 
                    RowBox[{"(", 
                    RowBox[{"a", "<>", "\"\<`\>\""}], ")"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "FrontEnd`Private`GetUpdatedSymbolContexts", "[", "]"}]}],
                     "\[IndentingNewLine]", ")"}]}]}], "\[IndentingNewLine]", 
                    "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    "BTools`Private`FrontEnd`loadPackageFailures", ",", "#"}],
                     "]"}], "&"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Length", "@", 
                    "BTools`Private`FrontEnd`loadPackageFailures"}], ">", 
                    "0"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"CreateDocument", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cell", "[", 
                    RowBox[{
                    RowBox[{"BoxData", "@", 
                    RowBox[{"ToBoxes", "@", "#"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Selectable", "\[Rule]", "True"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Background", "\[Rule]", "White"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CellFrame", "\[Rule]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CellFrameColor", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", 
                    RowBox[{".7", ",", ".5"}], "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}], "&"}], "/@", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Length", "@", 
                    "BTools`Private`FrontEnd`loadPackageFailures"}], ">", 
                    "100"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Append", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Take", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    "BTools`Private`FrontEnd`loadPackageFailures", ",", 
                    "\[IndentingNewLine]", "99"}], "\[IndentingNewLine]", 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Skeleton", "[", 
                    RowBox[{
                    RowBox[{
                    "Length", "@", 
                    "BTools`Private`FrontEnd`loadPackageFailures"}], "-", 
                    "99"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    "BTools`Private`FrontEnd`loadPackageFailures"}], 
                    "\[IndentingNewLine]", "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "WindowTitle", "\[Rule]", "\"\<Failed to load\>\""}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"WindowSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"All", ",", "150"}], "}"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Background", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", ".9", "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"WindowElements", "\[Rule]", "None"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"WindowFrameElements", "\[Rule]", 
                    RowBox[{"{", "\"\<CloseBox\>\"", "}"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ShowCellBracket", "\[Rule]", "False"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CellBracketOptions", "\[Rule]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"\"\<OverlapContent\>\"", "\[Rule]", "False"}], 
                    "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
                    "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}]}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                   "\"\<Load Package\>\"", "\[RuleDelayed]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Catch", "@", "\[IndentingNewLine]", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "BTools`Private`FrontEnd`loadPackageFailures", "=", 
                    RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"$ContextPath", "=", 
                    RowBox[{"{", "\"\<System`\>\"", "}"}]}]}], 
                    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{
                    RowBox[{"Check", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Needs", "[", "\"\<BTools`\>\"", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Throw", "[", "$Failed", "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    
                    RowBox[{
                    "GeneralUtilities`WithMessageHandler", "[", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Replace", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Replace", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Names", "[", "\"\<BTools`AppFromFile\>\"", "]"}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "Names", "[", "\"\<BTools`*`AppFromFile\>\"", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Names", "[", "\"\<*`AppFromFile\>\"", "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"symList", ":", 
                    RowBox[{"{", "__", "}"}]}], "\[RuleDelayed]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"SelectFirst", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", "symList", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "@", 
                    RowBox[{"DownValues", "[", "#", "]"}]}], ">", "0"}], 
                    "&"}]}], "\[IndentingNewLine]", "]"}]}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                    "]"}], "[", 
                    RowBox[{"EvaluationNotebook", "[", "]"}], "]"}], ",", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Except", "[", "_String", "]"}], "\[RuleDelayed]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Get", "@", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"NotebookFileName", "[", "]"}], ",", 
                    RowBox[{"\"\<.nb\>\"", "\[Rule]", "\"\<.m\>\""}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    "FrontEnd`Private`GetUpdatedSymbolContexts", "[", "]"}], 
                    ";"}], "\[IndentingNewLine]", ")"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"a_", "\[RuleDelayed]", "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Needs", "[", 
                    RowBox[{"a", "<>", "\"\<`\>\""}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"With", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"appD", "=", "\[IndentingNewLine]", 
                    RowBox[{"Replace", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "Names", "[", "\"\<BTools`AppDirectory\>\"", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "Names", "[", "\"\<BTools`*`AppDirectory\>\"", "]"}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"Names", "[", "\"\<*`AppDirectory\>\"", "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"df", ":", 
                    RowBox[{"{", "__", "}"}]}], "\[RuleDelayed]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"SelectFirst", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", "df", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "@", 
                    RowBox[{"DownValues", "[", "#", "]"}]}], ">", "0"}], 
                    "&"}]}], "\[IndentingNewLine]", "]"}], "[", "a", "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"_", "\[RuleDelayed]", "\[IndentingNewLine]", 
                    RowBox[{"FileNameJoin", "@", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"$UserBaseDirectory", ",", "\[IndentingNewLine]", 
                    "\"\<Applications\>\"", ",", "\[IndentingNewLine]", "a"}],
                     "\[IndentingNewLine]", "}"}]}]}]}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                    "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Replace", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Names", "[", "\"\<BTools`AppGet\>\"", "]"}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"Names", "[", "\"\<BTools`*`AppGet\>\"", "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Names", "[", "\"\<*`AppGet\>\"", "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"symList", ":", 
                    RowBox[{"{", "__", "}"}]}], "\[RuleDelayed]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"SelectFirst", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", "symList", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "@", 
                    RowBox[{"DownValues", "[", "#", "]"}]}], ">", "0"}], 
                    "&"}]}], "\[IndentingNewLine]", "]"}]}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                    "]"}], "[", "a", "]"}]}], "\[IndentingNewLine]", "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{
                    "FrontEnd`Private`GetUpdatedSymbolContexts", "[", "]"}], 
                    ";"}], "\[IndentingNewLine]", ")"}]}]}], 
                    "\[IndentingNewLine]", "}"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    "BTools`Private`FrontEnd`loadPackageFailures", ",", "#"}],
                     "]"}], "&"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Length", "@", 
                    "BTools`Private`FrontEnd`loadPackageFailures"}], ">", 
                    "0"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"CreateDocument", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cell", "[", 
                    RowBox[{
                    RowBox[{"BoxData", "@", 
                    RowBox[{"ToBoxes", "@", "#"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Selectable", "\[Rule]", "True"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Background", "\[Rule]", "White"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CellFrame", "\[Rule]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CellFrameColor", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", 
                    RowBox[{".7", ",", ".5"}], "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}], "&"}], "/@", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Length", "@", 
                    "BTools`Private`FrontEnd`loadPackageFailures"}], ">", 
                    "100"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Append", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Take", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    "BTools`Private`FrontEnd`loadPackageFailures", ",", 
                    "\[IndentingNewLine]", "99"}], "\[IndentingNewLine]", 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Skeleton", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "Length", "@", 
                    "BTools`Private`FrontEnd`loadPackageFailures"}], "-", 
                    "99"}], "\[IndentingNewLine]", "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    "BTools`Private`FrontEnd`loadPackageFailures"}], 
                    "\[IndentingNewLine]", "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "WindowTitle", "\[Rule]", "\"\<Failed to load\>\""}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"WindowSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"All", ",", "150"}], "}"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Background", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", ".9", "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"WindowElements", "\[Rule]", "None"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"WindowFrameElements", "\[Rule]", 
                    RowBox[{"{", "\"\<CloseBox\>\"", "}"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ShowCellBracket", "\[Rule]", "False"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CellBracketOptions", "\[Rule]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"\"\<OverlapContent\>\"", "\[Rule]", "False"}], 
                    "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
                    "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}]}]}], ",", 
                   RowBox[{"(*", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "\"\<Set Header\>\"", "\[RuleDelayed]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"Quiet", "@", 
                    RowBox[{"NotebookFileName", "[", "]"}]}], ",", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    "BTools`Private`f_String", "\[RuleDelayed]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"header", "=", "\[IndentingNewLine]", 
                    RowBox[{"TemplateApply", "[", 
                    RowBox[{"p", ",", 
                    RowBox[{"<|", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "\"\<AppName\>\"", "\[Rule]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Replace", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Replace", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Names", "[", "\"\<BTools`AppFromFile\>\"", "]"}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "Names", "[", "\"\<BTools`*`AppFromFile\>\"", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Names", "[", "\"\<*`AppFromFile\>\"", "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"s_", ",", " ", "___"}], "}"}], "\[RuleDelayed]", 
                    
                    RowBox[{"ToExpression", "@", "s"}]}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"s_", ",", "___"}], "}"}], ":>", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ToExpression", "[", "s", "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}], "[", "BTools`Private`f", 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "\"\<SpacedAppName\>\"", "\[Rule]", "\[IndentingNewLine]", 
                    RowBox[{"\"\< \>\"", "<>", "\[IndentingNewLine]", 
                    RowBox[{"Replace", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Replace", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Replace", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Names", "[", "\"\<BTools`AppFromFile\>\"", "]"}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "Names", "[", "\"\<BTools`*`AppFromFile\>\"", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Names", "[", "\"\<*`AppFromFile\>\"", "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"s_", ",", " ", "___"}], "}"}], "\[RuleDelayed]", 
                    
                    RowBox[{"ToExpression", "@", "s"}]}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"s_", ",", "___"}], "}"}], ":>", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ToExpression", "[", "s", "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}], "[", "BTools`Private`f", 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Except", "[", "_String", "]"}], "\[Rule]", 
                    "\"\<\>\""}]}], "\[IndentingNewLine]", "]"}], "<>", 
                    "\"\< \>\""}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "\"\<FileName\>\"", "\[Rule]", "BTools`Private`f"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<FileBaseName\>\"", "\[Rule]", 
                    RowBox[{"FileBaseName", "@", "BTools`Private`f"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<DirectoryName\>\"", "\[Rule]", 
                    RowBox[{"DirectoryName", "@", "BTools`Private`f"}]}]}], 
                    "\[IndentingNewLine]", "|>"}]}], "]"}]}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "FrontEndResourceString", "[", "\"\<PackageHeader\>\"", 
                    "]"}], "=!=", "header"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"$ContextPath", "=", 
                    RowBox[{"{", "\"\<System`\>\"", "}"}]}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Needs", "[", "\"\<BTools`\>\"", "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    
                    RowBox[{
                    RowBox[{"Replace", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "Names", "[", "\"\<BTools`FEAddResource\>\"", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "Names", "[", "\"\<BTools`*`FEAddResource\>\"", "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Names", "[", "\"\<*`FEAddResource\>\"", "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"s_", ",", " ", "___"}], "}"}], "\[RuleDelayed]", 
                    
                    RowBox[{"ToExpression", "@", "s"}]}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                    "]"}], "[", 
                    RowBox[{"\"\<PackageHeader\>\"", ",", "header"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                    "}"}]}], "]"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
                   RowBox[{
                   "\"\<Open Package\>\"", ":>", "\[IndentingNewLine]", 
                    RowBox[{"SystemOpen", "@", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"NotebookFileName", "[", "]"}], ",", 
                    RowBox[{"\"\<.nb\>\"", "\[Rule]", "\"\<.m\>\""}]}], 
                    "]"}]}]}]}], "\[IndentingNewLine]", "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Appearance", "\[Rule]", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{"\"\<Palette\>\"", ",", "\[IndentingNewLine]", 
                    RowBox[{"ImagePadding", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", "1", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}]}], 
                   "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"FrameMargins", "\[Rule]", "5"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"150", ",", "35"}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"\"\<UUID\>\"", "\[Rule]", "Automatic"}]}], 
                "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Block", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"$ContextPath", "=", 
                    RowBox[{"{", "\"\<System`\>\"", "}"}]}], "}"}], ",", 
                  RowBox[{"Needs", "[", "\"\<BTools`\>\"", "]"}]}], "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Replace", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "Names", "[", "\"\<BTools`GradientButton\>\"", "]"}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{
                    "Names", "[", "\"\<BTools`*`GradientButton\>\"", "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Names", "[", "\"\<*`GradientButton\>\"", "]"}]}],
                     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"s_", ",", " ", "___"}], "}"}], "\[RuleDelayed]", 
                    
                    RowBox[{"ToExpression", "@", "s"}]}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                  "]"}], "[", 
                 RowBox[{
                 "\"\<\>\"", ",", "\[IndentingNewLine]", "Null", ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Enabled", "\[Rule]", "False"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Scaled", "[", "1", "]"}], ",", "35"}], "}"}]}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"Appearance", "\[Rule]", 
                   RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"\"\<Palette\>\"", ",", "\[IndentingNewLine]", 
                    RowBox[{"ImagePadding", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}]}], 
                    "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
                 "]"}]}]}], "}"}], "\[IndentingNewLine]", "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Spacings", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"Alignment", "\[Rule]", "Top"}]}], "\[IndentingNewLine]", 
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]",
      "]"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6872011163071823`*^9, 3.687201129454047*^9}, {
   3.6872012581157207`*^9, 3.68720145040117*^9}, {3.68720150989983*^9, 
   3.687201520538145*^9}, {3.6872015858408422`*^9, 3.687201591111195*^9}, {
   3.687201671028984*^9, 3.6872016719049397`*^9}, 3.687202274408587*^9, {
   3.687206805610182*^9, 3.687206806782692*^9}, {3.6872077017587957`*^9, 
   3.68720778182791*^9}, {3.687207872875309*^9, 3.6872078748653708`*^9}, {
   3.687207966431254*^9, 3.687207973100337*^9}, {3.687214386074484*^9, 
   3.687214386641005*^9}, {3.687287105147649*^9, 3.6872871063305187`*^9}, {
   3.68728724832055*^9, 3.687287310923757*^9}, {3.687287526725218*^9, 
   3.687287548420718*^9}, {3.687287681999627*^9, 3.687287694783678*^9}, {
   3.687287729457768*^9, 3.687287735709916*^9}, {3.687287787603938*^9, 
   3.6872877876919823`*^9}, 3.687288734241604*^9, {3.701991670640298*^9, 
   3.701991801180348*^9}, {3.701991878128026*^9, 3.701991907287424*^9}, {
   3.701991994588539*^9, 3.7019921574254923`*^9}, {3.701992192521316*^9, 
   3.7019925808467007`*^9}, {3.701992617310247*^9, 3.701992656132185*^9}, {
   3.701993288139042*^9, 3.7019932888063927`*^9}, {3.701993545224392*^9, 
   3.701993548799996*^9}, {3.701993725920678*^9, 3.7019937752130547`*^9}, {
   3.701993871661899*^9, 3.701993910610806*^9}, {3.7019940988401423`*^9, 
   3.701994105926777*^9}, {3.7020432784226923`*^9, 3.702043282942161*^9}, {
   3.702378798293951*^9, 3.702378848281457*^9}, 3.7023795646702127`*^9, {
   3.702379601543417*^9, 3.702379911317745*^9}, {3.7023799418854103`*^9, 
   3.702380066096846*^9}, {3.702383920091278*^9, 3.702384088441781*^9}, {
   3.7026056937195177`*^9, 3.702605701753223*^9}, {3.70264779196099*^9, 
   3.702647865070588*^9}, {3.7027275208427477`*^9, 3.702727551369746*^9}, {
   3.70282944400325*^9, 3.702829492659995*^9}, {3.702830657830206*^9, 
   3.702830663463813*^9}, {3.7037280729916477`*^9, 3.703728097682042*^9}, {
   3.703890612352201*^9, 3.7038906131370792`*^9}, {3.703890652078774*^9, 
   3.70389076018661*^9}, 3.7044740463910913`*^9, {3.704474089607019*^9, 
   3.704474149609222*^9}, {3.704474215277972*^9, 3.704474280837757*^9}, {
   3.704474354415554*^9, 3.704474383232568*^9}, {3.710112844429328*^9, 
   3.710112852012473*^9}, {3.7101128890298243`*^9, 3.7101129479311*^9}, {
   3.710112981019966*^9, 3.710112994612699*^9}, 3.710173271643364*^9, {
   3.710249135098988*^9, 3.710249179346023*^9}, {3.712927058692286*^9, 
   3.712927367507615*^9}, {3.717868985590184*^9, 3.717868987266685*^9}, {
   3.719594899705991*^9, 3.7195949005241213`*^9}, {3.721050980489236*^9, 
   3.721050993358871*^9}, {3.721051040062414*^9, 3.721051083292997*^9}, {
   3.72105431524149*^9, 3.7210543184714937`*^9}, {3.721054534923957*^9, 
   3.721054538954318*^9}, {3.721056301960013*^9, 3.721056303629983*^9}, {
   3.726971966289572*^9, 3.726972089111635*^9}, {3.726972123910125*^9, 
   3.7269721331142397`*^9}, {3.726972164906226*^9, 3.726972187401609*^9}, {
   3.726972269761898*^9, 3.726972332358938*^9}, {3.726974376354307*^9, 
   3.726974416055366*^9}, {3.726974800929989*^9, 3.7269748655665417`*^9}, {
   3.7276523799937277`*^9, 3.7276525214486217`*^9}, {3.727652702866034*^9, 
   3.727652712359791*^9}, 3.727652873668144*^9, {3.727652904178234*^9, 
   3.7276529210661297`*^9}, {3.727652972725277*^9, 3.7276530376706457`*^9}, {
   3.727653070469872*^9, 3.7276530748062353`*^9}, {3.727653104808972*^9, 
   3.72765310587814*^9}, {3.7276531379198837`*^9, 3.727653173918418*^9}, {
   3.727653219919832*^9, 3.7276532396287746`*^9}, {3.7276533005982313`*^9, 
   3.72765340558399*^9}, {3.727830726146922*^9, 3.727830726532498*^9}, {
   3.727830797312345*^9, 3.727830833279808*^9}, {3.727830864959963*^9, 
   3.727830914685256*^9}, {3.727897832140437*^9, 3.7278978561743317`*^9}, {
   3.7326388508054533`*^9, 3.73263886334128*^9}, {3.732638931565346*^9, 
   3.732638934474873*^9}, {3.73263901521875*^9, 3.7326390166797657`*^9}, {
   3.7562219089685173`*^9, 3.756221910500547*^9}, {3.756221947343655*^9, 
   3.756221949785574*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"25848e96-07bd-4a72-a68a-eb538031c5c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["StatusArea", "Subsubsection",
 CellChangeTimes->{{3.701993950104155*^9, 
  3.7019939577040358`*^9}},ExpressionUUID->"1050a369-2baf-4f51-973d-\
719e9a07995a"],

Cell[BoxData[
 RowBox[{"StyleSheetEdit", "[", 
  RowBox[{"\"\<Notebook\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"WindowStatusArea", "\[Rule]", "\[IndentingNewLine]", 
    RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"CurrentValue", "[", "\"\<NotebookSelected\>\"", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"mp", "=", 
            RowBox[{"Replace", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"MousePosition", "[", "\"\<DocumentAbsolute\>\"", "]"}],
               ",", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"None", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"1.", ",", "1."}], "}"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"w_", ",", "h_"}], "}"}], "\[RuleDelayed]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Max", "@", 
                    RowBox[{"{", 
                    RowBox[{"h", ",", "1."}], "}"}]}], ",", 
                   RowBox[{"Max", "@", 
                    RowBox[{"{", 
                    RowBox[{"w", ",", "1."}], "}"}]}]}], "}"}]}]}], "}"}]}], 
             "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"wh", "=", 
            RowBox[{"{", 
             RowBox[{"20", ",", "8"}], "}"}]}]}], "\[IndentingNewLine]", 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"StringJoin", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<R: \>\"", ",", "\[IndentingNewLine]", 
            RowBox[{"Insert", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"ToString", "/@", 
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"1", "+", 
                   RowBox[{"Floor", "@", 
                    RowBox[{"(", 
                    RowBox[{"#1", "/", "#2"}], ")"}]}]}], "&"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"mp", ",", "wh"}], "}"}]}], "]"}]}], ",", 
              "\[IndentingNewLine]", "\"\< C: \>\"", ",", 
              "\[IndentingNewLine]", "2"}], "\[IndentingNewLine]", "]"}]}], 
           "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}], 
       ",", "\[IndentingNewLine]", "\"\<\>\""}], "\[IndentingNewLine]", "]"}],
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",\

 CellChangeTimes->{{3.6872011163071823`*^9, 3.687201129454047*^9}, {
   3.6872012581157207`*^9, 3.68720145040117*^9}, {3.68720150989983*^9, 
   3.687201520538145*^9}, {3.6872015858408422`*^9, 3.687201591111195*^9}, {
   3.687201671028984*^9, 3.6872016719049397`*^9}, 3.687202274408587*^9, {
   3.687206805610182*^9, 3.687206806782692*^9}, {3.6872077017587957`*^9, 
   3.68720778182791*^9}, {3.687207872875309*^9, 3.6872078748653708`*^9}, {
   3.687207966431254*^9, 3.687207973100337*^9}, {3.687214386074484*^9, 
   3.687214386641005*^9}, {3.687287105147649*^9, 3.6872871063305187`*^9}, {
   3.68728724832055*^9, 3.687287310923757*^9}, {3.687287526725218*^9, 
   3.687287548420718*^9}, {3.687287681999627*^9, 3.687287694783678*^9}, {
   3.687287729457768*^9, 3.687287735709916*^9}, {3.687287787603938*^9, 
   3.6872877876919823`*^9}, 3.687288734241604*^9, {3.701991670640298*^9, 
   3.701991801180348*^9}, {3.701991878128026*^9, 3.701991907287424*^9}, {
   3.701991994588539*^9, 3.7019921574254923`*^9}, {3.701992192521316*^9, 
   3.7019925808467007`*^9}, {3.701992617310247*^9, 3.701992656132185*^9}, {
   3.701993288139042*^9, 3.7019932888063927`*^9}, {3.701993545224392*^9, 
   3.701993548799996*^9}, {3.701993725920678*^9, 3.7019937752130547`*^9}, {
   3.701993871661899*^9, 3.701993955850397*^9}, 
   3.7269719663371763`*^9},ExpressionUUID->"8cb393c6-cd15-4e6e-866c-\
ec6ed300dfb3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Events", "Subsubsection",
 CellChangeTimes->{{3.701993931274255*^9, 
  3.701993942953557*^9}},ExpressionUUID->"5b932f2a-ff35-4c18-bf43-\
ca1da2187fb4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Begin", "[", "\"\<FrontEnd`ReturnTracking`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StyleSheetEditEvents", "[", 
   RowBox[{
   "\"\<Notebook\>\"", ",", "NotebookEventActions", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ReturnKeyDown\>\"", "\[RuleDelayed]", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "LastTimes"}], "\[Equal]", "0"}], ",", 
         RowBox[{"LastTimes", "=", 
          RowBox[{"{", "Yesterday", "}"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"LastTimes", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Last", "@", "LastTimes"}], ",", "Now"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"LastTimes", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"LastTimes", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "<", 
          RowBox[{"Quantity", "[", 
           RowBox[{".25", ",", "\"\<Seconds\>\""}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"MatchQ", "[", 
            RowBox[{
             RowBox[{"NotebookRead", "[", 
              RowBox[{"EvaluationNotebook", "[", "]"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"_Cell", "|", 
              RowBox[{"{", "__Cell", "}"}]}]}], "\[IndentingNewLine]", "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Do", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"s", "=", "s"}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Replace", "[", 
                 RowBox[{
                  RowBox[{"NotebookRead", "[", "s", "]"}], ",", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cell", "[", 
                    RowBox[{"e_", ",", "\"\<Input\>\"", ",", "o___"}], "]"}], 
                    "\[RuleDelayed]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"SelectionMove", "[", 
                    RowBox[{
                    "s", ",", "All", ",", "Cell", ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"AutoScroll", "\[Rule]", "False"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"FrontEndTokenExecute", "[", 
                    RowBox[{
                    "s", ",", "\[IndentingNewLine]", "\"\<Style\>\"", ",", 
                    "\"\<CodeInput\>\""}], "]"}], ";"}], 
                    "\[IndentingNewLine]", ")"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Cell", "[", 
                    RowBox[{"e_", ",", "\"\<CodeInput\>\"", ",", "o___"}], 
                    "]"}], "\[RuleDelayed]", "\[IndentingNewLine]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"SelectionMove", "[", 
                    RowBox[{
                    "s", ",", "All", ",", "Cell", ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"AutoScroll", "\[Rule]", "False"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"FrontEndTokenExecute", "[", 
                    RowBox[{
                    "s", ",", "\[IndentingNewLine]", "\"\<Style\>\"", ",", 
                    "\"\<Input\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
                    ")"}]}]}], "\[IndentingNewLine]", "}"}]}], "]"}]}], 
               "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"s", ",", 
                RowBox[{"SelectedCells", "[", "]"}]}], "}"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
      ")"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PassEventsDown", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.701528101920475*^9, 3.701528280914007*^9}, {
   3.701528586092412*^9, 3.7015286433241577`*^9}, {3.701528693808519*^9, 
   3.701528696600539*^9}, {3.701528803268044*^9, 3.701528819499811*^9}, {
   3.7015288845278997`*^9, 3.701529035969047*^9}, {3.701529115654058*^9, 
   3.701529165379587*^9}, {3.701529207275876*^9, 3.7015292224018793`*^9}, {
   3.70152927042304*^9, 3.701529357862137*^9}, {3.7015293880604677`*^9, 
   3.701529395668597*^9}, {3.701529425801455*^9, 3.70152942754428*^9}, {
   3.701529468499433*^9, 3.7015294913076277`*^9}, {3.701529586402457*^9, 
   3.701529611696434*^9}, {3.7015300607624474`*^9, 3.701530139918179*^9}, {
   3.701530206750928*^9, 3.701530253534041*^9}, 
   3.726971966350513*^9},ExpressionUUID->"84e582f7-8ed4-4e9a-82a5-\
d49d892ef3d3"],

Cell[BoxData[
 TemplateBox[{
  "Options","optnf",
   "\"\\!\\(\\*RowBox[{\\\"NotebookEventActions\\\"}]\\) is not a known \
option for \\!\\(\\*RowBox[{\\\"CellObject\\\"}]\\).\"",2,115,31,
   27212009123493206758,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7015291441836033`*^9, 3.701529173312666*^9}, {
   3.701529208542791*^9, 3.701529223005286*^9}, {3.701529273313703*^9, 
   3.7015292883864307`*^9}, {3.701529332180472*^9, 3.701529347184795*^9}, 
   3.701529396856751*^9, 3.701529427972046*^9, {3.701529473971623*^9, 
   3.7015294933030167`*^9}, 3.701529613130837*^9, 3.701530079624817*^9, 
   3.701530142415471*^9, 3.701530209544918*^9, 
   3.7015302547522078`*^9},ExpressionUUID->"48b98768-134a-4492-8147-\
9765e8cc743d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Others", "Subsubsection",
 CellChangeTimes->{{3.702961502319618*^9, 
  3.702961503085437*^9}},ExpressionUUID->"0f48b68c-4994-465f-bc9b-\
f9628e3c24af"],

Cell[BoxData[
 RowBox[{"StyleSheetEdit", "[", 
  RowBox[{"\"\<Notebook\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PrivateNotebookOptions", "\[Rule]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<FileOutlineCache\>\"", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<FileContents\>\"", "\[Rule]", 
         RowBox[{
         "{", "\[IndentingNewLine]", "\"\<NotebookData\>\"", 
          "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"ShowPredictiveInterface", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"System`TrackCellChangeTimes", "\[Rule]", "False"}]}], 
    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.702961503761972*^9, 3.702961518167987*^9}, {
   3.702961554568828*^9, 3.7029615555336123`*^9}, {3.7029616890911407`*^9, 
   3.702961717383815*^9}, {3.703344942519599*^9, 3.703344947885191*^9}, {
   3.703345050419215*^9, 3.70334505348131*^9}, {3.703347923483395*^9, 
   3.7033479246250153`*^9}, 3.7269719663801928`*^9, {3.735671746476809*^9, 
   3.7356717541525507`*^9}},
 CellLabel->
  "In[631]:=",ExpressionUUID->"b4a18d8b-448a-4523-8092-723ba18be48f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DockedCell", "Subsection",
 CellChangeTimes->{{3.701991926180812*^9, 
  3.701991934052006*^9}},ExpressionUUID->"4f0deb81-c151-48cd-b66e-\
5d73e8cb5b87"],

Cell[BoxData[
 RowBox[{"StyleSheetNew", "[", "\"\<DockedCell\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.70199181817808*^9, 3.701991822642605*^9}, {
  3.732638524006303*^9, 
  3.7326385256923523`*^9}},ExpressionUUID->"0dda4f64-bd5a-4174-ac9f-\
5b80e569dae6"],

Cell[CellGroupData[{

Cell[StyleData["DockedCell"],
 CellFrame->None,
 CellMargins->None,
 CellFrameMargins->{{0, 0}, {-2, 
  0}},ExpressionUUID->"c917417a-9be6-4709-a6b5-8ec3b317ed42"],

Cell[BoxData[
 RowBox[{"StyleSheetEdit", "[", 
  RowBox[{"\"\<DockedCell\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"CellFrameMargins", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "0"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"CellMargins", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CellFrame", "\[Rule]", "None"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.701991824163311*^9, 3.701991859186008*^9}, {
   3.701993988442349*^9, 3.701994003807358*^9}, 
   3.726971966410164*^9},ExpressionUUID->"09338fb0-6dde-4761-aadf-\
921da5af6ed7"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Primary", "Section",
 CellChangeTimes->{{3.701991936299202*^9, 
  3.7019919405160007`*^9}},ExpressionUUID->"9e2bc904-61b9-47d8-8cc4-\
bbd725298a64"],

Cell[CellGroupData[{

Cell["Classic Styles", "Subsection",
 CellChangeTimes->{{3.7314300271389227`*^9, 
  3.731430031217709*^9}},ExpressionUUID->"13fcdcc4-02d4-498e-af70-\
fcff1d85ba53"],

Cell[StyleData["Title"],
 MenuCommandKey->None,ExpressionUUID->"1089f6d0-4ac5-472f-8344-7ad5494d9451"],

Cell[StyleData["Chapter"],
 MenuCommandKey->None,ExpressionUUID->"7e1e1b26-edb2-487f-ba14-ab6ea39e883f"],

Cell[StyleData["Subchapter"],
 MenuCommandKey->None,ExpressionUUID->"996f8c91-cc89-40d2-951c-16a32f5b32aa"]
}, Closed]],

Cell[CellGroupData[{

Cell["Code", "Subsection",
 CellChangeTimes->{{3.701991954530994*^9, 
  3.701991954955996*^9}},ExpressionUUID->"3fc6d099-96f2-43e4-b025-\
e699521cff38"],

Cell[StyleData["CodeChapter", StyleDefinitions -> StyleData["Chapter"]],
 ExportAutoReplacements->{
  "\[LeftCeiling]" -> "(* ::Chapter:: *)\n(*", "\[RightFloor]" -> "*)\n"},
 CellFrame->FEPrivate`If[
   FEPrivate`SameQ[
    FrontEnd`CurrentValue[
     FEPrivate`Self[], Evaluatable], True], {{0, 0}, {0, 1}}, Inherited],
 ShowGroupOpener->False,
 CellBracketOptions->{"Color"->RGBColor[0.6, 0.4, 0.9]},
 StyleKeyMapping->{"Tab" -> "CodeSection"},
 CellEvaluationFunction->(With[{FrontEnd`EventTracking`ev$ = CurrentValue[
      EvaluationCell[], Evaluatable], FrontEnd`EventTracking`text$ = First[
      NotebookRead[
       EvaluationCell[]]]}, SelectionMove[
     EvaluationCell[], All, CellContents]; NotebookWrite[
     EvaluationNotebook[], 
     If[
      TrueQ[FrontEnd`EventTracking`ev$], 
      StringTrim[FrontEnd`EventTracking`text$, 
       Alternatives[
        StringExpression[StartOfString, 
         Alternatives[Whitespace, ""], "\[LeftCeiling]"], 
        StringExpression["\[RightFloor]", 
         Alternatives[Whitespace, ""], EndOfString]]], 
      StringJoin[
      "\[LeftCeiling]", FrontEnd`EventTracking`text$, "\[RightFloor]"]]]; 
   SetOptions[
     EvaluationCell[], {Evaluatable -> Not[FrontEnd`EventTracking`ev$]}]; 
   Null]& ),
 InitializationGroup->True,
 CellEventActions->{{"MenuCommand", "HandleShiftReturn"} :> 
   With[{FrontEnd`EventTracking`ev$ = CurrentValue[
        EvaluationCell[], Evaluatable], FrontEnd`EventTracking`text$ = First[
        NotebookRead[
         EvaluationCell[]]]}, SelectionMove[
       EvaluationCell[], All, CellContents]; NotebookWrite[
       EvaluationNotebook[], 
       If[
        TrueQ[FrontEnd`EventTracking`ev$], 
        StringTrim[FrontEnd`EventTracking`text$, 
         Alternatives[
          StringExpression[StartOfString, 
           Alternatives[Whitespace, ""], "\[LeftCeiling]"], 
          StringExpression["\[RightFloor]", 
           Alternatives[Whitespace, ""], EndOfString]]], 
        StringJoin[
        "\[LeftCeiling]", FrontEnd`EventTracking`text$, "\[RightFloor]"]]]; 
     SetOptions[
       EvaluationCell[], {Evaluatable -> Not[FrontEnd`EventTracking`ev$]}]; 
     Null], ExportAutoReplacements -> {
    "\[LeftCeiling]" -> "(* ::Chapter:: *)\n(*", "\[RightFloor]" -> "*)\n"}, 
   CellFrame -> FEPrivate`If[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FEPrivate`Self[], Evaluatable], True], {{0, 0}, {0, 1}}, Inherited], 
   CellFrameColor -> FEPrivate`If[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FEPrivate`Self[], Evaluatable], True], 
     GrayLevel[0.95], Inherited]},
 ShowCellLabel->False,
 CellFrameColor->FEPrivate`If[
   FEPrivate`SameQ[
    FrontEnd`CurrentValue[
     FEPrivate`Self[], Evaluatable], True], 
   GrayLevel[0.95], Inherited],
 DefaultNewCellStyle->"CodeInput",
 MenuSortingValue->1175,
 MenuCommandKey->None,
 FontFamily->"Source Sans Pro",
 FontWeight->"Plain",ExpressionUUID->"9e9a7ae6-a4a9-486a-a5ad-cf6ecac3a47c"],

Cell[StyleData["CodeSection", StyleDefinitions -> StyleData["Section"]],
 ExportAutoReplacements->{
  "\[LeftCeiling]" -> "(* ::Section:: *)\n(*", "\[RightFloor]" -> "*)\n"},
 CellFrame->FEPrivate`If[
   FEPrivate`SameQ[
    FrontEnd`CurrentValue[
     FEPrivate`Self[], Evaluatable], True], {{0, 0}, {0, 1}}, {{0, 0}, {0, 
   1}}],
 ShowGroupOpener->False,
 WholeCellGroupOpener->False,
 CellBracketOptions->{"Color"->RGBColor[0.6, 0.4, 0.9]},
 StyleKeyMapping->{"Tab" -> "CodeSubsection", "Backspace" -> "CodeChapter"},
 CellEvaluationFunction->(With[{FrontEnd`EventTracking`ev$ = CurrentValue[
      EvaluationCell[], Evaluatable], FrontEnd`EventTracking`text$ = First[
      NotebookRead[
       EvaluationCell[]]]}, SelectionMove[
     EvaluationCell[], All, CellContents]; NotebookWrite[
     EvaluationNotebook[], 
     If[
      TrueQ[FrontEnd`EventTracking`ev$], 
      StringTrim[FrontEnd`EventTracking`text$, 
       Alternatives[
        StringExpression[StartOfString, 
         Alternatives[Whitespace, ""], "\[LeftCeiling]"], 
        StringExpression["\[RightFloor]", 
         Alternatives[Whitespace, ""], EndOfString]]], 
      StringJoin[
      "\[LeftCeiling]", FrontEnd`EventTracking`text$, "\[RightFloor]"]]]; 
   SetOptions[
     EvaluationCell[], {Evaluatable -> Not[FrontEnd`EventTracking`ev$]}]; 
   Null]& ),
 InitializationGroup->True,
 CellEventActions->{{"MenuCommand", "HandleShiftReturn"} :> 
   With[{FrontEnd`EventTracking`ev$ = CurrentValue[
        EvaluationCell[], Evaluatable], FrontEnd`EventTracking`text$ = First[
        NotebookRead[
         EvaluationCell[]]]}, SelectionMove[
       EvaluationCell[], All, CellContents]; NotebookWrite[
       EvaluationNotebook[], 
       If[
        TrueQ[FrontEnd`EventTracking`ev$], 
        StringTrim[FrontEnd`EventTracking`text$, 
         Alternatives[
          StringExpression[StartOfString, 
           Alternatives[Whitespace, ""], "\[LeftCeiling]"], 
          StringExpression["\[RightFloor]", 
           Alternatives[Whitespace, ""], EndOfString]]], 
        StringJoin[
        "\[LeftCeiling]", FrontEnd`EventTracking`text$, "\[RightFloor]"]]]; 
     SetOptions[
       EvaluationCell[], {Evaluatable -> Not[FrontEnd`EventTracking`ev$]}]; 
     Null], ExportAutoReplacements -> {
    "\[LeftCeiling]" -> "(* ::Section:: *)\n(*", "\[RightFloor]" -> "*)\n"}, 
   CellFrame -> FEPrivate`If[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FEPrivate`Self[], Evaluatable], True], {{0, 0}, {0, 1}}, {{0, 0}, {0, 
     1}}], CellFrameColor -> FEPrivate`If[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FEPrivate`Self[], Evaluatable], True], 
     GrayLevel[0.95], 
     GrayLevel[0.8]], "ReturnKeyDown" :> If[
     Not[
      MatchQ[
       NotebookRead[
        NextCell[]], 
       Cell[
        Blank[], "InputSection", 
        BlankNullSequence[]]]], SelectionMove[
       EvaluationCell[], After, Cell]; NotebookWrite[
       EvaluationNotebook[], 
       Cell[
        BoxData["Begin[\"`Private`\"];"], "InputSection"]]; NotebookWrite[
       EvaluationNotebook[], 
       Cell[
        BoxData["End[];"], "InputSection"]]]},
 ShowCellLabel->False,
 CellFrameColor->FEPrivate`If[
   FEPrivate`SameQ[
    FrontEnd`CurrentValue[
     FEPrivate`Self[], Evaluatable], True], 
   GrayLevel[0.95], 
   GrayLevel[0.8]],
 DefaultNewCellStyle->"CodeInput",
 MenuSortingValue->1255,
 MenuCommandKey->"4",
 FontFamily->"Source Sans Pro",
 FontWeight->"Plain",ExpressionUUID->"18eae9d3-38b8-4cb1-83d4-619335d2ef9c"],

Cell[StyleData["CodeSubsection", StyleDefinitions -> StyleData["Subsection"]],
 ExportAutoReplacements->{
  "\[LeftCeiling]" -> "(* ::Subsection:: *)\n(*", "\[RightFloor]" -> "*)\n"},
 CellFrame->FEPrivate`If[
   FEPrivate`SameQ[
    FrontEnd`CurrentValue[
     FEPrivate`Self[], Evaluatable], True], {{0, 0}, {0, 1}}, Inherited],
 ShowGroupOpener->False,
 CellMargins->{{55, Inherited}, {Inherited, Inherited}},
 CellBracketOptions->{"HoverColor"->RGBColor[0.6, 0.4, 0.9]},
 StyleKeyMapping->{"Tab" -> "CodeSubsubsection", "Backspace" -> "CodeSection"},
 CellEvaluationFunction->(With[{FrontEnd`EventTracking`ev$ = CurrentValue[
      EvaluationCell[], Evaluatable], FrontEnd`EventTracking`text$ = First[
      NotebookRead[
       EvaluationCell[]]]}, SelectionMove[
     EvaluationCell[], All, CellContents]; NotebookWrite[
     EvaluationNotebook[], 
     If[
      TrueQ[FrontEnd`EventTracking`ev$], 
      StringTrim[FrontEnd`EventTracking`text$, 
       Alternatives[
        StringExpression[StartOfString, 
         Alternatives[Whitespace, ""], "\[LeftCeiling]"], 
        StringExpression["\[RightFloor]", 
         Alternatives[Whitespace, ""], EndOfString]]], 
      StringJoin[
      "\[LeftCeiling]", FrontEnd`EventTracking`text$, "\[RightFloor]"]]]; 
   SetOptions[
     EvaluationCell[], {Evaluatable -> Not[FrontEnd`EventTracking`ev$]}]; 
   Null]& ),
 CellEventActions->{{"MenuCommand", "HandleShiftReturn"} :> 
   With[{FrontEnd`EventTracking`ev$ = CurrentValue[
        EvaluationCell[], Evaluatable], FrontEnd`EventTracking`text$ = First[
        NotebookRead[
         EvaluationCell[]]]}, SelectionMove[
       EvaluationCell[], All, CellContents]; NotebookWrite[
       EvaluationNotebook[], 
       If[
        TrueQ[FrontEnd`EventTracking`ev$], 
        StringTrim[FrontEnd`EventTracking`text$, 
         Alternatives[
          StringExpression[StartOfString, 
           Alternatives[Whitespace, ""], "\[LeftCeiling]"], 
          StringExpression["\[RightFloor]", 
           Alternatives[Whitespace, ""], EndOfString]]], 
        StringJoin[
        "\[LeftCeiling]", FrontEnd`EventTracking`text$, "\[RightFloor]"]]]; 
     SetOptions[
       EvaluationCell[], {Evaluatable -> Not[FrontEnd`EventTracking`ev$]}]; 
     Null], ExportAutoReplacements -> {
    "\[LeftCeiling]" -> "(* ::Subsection:: *)\n(*", "\[RightFloor]" -> 
     "*)\n"}, CellFrame -> FEPrivate`If[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FEPrivate`Self[], Evaluatable], True], {{0, 0}, {0, 1}}, Inherited], 
   CellFrameColor -> FEPrivate`If[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FEPrivate`Self[], Evaluatable], True], 
     GrayLevel[0.95], Inherited]},
 ShowCellLabel->False,
 CellFrameColor->FEPrivate`If[
   FEPrivate`SameQ[
    FrontEnd`CurrentValue[
     FEPrivate`Self[], Evaluatable], True], 
   GrayLevel[0.95], Inherited],
 DefaultNewCellStyle->"CodeInput",
 MenuSortingValue->1305,
 MenuCommandKey->"5",
 FontFamily->"Source Sans Pro",
 FontWeight->"Plain",ExpressionUUID->"0099bbb4-a799-4619-80c8-bc65cc030088"],

Cell[StyleData["CodeSubsubsection", StyleDefinitions -> StyleData[
 "Subsubsection"]],
 ExportAutoReplacements->{
  "\[LeftCeiling]" -> "(* ::Subsubsection::Closed:: *)\n(*", "\[RightFloor]" -> 
   "*)\n"},
 CellFrame->FEPrivate`If[
   FEPrivate`SameQ[
    FrontEnd`CurrentValue[
     FEPrivate`Self[], Evaluatable], True], {{0, 0}, {0, 1}}, Inherited],
 ShowGroupOpener->False,
 CellMargins->{{59, Inherited}, {Inherited, Inherited}},
 CellBracketOptions->{"HoverColor"->RGBColor[0.6, 0.4, 0.9]},
 StyleKeyMapping->{
  "Tab" -> "CodeSubsubsubsection", "Backspace" -> "CodeSubsection"},
 CellEvaluationFunction->(With[{FrontEnd`EventTracking`ev$ = CurrentValue[
      EvaluationCell[], Evaluatable], FrontEnd`EventTracking`text$ = First[
      NotebookRead[
       EvaluationCell[]]]}, SelectionMove[
     EvaluationCell[], All, CellContents]; NotebookWrite[
     EvaluationNotebook[], 
     If[
      TrueQ[FrontEnd`EventTracking`ev$], 
      StringTrim[FrontEnd`EventTracking`text$, 
       Alternatives[
        StringExpression[StartOfString, 
         Alternatives[Whitespace, ""], "\[LeftCeiling]"], 
        StringExpression["\[RightFloor]", 
         Alternatives[Whitespace, ""], EndOfString]]], 
      StringJoin[
      "\[LeftCeiling]", FrontEnd`EventTracking`text$, "\[RightFloor]"]]]; 
   SetOptions[
     EvaluationCell[], {Evaluatable -> Not[FrontEnd`EventTracking`ev$]}]; 
   Null]& ),
 CellEventActions->{{"MenuCommand", "HandleShiftReturn"} :> 
   With[{FrontEnd`EventTracking`ev$ = CurrentValue[
        EvaluationCell[], Evaluatable], FrontEnd`EventTracking`text$ = First[
        NotebookRead[
         EvaluationCell[]]]}, SelectionMove[
       EvaluationCell[], All, CellContents]; NotebookWrite[
       EvaluationNotebook[], 
       If[
        TrueQ[FrontEnd`EventTracking`ev$], 
        StringTrim[FrontEnd`EventTracking`text$, 
         Alternatives[
          StringExpression[StartOfString, 
           Alternatives[Whitespace, ""], "\[LeftCeiling]"], 
          StringExpression["\[RightFloor]", 
           Alternatives[Whitespace, ""], EndOfString]]], 
        StringJoin[
        "\[LeftCeiling]", FrontEnd`EventTracking`text$, "\[RightFloor]"]]]; 
     SetOptions[
       EvaluationCell[], {Evaluatable -> Not[FrontEnd`EventTracking`ev$]}]; 
     Null], ExportAutoReplacements -> {
    "\[LeftCeiling]" -> "(* ::Subsubsection::Closed:: *)\n(*", 
     "\[RightFloor]" -> "*)\n"}, CellFrame -> FEPrivate`If[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FEPrivate`Self[], Evaluatable], True], {{0, 0}, {0, 1}}, Inherited], 
   CellFrameColor -> FEPrivate`If[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FEPrivate`Self[], Evaluatable], True], 
     GrayLevel[0.95], Inherited]},
 ShowCellLabel->False,
 CellFrameColor->FEPrivate`If[
   FEPrivate`SameQ[
    FrontEnd`CurrentValue[
     FEPrivate`Self[], Evaluatable], True], 
   GrayLevel[0.95], Inherited],
 DefaultNewCellStyle->"CodeInput",
 MenuSortingValue->1105,
 MenuCommandKey->"6",
 FontFamily->"Source Sans Pro",
 FontWeight->"Plain",ExpressionUUID->"4dac8274-e8b1-44bb-8361-732a61e94f68"],

Cell[StyleData["CodeSubsubsubsection", StyleDefinitions -> StyleData[
 "Subsubsubsection"]],
 ExportAutoReplacements->{
  "\[LeftCeiling]" -> "(* ::Subsubsubsection::Closed:: *)\n(*", 
   "\[RightFloor]" -> "*)\n"},
 CellFrame->FEPrivate`If[
   FEPrivate`SameQ[
    FrontEnd`CurrentValue[
     FEPrivate`Self[], Evaluatable], True], {{0, 0}, {0, 1}}, Inherited],
 ShowGroupOpener->False,
 CellMargins->{{63, Inherited}, {Inherited, Inherited}},
 StyleKeyMapping->{
  "Tab" -> "CodeSubsubsubsubsection", "Backspace" -> "CodeSubsubsection"},
 CellEvaluationFunction->(With[{FrontEnd`EventTracking`ev$ = CurrentValue[
      EvaluationCell[], Evaluatable], FrontEnd`EventTracking`text$ = First[
      NotebookRead[
       EvaluationCell[]]]}, SelectionMove[
     EvaluationCell[], All, CellContents]; NotebookWrite[
     EvaluationNotebook[], 
     If[
      TrueQ[FrontEnd`EventTracking`ev$], 
      StringTrim[FrontEnd`EventTracking`text$, 
       Alternatives[
        StringExpression[StartOfString, 
         Alternatives[Whitespace, ""], "\[LeftCeiling]"], 
        StringExpression["\[RightFloor]", 
         Alternatives[Whitespace, ""], EndOfString]]], 
      StringJoin[
      "\[LeftCeiling]", FrontEnd`EventTracking`text$, "\[RightFloor]"]]]; 
   SetOptions[
     EvaluationCell[], {Evaluatable -> Not[FrontEnd`EventTracking`ev$]}]; 
   Null]& ),
 CellEventActions->{{"MenuCommand", "HandleShiftReturn"} :> 
   With[{FrontEnd`EventTracking`ev$ = CurrentValue[
        EvaluationCell[], Evaluatable], FrontEnd`EventTracking`text$ = First[
        NotebookRead[
         EvaluationCell[]]]}, SelectionMove[
       EvaluationCell[], All, CellContents]; NotebookWrite[
       EvaluationNotebook[], 
       If[
        TrueQ[FrontEnd`EventTracking`ev$], 
        StringTrim[FrontEnd`EventTracking`text$, 
         Alternatives[
          StringExpression[StartOfString, 
           Alternatives[Whitespace, ""], "\[LeftCeiling]"], 
          StringExpression["\[RightFloor]", 
           Alternatives[Whitespace, ""], EndOfString]]], 
        StringJoin[
        "\[LeftCeiling]", FrontEnd`EventTracking`text$, "\[RightFloor]"]]]; 
     SetOptions[
       EvaluationCell[], {Evaluatable -> Not[FrontEnd`EventTracking`ev$]}]; 
     Null], ExportAutoReplacements -> {
    "\[LeftCeiling]" -> "(* ::Subsubsubsection::Closed:: *)\n(*", 
     "\[RightFloor]" -> "*)\n"}, CellFrame -> FEPrivate`If[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FEPrivate`Self[], Evaluatable], True], {{0, 0}, {0, 1}}, Inherited], 
   CellFrameColor -> FEPrivate`If[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FEPrivate`Self[], Evaluatable], True], 
     GrayLevel[0.95], Inherited]},
 ShowCellLabel->False,
 CellFrameColor->FEPrivate`If[
   FEPrivate`SameQ[
    FrontEnd`CurrentValue[
     FEPrivate`Self[], Evaluatable], True], 
   GrayLevel[0.95], Inherited],
 DefaultNewCellStyle->"CodeInput",
 MenuSortingValue->1355,
 FontFamily->"Source Sans Pro",
 FontWeight->"Plain",ExpressionUUID->"0b54436f-4873-49cd-b34b-b841c64c1f8b"],

Cell[StyleData["CodeSubsubsubsubsection", StyleDefinitions -> StyleData[
 "Subsubsubsubsection"]],
 ExportAutoReplacements->{
  "\[LeftCeiling]" -> "(* ::Subsubsubsubsection::Closed:: *)\n(*", 
   "\[RightFloor]" -> "*)\n"},
 CellFrame->FEPrivate`If[
   FEPrivate`SameQ[
    FrontEnd`CurrentValue[
     FEPrivate`Self[], Evaluatable], True], {{0, 0}, {0, 1}}, Inherited],
 ShowGroupOpener->False,
 CellMargins->{{67, Inherited}, {Inherited, Inherited}},
 StyleKeyMapping->{"Backspace" -> "CodeSubsubsubsection"},
 CellEvaluationFunction->(With[{FrontEnd`EventTracking`ev$ = CurrentValue[
      EvaluationCell[], Evaluatable], FrontEnd`EventTracking`text$ = First[
      NotebookRead[
       EvaluationCell[]]]}, SelectionMove[
     EvaluationCell[], All, CellContents]; NotebookWrite[
     EvaluationNotebook[], 
     If[
      TrueQ[FrontEnd`EventTracking`ev$], 
      StringTrim[FrontEnd`EventTracking`text$, 
       Alternatives[
        StringExpression[StartOfString, 
         Alternatives[Whitespace, ""], "\[LeftCeiling]"], 
        StringExpression["\[RightFloor]", 
         Alternatives[Whitespace, ""], EndOfString]]], 
      StringJoin[
      "\[LeftCeiling]", FrontEnd`EventTracking`text$, "\[RightFloor]"]]]; 
   SetOptions[
     EvaluationCell[], {Evaluatable -> Not[FrontEnd`EventTracking`ev$]}]; 
   Null]& ),
 CellEventActions->{{"MenuCommand", "HandleShiftReturn"} :> 
   With[{FrontEnd`EventTracking`ev$ = CurrentValue[
        EvaluationCell[], Evaluatable], FrontEnd`EventTracking`text$ = First[
        NotebookRead[
         EvaluationCell[]]]}, SelectionMove[
       EvaluationCell[], All, CellContents]; NotebookWrite[
       EvaluationNotebook[], 
       If[
        TrueQ[FrontEnd`EventTracking`ev$], 
        StringTrim[FrontEnd`EventTracking`text$, 
         Alternatives[
          StringExpression[StartOfString, 
           Alternatives[Whitespace, ""], "\[LeftCeiling]"], 
          StringExpression["\[RightFloor]", 
           Alternatives[Whitespace, ""], EndOfString]]], 
        StringJoin[
        "\[LeftCeiling]", FrontEnd`EventTracking`text$, "\[RightFloor]"]]]; 
     SetOptions[
       EvaluationCell[], {Evaluatable -> Not[FrontEnd`EventTracking`ev$]}]; 
     Null], ExportAutoReplacements -> {
    "\[LeftCeiling]" -> "(* ::Subsubsubsubsection::Closed:: *)\n(*", 
     "\[RightFloor]" -> "*)\n"}, CellFrame -> FEPrivate`If[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FEPrivate`Self[], Evaluatable], True], {{0, 0}, {0, 1}}, Inherited], 
   CellFrameColor -> FEPrivate`If[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FEPrivate`Self[], Evaluatable], True], 
     GrayLevel[0.95], Inherited]},
 ShowCellLabel->False,
 CellFrameColor->FEPrivate`If[
   FEPrivate`SameQ[
    FrontEnd`CurrentValue[
     FEPrivate`Self[], Evaluatable], True], 
   GrayLevel[0.95], Inherited],
 DefaultNewCellStyle->"CodeInput",
 MenuSortingValue->1355,
 FontFamily->"Source Sans Pro",
 FontWeight->"Plain",ExpressionUUID->"c3772e5d-8ea2-4632-8317-3388696535ca"],

Cell[StyleData["CodeInput", StyleDefinitions -> StyleData[
 "SyntaxHighlightingInput"]],
 PageWidth->Infinity,
 ShowGroupOpener->False,
 CellMargins->{{67, Inherited}, {Inherited, Inherited}},
 StyleKeyMapping->None,
 CellEvaluationFunction->(Null& ),
 CellEventActions->{{"MenuCommand", "SelectionCloseAllGroups"} :> Quiet[
     Check[Needs["BTools`"]; Replace[
        Join[
         Names[
          StringJoin["BTools`", "IndentationEvent"]], 
         Names[
          StringJoin["BTools`", "*`IndentationEvent"]]], {{
           Pattern[BTools`Private`Package`f, 
            Blank[]], 
           BlankNullSequence[]} :> 
         ToExpression[BTools`Private`Package`f]["Indent"], Blank[] :> 
         SetAttributes[
           EvaluationCell[], CellEventActions -> None]}], 
      SetAttributes[
       EvaluationCell[], CellEventActions -> None]]], {
    "MenuCommand", "SelectionOpenAllGroups"} :> Quiet[
     Check[Needs["BTools`"]; Replace[
        Join[
         Names[
          StringJoin["BTools`", "IndentationEvent"]], 
         Names[
          StringJoin["BTools`", "*`IndentationEvent"]]], {{
           Pattern[BTools`Private`Package`f, 
            Blank[]], 
           BlankNullSequence[]} :> 
         ToExpression[BTools`Private`Package`f]["Dedent"], Blank[] :> 
         SetAttributes[
           EvaluationCell[], CellEventActions -> None]}], 
      SetAttributes[
       EvaluationCell[], CellEventActions -> None]]], {
    "MenuCommand", "InsertMatchingBrackets"} :> Quiet[
     Check[Needs["BTools`"]; Replace[
        Join[
         Names[
          StringJoin["BTools`", "IndentationEvent"]], 
         Names[
          StringJoin["BTools`", "*`IndentationEvent"]]], {{
           Pattern[BTools`Private`Package`f, 
            Blank[]], 
           BlankNullSequence[]} :> 
         ToExpression[BTools`Private`Package`f]["Toggle"], Blank[] :> 
         SetAttributes[
           EvaluationCell[], CellEventActions -> None]}], 
      SetAttributes[
       EvaluationCell[], CellEventActions -> None]]], PassEventsDown -> False},
 ShowCellLabel->False,
 AutoIndent->True,
 TabFilling->"_",
 LineSpacing->{0, 14},
 TabSpacings->1.5,
 AutoSpacing->False,
 LineIndent->1,
 MenuSortingValue->1505,
 MenuCommandKey->"`",
 FontSize->13,
 FontWeight->"Plain",ExpressionUUID->"adc61932-d0a8-4d56-ab2c-969b0a7778f9"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"MakeIndentable", "@", 
   RowBox[{"PreviousCell", "[", "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.71725342657089*^9, 
  3.717253429713491*^9}},ExpressionUUID->"d72dffe4-dfaf-4537-a3cb-\
647cc7acbad2"],

Cell[BoxData[
 RowBox[{"StyleSheetEdit", "[", 
  RowBox[{
   RowBox[{"\"\<Code\>\"", "~~", "___"}], ",", " ", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ShowGroupOpener", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FontWeight", "\[Rule]", "\"\<Plain\>\""}]}], 
    "\[IndentingNewLine]", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738094621090701*^9, 3.7380946297527113`*^9}, {
   3.75000526679217*^9, 3.7500052854930153`*^9}, {3.750005845090378*^9, 
   3.750005857688715*^9}, 3.750005888166115*^9},
 CellLabel->"In[96]:=",ExpressionUUID->"362833d2-97fb-43df-ab23-ff56c6f631fe"],

Cell[BoxData[
 RowBox[{"StyleSheetEdit", "[", 
  RowBox[{"\"\<CodeInput\>\"", ",", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StyleKeyMapping", "\[Rule]", "None"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MenuSortingValue", "\[Rule]", "1505"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MenuCommandKey", "\[Rule]", "\"\<`\>\""}]}], 
    "\[IndentingNewLine]", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.709296415477832*^9, 3.709296427883548*^9}, 
   3.726971966431284*^9, {3.734638100173815*^9, 3.7346381136987963`*^9}, {
   3.734638191820404*^9, 3.7346382003223953`*^9}, 3.738094614531478*^9, {
   3.751830355052676*^9, 3.7518303596838408`*^9}, 3.751830392989221*^9, {
   3.7518304466278763`*^9, 3.751830484792054*^9}, {3.751831321709577*^9, 
   3.751831358769465*^9}, {3.751831446354993*^9, 
   3.751831453283099*^9}},ExpressionUUID->"3b5fdce2-d08b-4be4-80b3-\
385202785a45"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"StyleSheetEdit", "[", 
      RowBox[{
       RowBox[{"\"\<Code\>\"", "<>", "#"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"CellMargins", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"55", "+", 
             RowBox[{"4", "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"#", "===", "\"\<Input\>\""}], ",", " ", "2", ",", 
                  " ", "1"}], "]"}]}], ")"}]}]}], ",", " ", "Inherited"}], 
           "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"Inherited", ",", " ", "Inherited"}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Append", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{"StringReplace", "[", 
         RowBox[{"\"\<S\>\"", "\[Rule]", "\"\<Subs\>\""}], "]"}], ",", 
        "\"\<Subsection\>\"", ",", " ", "3"}], "]"}], ",", 
      "\[IndentingNewLine]", "\"\<Input\>\""}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.738094621090701*^9, 3.7380946297527113`*^9}, {
  3.75000526679217*^9, 3.750005308389511*^9}, {3.7500054357644787`*^9, 
  3.7500054879111347`*^9}, {3.750005602326676*^9, 3.7500056429563007`*^9}, {
  3.750005683373413*^9, 3.750005744082568*^9}, {3.750005789157963*^9, 
  3.750005826338373*^9}, {3.75000591069986*^9, 3.7500059238877077`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"ed8c2179-cad1-4602-a08e-6e0b237805ca"],

Cell[CellGroupData[{

Cell["Eval Tracking", "Subsubsection",
 CellChangeTimes->{{3.731430054194949*^9, 
  3.731430056817024*^9}},ExpressionUUID->"22c53c63-3e0f-4730-91bb-\
277216fb3781"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Begin", "[", "\"\<FrontEnd`Private`EventTracking`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$escapeChars", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<\[LeftCeiling]\>\"", ",", "\"\<\[RightFloor]\>\""}], "}"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"leftEscape", "=", 
       RowBox[{"First", "@", "$escapeChars"}]}], ",", 
      RowBox[{"rightEscape", "=", 
       RowBox[{"Last", "@", "$escapeChars"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"StyleSheetEdit", "[", 
       RowBox[{"#", ",", "\[IndentingNewLine]", 
        RowBox[{"ShowCellLabel", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"CellEvaluationFunction", "\[Rule]", "\[IndentingNewLine]", 
         RowBox[{"Function", "[", "\[IndentingNewLine]", 
          RowBox[{"Function", "@", "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"ev", "=", 
                RowBox[{"CurrentValue", "[", 
                 RowBox[{
                  RowBox[{"EvaluationCell", "[", "]"}], ",", "Evaluatable"}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"text", "=", 
                RowBox[{"First", "@", 
                 RowBox[{"NotebookRead", "[", 
                  RowBox[{"EvaluationCell", "[", "]"}], "]"}]}]}]}], 
              "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"SelectionMove", "[", 
               RowBox[{
                RowBox[{"EvaluationCell", "[", "]"}], ",", 
                "\[IndentingNewLine]", "All", ",", "\[IndentingNewLine]", 
                "CellContents"}], "\[IndentingNewLine]", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"NotebookWrite", "[", 
               RowBox[{
                RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ev", "//", "TrueQ"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"StringTrim", "[", 
                   RowBox[{"text", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"StartOfString", "~~", 
                    RowBox[{"(", 
                    RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}], "~~", 
                    "leftEscape"}], ")"}], "|", "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{"rightEscape", "~~", 
                    RowBox[{"(", 
                    RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}], "~~", 
                    "EndOfString"}], ")"}]}]}], "\[IndentingNewLine]", "]"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"leftEscape", "<>", "text", "<>", "rightEscape"}]}],
                  "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"SetOptions", "[", 
               RowBox[{
                RowBox[{"EvaluationCell", "[", "]"}], ",", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{"Evaluatable", "\[Rule]", 
                  RowBox[{"Not", "@", "ev"}]}], "\[IndentingNewLine]", 
                 "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"CellEventActions", "\[Rule]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"DeleteDuplicatesBy", "[", "First", "]"}], "@", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{"_Rule", "|", "_RuleDelayed"}], "]"}], "@", 
           "\[IndentingNewLine]", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<MenuCommand\>\"", ",", "\"\<HandleShiftReturn\>\""}], 
                  "}"}], ":>", "\[IndentingNewLine]", 
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ev", "=", 
                    RowBox[{"CurrentValue", "[", 
                    RowBox[{
                    RowBox[{"EvaluationCell", "[", "]"}], ",", 
                    "Evaluatable"}], "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"text", "=", 
                    RowBox[{"First", "@", 
                    RowBox[{"NotebookRead", "[", 
                    RowBox[{"EvaluationCell", "[", "]"}], "]"}]}]}]}], 
                    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                   
                   RowBox[{
                    RowBox[{"SelectionMove", "[", 
                    RowBox[{
                    RowBox[{"EvaluationCell", "[", "]"}], ",", 
                    "\[IndentingNewLine]", "All", ",", "\[IndentingNewLine]", 
                    "CellContents"}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"NotebookWrite", "[", 
                    RowBox[{
                    RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ev", "//", "TrueQ"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"StringTrim", "[", 
                    RowBox[{"text", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"StartOfString", "~~", 
                    RowBox[{"(", 
                    RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}], "~~", 
                    "leftEscape"}], ")"}], "|", "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{"rightEscape", "~~", 
                    RowBox[{"(", 
                    RowBox[{"Whitespace", "|", "\"\<\>\""}], ")"}], "~~", 
                    "EndOfString"}], ")"}]}]}], "\[IndentingNewLine]", "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "leftEscape", "<>", "text", "<>", "rightEscape"}]}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"SetOptions", "[", 
                    RowBox[{
                    RowBox[{"EvaluationCell", "[", "]"}], ",", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"Evaluatable", "\[Rule]", 
                    RowBox[{"Not", "@", "ev"}]}], "\[IndentingNewLine]", 
                    "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"ExportAutoReplacements", "->", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"leftEscape", "\[Rule]", "\[IndentingNewLine]", 
                    RowBox[{"\"\<(* ::\>\"", "<>", 
                    RowBox[{"StringTrim", "[", 
                    RowBox[{"#", ",", "\"\<Code\>\""}], "]"}], "<>", 
                    "\"\<::\>\"", "<>", "\[IndentingNewLine]", 
                    RowBox[{"Switch", "[", 
                    RowBox[{
                    RowBox[{"StringTrim", "[", 
                    RowBox[{"#", ",", "\"\<Code\>\""}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "\"\<Subsubsection\>\"", "|", 
                    "\"\<Subsubsubsection\>\""}], ",", "\[IndentingNewLine]", 
                    "\"\<Closed::\>\"", ",", "\[IndentingNewLine]", "_", ",", 
                    "\[IndentingNewLine]", "\"\<\>\""}], 
                    "\[IndentingNewLine]", "]"}], "<>", 
                    "\[IndentingNewLine]", "\"\< *)\\n(*\>\""}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"rightEscape", "\[Rule]", "\"\<*)\\n\>\""}]}], 
                  "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
                
                RowBox[{"CellFrame", "\[Rule]", "\[IndentingNewLine]", 
                 RowBox[{"FEPrivate`If", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"FEPrivate`SameQ", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"FrontEnd`CurrentValue", "[", 
                    RowBox[{
                    RowBox[{"FEPrivate`Self", "[", "]"}], ",", 
                    "Evaluatable"}], "]"}], ",", "\[IndentingNewLine]", 
                    "True"}], "\[IndentingNewLine]", "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#", "\[Equal]", "\"\<CodeSection\>\""}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                    "\[IndentingNewLine]", "Inherited"}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                  "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"CellFrameColor", "\[Rule]", "\[IndentingNewLine]", 
                 RowBox[{"FEPrivate`If", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"FEPrivate`SameQ", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"FrontEnd`CurrentValue", "[", 
                    RowBox[{
                    RowBox[{"FEPrivate`Self", "[", "]"}], ",", 
                    "Evaluatable"}], "]"}], ",", "\[IndentingNewLine]", 
                    "True"}], "\[IndentingNewLine]", "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"GrayLevel", "[", ".95", "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#", "\[Equal]", "\"\<CodeSection\>\""}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"GrayLevel", "[", ".8", "]"}], ",", 
                    "\[IndentingNewLine]", "Inherited"}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                  "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"StyleSheetValue", "[", 
               RowBox[{"#", ",", "CellEventActions"}], "]"}]}], 
             "\[IndentingNewLine]", "}"}]}]}]}]}]}], "\[IndentingNewLine]", 
       "]"}], "&"}], "/@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<CodeChapter\>\"", ",", "\"\<CodeSection\>\"", ",", 
       "\[IndentingNewLine]", "\"\<CodeSection\>\"", ",", 
       "\"\<CodeSubsection\>\"", ",", "\[IndentingNewLine]", 
       "\"\<CodeSubsubsection\>\"", ",", "\"\<CodeSubsubsubsection\>\"", ",", 
       "\[IndentingNewLine]", "\"\<Text\>\""}], "\[IndentingNewLine]", 
      "}"}]}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.703736917276146*^9, 3.703737089238969*^9}, {
   3.7037419912383213`*^9, 3.703742020423052*^9}, {3.703742411392068*^9, 
   3.703742413120737*^9}, {3.703742917078529*^9, 3.7037429182128353`*^9}, {
   3.703743929808996*^9, 3.703743937726211*^9}, {3.703743972708601*^9, 
   3.703744004349695*^9}, {3.703744059697982*^9, 3.703744060010633*^9}, {
   3.7037441097902393`*^9, 3.7037441342774363`*^9}, {3.7037441731879177`*^9, 
   3.703744196224221*^9}, {3.703746513052899*^9, 3.7037465143382053`*^9}, {
   3.703746940539653*^9, 3.703746940754431*^9}, {3.703747197961206*^9, 
   3.703747199216054*^9}, {3.703747361538211*^9, 3.703747576098709*^9}, {
   3.703748032101754*^9, 3.7037480436323833`*^9}, {3.7037481974504223`*^9, 
   3.7037482182083063`*^9}, {3.703748464561307*^9, 3.703748525532406*^9}, {
   3.7037485653473597`*^9, 3.703748574839395*^9}, {3.703748607285345*^9, 
   3.703748611084371*^9}, {3.703749067817411*^9, 3.703749152449209*^9}, {
   3.7037492271444607`*^9, 3.7037492892059517`*^9}, {3.703749328581574*^9, 
   3.7037493846971416`*^9}, {3.703751972180211*^9, 3.703751972874411*^9}, {
   3.703760911770759*^9, 3.703760935814859*^9}, {3.70376108422173*^9, 
   3.703761201989459*^9}, 3.72697196645347*^9, {3.731430065231534*^9, 
   3.731430078716885*^9}},ExpressionUUID->"c07fe1cd-fa1d-431e-ab43-\
02cc11dc5c64"]
}, Closed]],

Cell[CellGroupData[{

Cell["Style Key Mapping", "Subsubsection",
 CellChangeTimes->{{3.731430110617981*^9, 
  3.7314301133685093`*^9}},ExpressionUUID->"50b06d76-0354-4962-8974-\
0229f47c79db"],

Cell[BoxData[
 RowBox[{"<<", "BTools`All`"}]], "Input",
 CellChangeTimes->{{3.731430164077712*^9, 3.731430166152071*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"23fba148-6814-4e9a-bf4b-6431785479ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"codeSections", "=", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<CodeChapter\>\"", ",", "\"\<CodeSection\>\"", ",", 
     "\"\<CodeSubsection\>\"", ",", "\[IndentingNewLine]", 
     "\"\<CodeSubsubsection\>\"", ",", "\"\<CodeSubsubsubsection\>\"", ",", 
     "\[IndentingNewLine]", "\"\<CodeSubsubsubsubsection\>\""}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.73143021000318*^9, 3.731430213768955*^9}, {
   3.731430812735969*^9, 3.731430818797453*^9}, 3.731431009599165*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"b286a49f-005c-4468-94a9-7a503263d51e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"StyleSheetEdit", "[", 
      RowBox[{"#", ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"StyleKeyMapping", "\[Rule]", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#2", "=!=", "None"}], ",", " ", 
             RowBox[{"\"\<Tab\>\"", "\[Rule]", "#2"}], ",", " ", "Nothing"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#3", "=!=", "None"}], ",", " ", 
             RowBox[{"\"\<Backspace\>\"", "\[Rule]", "#3"}], ",", " ", 
             "Nothing"}], "]"}]}], "\[IndentingNewLine]", " ", "}"}]}], 
        "\[IndentingNewLine]", "}"}]}], "]"}], "&"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"codeSections", ",", "\[IndentingNewLine]", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"Rest", "@", "codeSections"}], ",", " ", "None"}], "]"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Most", "@", "codeSections"}], ",", " ", "None"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.731430124296628*^9, 3.73143025251306*^9}, {
  3.731430824591393*^9, 3.731430828719112*^9}, {3.731430949625338*^9, 
  3.731430951068665*^9}, {3.7314309835737257`*^9, 3.7314310150270443`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"31880f7a-b3a4-4d49-a960-bcb1081fbaee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Standard", "Subsection",
 CellChangeTimes->{{3.701991960018416*^9, 
  3.701991961355*^9}},ExpressionUUID->"bce24076-dd81-4b02-b6cb-ceb00cb0fd3a"],

Cell[StyleData["Section"],
 WholeCellGroupOpener->True,
 MenuCommandKey->"1",ExpressionUUID->"a365b0a8-6701-4b30-8e93-2213c7766f65"],

Cell[StyleData["Subsection"],
 ShowGroupOpener->True,
 MenuCommandKey->"2",ExpressionUUID->"ab8b1d5a-8bea-4ef0-9cee-80e1835484e6"],

Cell[StyleData["Subsubsection"],
 ShowGroupOpener->True,
 MenuCommandKey->"3",
 FontWeight->Plain,ExpressionUUID->"3b7301ac-ee34-4d39-a42e-08a27aa2ee39"],

Cell[StyleData["Code"],
 ShowGroupOpener->False,
 MenuCommandKey->None,
 FontFamily->"Source Sans Pro",
 FontWeight->"Plain",ExpressionUUID->"8c2918dd-dcd9-4389-b82f-0fa6ff6bba6a"],

Cell[StyleData["CodeSeparator", StyleDefinitions -> StyleData["Input"]],
 Editable->False,
 CellFrame->{{0, 0}, {0, 1}},
 ShowCellBracket->Automatic,
 ShowGroupOpener->False,
 CellBracketOptions->{"OverlapContent"->True},
 Deployed->True,
 Evaluatable->False,
 CellGroupingRules->"InputGrouping",
 CellFrameMargins->{{0, 0}, {-6, -5}},
 CellFrameColor->GrayLevel[0.8],
 CellSize->{1, 1},
 DefaultFormatType->DefaultTextFormatType,
 FontFamily->"Source Sans Pro",
 FontWeight->"Plain",
 Background->GrayLevel[
  0.95],ExpressionUUID->"89f0f5f2-5de9-4ef4-b365-901008cd6182"],

Cell[StyleData["Text"],
 ExportAutoReplacements->{
  "\[LeftCeiling]" -> "(* ::Text:: *)\n(*", "\[RightFloor]" -> "*)\n"},
 CellFrame->FEPrivate`If[
   FEPrivate`SameQ[
    FrontEnd`CurrentValue[
     FEPrivate`Self[], Evaluatable], True], {{0, 0}, {0, 1}}, Inherited],
 CellEvaluationFunction->(With[{FrontEnd`EventTracking`ev$ = CurrentValue[
      EvaluationCell[], Evaluatable], FrontEnd`EventTracking`text$ = First[
      NotebookRead[
       EvaluationCell[]]]}, SelectionMove[
     EvaluationCell[], All, CellContents]; NotebookWrite[
     EvaluationNotebook[], 
     If[
      TrueQ[FrontEnd`EventTracking`ev$], 
      StringTrim[FrontEnd`EventTracking`text$, 
       Alternatives[
        StringExpression[StartOfString, 
         Alternatives[Whitespace, ""], "\[LeftCeiling]"], 
        StringExpression["\[RightFloor]", 
         Alternatives[Whitespace, ""], EndOfString]]], 
      StringJoin[
      "\[LeftCeiling]", FrontEnd`EventTracking`text$, "\[RightFloor]"]]]; 
   SetOptions[
     EvaluationCell[], {Evaluatable -> Not[FrontEnd`EventTracking`ev$]}]; 
   Null]& ),
 CellEventActions->{{"MenuCommand", "HandleShiftReturn"} :> 
   With[{FrontEnd`EventTracking`ev$ = CurrentValue[
        EvaluationCell[], Evaluatable], FrontEnd`EventTracking`text$ = First[
        NotebookRead[
         EvaluationCell[]]]}, SelectionMove[
       EvaluationCell[], All, CellContents]; NotebookWrite[
       EvaluationNotebook[], 
       If[
        TrueQ[FrontEnd`EventTracking`ev$], 
        StringTrim[FrontEnd`EventTracking`text$, 
         Alternatives[
          StringExpression[StartOfString, 
           Alternatives[Whitespace, ""], "\[LeftCeiling]"], 
          StringExpression["\[RightFloor]", 
           Alternatives[Whitespace, ""], EndOfString]]], 
        StringJoin[
        "\[LeftCeiling]", FrontEnd`EventTracking`text$, "\[RightFloor]"]]]; 
     SetOptions[
       EvaluationCell[], {Evaluatable -> Not[FrontEnd`EventTracking`ev$]}]; 
     Null], 
   ExportAutoReplacements -> {
    "\[LeftCeiling]" -> "(* ::Text:: *)\n(*", "\[RightFloor]" -> "*)\n"}, 
   CellFrame -> FEPrivate`If[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FEPrivate`Self[], Evaluatable], True], {{0, 0}, {0, 1}}, Inherited], 
   CellFrameColor -> FEPrivate`If[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FEPrivate`Self[], Evaluatable], True], 
     GrayLevel[0.95], Inherited]},
 ShowCellLabel->False,
 CellFrameColor->FEPrivate`If[
   FEPrivate`SameQ[
    FrontEnd`CurrentValue[
     FEPrivate`Self[], Evaluatable], True], 
   GrayLevel[0.95], 
   Inherited],ExpressionUUID->"9f442af2-60d7-4b47-8959-06f985d35690"],

Cell[StyleData["Input"],
 StyleKeyMapping->{
  "*" -> "Item", "]" -> 
   "CodeInput"},ExpressionUUID->"fc9fc4f7-37e7-4927-be64-eecf66bdff41"]
}, Closed]],

Cell[CellGroupData[{

Cell["Custom", "Subsection",
 CellChangeTimes->{{3.701991978530724*^9, 
  3.701991979410685*^9}},ExpressionUUID->"f8e27281-b2a7-4f27-a113-\
e22483e214be"],

Cell[StyleData["SectionSeparator", Style -> "Section"],
 CellFrame->{{0, 0}, {2, 2}},
 CellMargins->{{0, 0}, {Inherited, Inherited}},
 CellBracketOptions->{"Color"->None,
 "OverlapContent"->True},
 Deployed->True,
 CellGroupingRules->{"GroupTogetherGrouping", 0},
 CellFrameColor->RGBColor[0, 0, 0.4],
 MenuCommandKey->"8",
 FontOpacity->0,
 Background->GrayLevel[
  0.9],ExpressionUUID->"6d846264-367a-464a-ba31-06c778eefca0"],

Cell[CellGroupData[{

Cell[StyleData["InputChapter", StyleDefinitions -> StyleData["Input"]],
 CellFrame->{{0, 0}, {1, 1}},
 CellMargins->{{27, Inherited}, {10, 15}},
 StyleKeyMapping->{"Tab" -> "InputSection"},
 CellGroupingRules->{"SectionGrouping", 30},
 ShowCellLabel->False,
 CellFrameStyle->GrayLevel[0.95],
 DefaultNewCellStyle->"CodeInput",
 MenuSortingValue->
  1575,ExpressionUUID->"e13087ed-9b09-49a6-8190-f2429b70ff07"],

Cell[BoxData[
 RowBox[{"StyleSheetEdit", "[", 
  RowBox[{"\"\<InputChapter\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"StyleKeyMapping", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{"\"\<Tab\>\"", "\[Rule]", "\"\<InputSection\>\""}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.733804930657217*^9, 3.733804934869377*^9}, {
  3.7338049886958847`*^9, 3.7338050806028833`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"344fa490-99e9-414f-b1e6-9c959a9d5e01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[StyleData["InputSection", StyleDefinitions -> StyleData["Input"]],
 CellFrame->{{0, 0}, {1, 1}},
 CellMargins->{{50.3477, 3.}, {8., 12.}},
 StyleKeyMapping->{"Backspace" -> "InputChapter", "Tab" -> "InputSubsection"},
 
 CellGroupingRules->{"SectionGrouping", 40},
 ShowCellLabel->False,
 CellFrameStyle->GrayLevel[0.95],
 DefaultNewCellStyle->"CodeInput",
 MenuSortingValue->
  1590,ExpressionUUID->"c69eab36-eec5-4946-8740-df0081cefe12"],

Cell[BoxData[
 RowBox[{"StyleSheetEdit", "[", 
  RowBox[{"\"\<InputSection\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"StyleKeyMapping", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Backspace\>\"", "\[Rule]", "\"\<InputChapter\>\""}], ",", 
      " ", 
      RowBox[{"\"\<Tab\>\"", "\[Rule]", "\"\<InputSubsection\>\""}]}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.733804930657217*^9, 3.733804934869377*^9}, {
  3.7338049886958847`*^9, 3.733805068619689*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"e37f8d53-9f9c-43d3-8bac-9cd9ac1f70be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[StyleData["InputSubsection", StyleDefinitions -> StyleData["Input"]],
 CellFrame->{{0, 0}, {1, 1}},
 CellMargins->{{66, Inherited}, {8, 12}},
 StyleKeyMapping->{"Backspace" -> "InputSection"},
 CellGroupingRules->{"SectionGrouping", 50},
 ShowCellLabel->False,
 CellFrameStyle->GrayLevel[0.95],
 DefaultNewCellStyle->"CodeInput",
 MenuSortingValue->
  1590,ExpressionUUID->"781bbef2-3794-483a-ac59-619735ecae26"],

Cell[BoxData[
 RowBox[{"StyleSheetEdit", "[", 
  RowBox[{"\"\<InputSubsection\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"StyleKeyMapping", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{"\"\<Backspace\>\"", "\[Rule]", "\"\<InputSection\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.733804930657217*^9, 3.733804934869377*^9}, {
   3.7338049886958847`*^9, 3.733805085873375*^9}, 3.733805123928615*^9},
 CellLabel->"In[93]:=",ExpressionUUID->"027c73f7-afed-42f9-850c-fe692b02065a"],

Cell["<<BTools`All`", "Input",
 CellChangeTimes->{{3.733804930657217*^9, 3.733804934869377*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"4e4eea10-1251-45b1-8f69-a88a3571df0a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StyleSheetValue", "[", 
  RowBox[{"\"\<Subsubsection\>\"", ",", " ", "CellMargins"}], "]"}]], "Input",\

 CellChangeTimes->{{3.7338049241295357`*^9, 3.733804956389875*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"7be30689-44a8-4c76-ae7a-4e966f89ccf9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"66", ",", "Inherited"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "12"}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7338049534240017`*^9, 3.733804957057424*^9}},
 CellLabel->"Out[86]=",ExpressionUUID->"631ee9d6-0df5-4145-9246-5e5741488175"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
Saveable->True,
WindowSize->{798, 781},
WindowMargins->{{69, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"PrivateStylesheetFormatting.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 181, 2, 36, 124, 1, "StyleData", "StyleDefinitions", "",ExpressionUUID->"6fc2dbb7-58fc-4a42-bf89-89fae7bcdf9f"],
Cell[742, 24, 205, 3, 30, "Input",ExpressionUUID->"07809128-ebcb-4b55-b4b4-3da5baa01559"],
Cell[CellGroupData[{
Cell[972, 31, 157, 3, 49, "Section",ExpressionUUID->"f5bdd7f4-c32f-4375-866c-a347d3a8c5cd"],
Cell[CellGroupData[{
Cell[1154, 38, 158, 3, 45, "Subsection",ExpressionUUID->"12e5facd-3d52-4381-a19b-6712d90834c2"],
Cell[CellGroupData[{
Cell[1337, 45, 22858, 459, 36, 27, 0, "StyleData", "Notebook", "All",ExpressionUUID->"84f9e714-6bf1-41e1-aaae-3f34913cbef6"],
Cell[24198, 506, 477, 10, 73, "Input",ExpressionUUID->"ff96a9f3-0772-4546-8870-098ff8f6be19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24712, 521, 153, 2, 44, "Subsubsection",ExpressionUUID->"b2f31c29-ec5d-4bbc-93af-85d979fe9aa8"],
Cell[24868, 525, 758, 14, 157, "Input",ExpressionUUID->"2101fde1-b465-4f8a-97be-dcbc9520323c"],
Cell[25629, 541, 7515, 147, 1186, "Input",ExpressionUUID->"5e7189aa-7741-4123-927b-ee43268e1b8b"]
}, Closed]],
Cell[CellGroupData[{
Cell[33181, 693, 164, 3, 28, "Subsubsection",ExpressionUUID->"2f4377c3-5249-4bbc-92bf-a0acb7d421a7"],
Cell[33348, 698, 405, 8, 30, "Input",ExpressionUUID->"66fb33f2-d0e4-4fd9-8b09-991e1774cf4a"],
Cell[33756, 708, 186, 4, 30, "Input",ExpressionUUID->"f515ffcc-b8a5-4362-af09-cb8ebe8c75c7"],
Cell[33945, 714, 39726, 755, 6415, "Input",ExpressionUUID->"25848e96-07bd-4a72-a68a-eb538031c5c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73708, 1474, 163, 3, 44, "Subsubsection",ExpressionUUID->"1050a369-2baf-4f51-973d-719e9a07995a"],
Cell[73874, 1479, 4051, 80, 516, "Input",ExpressionUUID->"8cb393c6-cd15-4e6e-866c-ec6ed300dfb3"]
}, Closed]],
Cell[CellGroupData[{
Cell[77962, 1564, 157, 3, 28, "Subsubsection",ExpressionUUID->"5b932f2a-ff35-4c18-bf43-ca1da2187fb4"],
Cell[CellGroupData[{
Cell[78144, 1571, 5317, 114, 766, "Input",ExpressionUUID->"84e582f7-8ed4-4e9a-82a5-d49d892ef3d3"],
Cell[83464, 1687, 757, 14, 24, "Message",ExpressionUUID->"48b98768-134a-4492-8147-9765e8cc743d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[84270, 1707, 157, 3, 28, "Subsubsection",ExpressionUUID->"0f48b68c-4994-465f-bc9b-f9628e3c24af"],
Cell[84430, 1712, 1333, 26, 262, "Input",ExpressionUUID->"b4a18d8b-448a-4523-8092-723ba18be48f"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85812, 1744, 158, 3, 45, "Subsection",ExpressionUUID->"4f0deb81-c151-48cd-b66e-5d73e8cb5b87"],
Cell[85973, 1749, 259, 5, 30, "Input",ExpressionUUID->"0dda4f64-bd5a-4174-ac9f-5b80e569dae6"],
Cell[CellGroupData[{
Cell[86257, 1758, 163, 4, 26, 29, 0, "StyleData", "DockedCell", "All",ExpressionUUID->"c917417a-9be6-4709-a6b5-8ec3b317ed42"],
Cell[86423, 1764, 739, 18, 115, "Input",ExpressionUUID->"09338fb0-6dde-4761-aadf-921da5af6ed7"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87223, 1789, 154, 3, 49, "Section",ExpressionUUID->"9e2bc904-61b9-47d8-8cc4-bbd725298a64"],
Cell[CellGroupData[{
Cell[87402, 1796, 164, 3, 45, "Subsection",ExpressionUUID->"13fcdcc4-02d4-498e-af70-fcff1d85ba53"],
Cell[87569, 1801, 102, 1, 113, 24, 0, "StyleData", "Title", "All",ExpressionUUID->"1089f6d0-4ac5-472f-8344-7ad5494d9451",
 MenuCommandKey->None],
Cell[87674, 1804, 104, 1, 84, 26, 0, "StyleData", "Chapter", "All",ExpressionUUID->"7e1e1b26-edb2-487f-ba14-ab6ea39e883f",
 MenuCommandKey->None],
Cell[87781, 1807, 107, 1, 63, 29, 0, "StyleData", "Subchapter", "All",ExpressionUUID->"996f8c91-cc89-40d2-951c-16a32f5b32aa",
 MenuCommandKey->None]
}, Closed]],
Cell[CellGroupData[{
Cell[87925, 1813, 152, 3, 29, "Subsection",ExpressionUUID->"3fc6d099-96f2-43e4-b025-e699521cff38"],
Cell[88080, 1818, 2978, 70, 84, 72, 0, "StyleData", "CodeChapter", "All",ExpressionUUID->"9e9a7ae6-a4a9-486a-a5ad-cf6ecac3a47c",
 MenuSortingValue->1175,
 MenuCommandKey->None],
Cell[91061, 1890, 3525, 88, 68, 72, 0, "StyleData", "CodeSection", "All",ExpressionUUID->"18eae9d3-38b8-4cb1-83d4-619335d2ef9c",
 MenuSortingValue->1255,
 MenuCommandKey->"4"],
Cell[94589, 1980, 3061, 70, 49, 78, 0, "StyleData", "CodeSubsection", "All",ExpressionUUID->"0099bbb4-a799-4619-80c8-bc65cc030088",
 MenuSortingValue->1305,
 MenuCommandKey->"5"],
Cell[97653, 2052, 3104, 73, 48, 86, 1, "StyleData", "CodeSubsubsection", "All",ExpressionUUID->"4dac8274-e8b1-44bb-8361-732a61e94f68",
 MenuSortingValue->1105,
 MenuCommandKey->"6"],
Cell[100760, 2127, 3038, 71, 43, 92, 1, "StyleData", "CodeSubsubsubsection", "All",ExpressionUUID->"0b54436f-4873-49cd-b34b-b841c64c1f8b",
 MenuSortingValue->1355],
Cell[103801, 2200, 3014, 70, 42, 98, 1, "StyleData", "CodeSubsubsubsubsection", "All",ExpressionUUID->"c3772e5d-8ea2-4632-8317-3388696535ca",
 MenuSortingValue->1355],
Cell[106818, 2272, 2341, 62, 37, 88, 1, "StyleData", "CodeInput", "All",ExpressionUUID->"adc61932-d0a8-4d56-ab2c-969b0a7778f9",
 MenuSortingValue->1505,
 MenuCommandKey->"`"],
Cell[109162, 2336, 247, 6, 30, "Input",ExpressionUUID->"d72dffe4-dfaf-4537-a3cb-647cc7acbad2"],
Cell[109412, 2344, 658, 13, 115, "Input",ExpressionUUID->"362833d2-97fb-43df-ab23-ff56c6f631fe"],
Cell[110073, 2359, 923, 18, 115, "Input",ExpressionUUID->"3b5fdce2-d08b-4be4-80b3-385202785a45"],
Cell[110999, 2379, 1841, 41, 220, "Input",ExpressionUUID->"ed8c2179-cad1-4602-a08e-6e0b237805ca"],
Cell[CellGroupData[{
Cell[112865, 2424, 164, 3, 44, "Subsubsection",ExpressionUUID->"22c53c63-3e0f-4730-91bb-277216fb3781"],
Cell[113032, 2429, 13396, 263, 2194, "Input",ExpressionUUID->"c07fe1cd-fa1d-431e-ab43-02cc11dc5c64"]
}, Closed]],
Cell[CellGroupData[{
Cell[126465, 2697, 170, 3, 28, "Subsubsection",ExpressionUUID->"50b06d76-0354-4962-8974-0229f47c79db"],
Cell[126638, 2702, 199, 3, 30, "Input",ExpressionUUID->"23fba148-6814-4e9a-bf4b-6431785479ed"],
Cell[126840, 2707, 664, 12, 136, "Input",ExpressionUUID->"b286a49f-005c-4468-94a9-7a503263d51e"],
Cell[127507, 2721, 1696, 37, 325, "Input",ExpressionUUID->"31880f7a-b3a4-4d49-a960-bcb1081fbaee"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[129252, 2764, 151, 2, 45, "Subsection",ExpressionUUID->"bce24076-dd81-4b02-b6cb-ceb00cb0fd3a"],
Cell[129406, 2768, 132, 2, 82, 26, 0, "StyleData", "Section", "All",ExpressionUUID->"a365b0a8-6701-4b30-8e93-2213c7766f65",
 MenuCommandKey->"1"],
Cell[129541, 2772, 130, 2, 53, 29, 0, "StyleData", "Subsection", "All",ExpressionUUID->"ab8b1d5a-8bea-4ef0-9cee-80e1835484e6",
 MenuCommandKey->"2"],
Cell[129674, 2776, 153, 3, 52, 32, 0, "StyleData", "Subsubsection", "All",ExpressionUUID->"3b7301ac-ee34-4d39-a42e-08a27aa2ee39",
 MenuCommandKey->"3"],
Cell[129830, 2781, 180, 4, 58, 23, 0, "StyleData", "Code", "All",ExpressionUUID->"8c2918dd-dcd9-4389-b82f-0fa6ff6bba6a",
 MenuCommandKey->None],
Cell[130013, 2787, 572, 16, 32, 72, 0, "StyleData", "CodeSeparator", "All",ExpressionUUID->"89f0f5f2-5de9-4ef4-b365-901008cd6182"],
Cell[130588, 2805, 2640, 63, 50, 23, 0, "StyleData", "Text", "All",ExpressionUUID->"9f442af2-60d7-4b47-8959-06f985d35690"],
Cell[133231, 2870, 141, 3, 42, 24, 0, "StyleData", "Input", "All",ExpressionUUID->"fc9fc4f7-37e7-4927-be64-eecf66bdff41"]
}, Closed]],
Cell[CellGroupData[{
Cell[133409, 2878, 154, 3, 29, "Subsection",ExpressionUUID->"f8e27281-b2a7-4f27-a113-e22483e214be"],
Cell[133566, 2883, 427, 11, 56, 55, 0, "StyleData", "SectionSeparator", "All",ExpressionUUID->"6d846264-367a-464a-ba31-06c778eefca0",
 MenuCommandKey->"8"],
Cell[CellGroupData[{
Cell[134018, 2898, 409, 9, 72, 71, 0, "StyleData", "InputChapter", "All",ExpressionUUID->"e13087ed-9b09-49a6-8190-f2429b70ff07",
 MenuSortingValue->1575],
Cell[134430, 2909, 491, 9, 73, "Input",ExpressionUUID->"344fa490-99e9-414f-b1e6-9c959a9d5e01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134958, 2923, 444, 10, 67, 71, 0, "StyleData", "InputSection", "All",ExpressionUUID->"c69eab36-eec5-4946-8740-df0081cefe12",
 MenuSortingValue->1590],
Cell[135405, 2935, 597, 12, 73, "Input",ExpressionUUID->"e37f8d53-9f9c-43d3-8bac-9cd9ac1f70be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136039, 2952, 417, 9, 67, 74, 0, "StyleData", "InputSubsection", "All",ExpressionUUID->"781bbef2-3794-483a-ac59-619735ecae26",
 MenuSortingValue->1590],
Cell[136459, 2963, 524, 9, 73, "Input",ExpressionUUID->"027c73f7-afed-42f9-850c-fe692b02065a"],
Cell[136986, 2974, 175, 2, 30, "Input",ExpressionUUID->"4e4eea10-1251-45b1-8f69-a88a3571df0a"],
Cell[CellGroupData[{
Cell[137186, 2980, 275, 5, 30, "Input",ExpressionUUID->"7be30689-44a8-4c76-ae7a-4e966f89ccf9"],
Cell[137464, 2987, 356, 9, 34, "Output",ExpressionUUID->"631ee9d6-0df5-4145-9246-5e5741488175"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

