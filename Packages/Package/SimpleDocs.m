(* ::Package:: *)

(* Autogenerated Package *)

(* ::Section:: *)
(*SimpleDocs*)



(* ::Text:: *)
(*
	This implements the code behind the SimpleDocs stylesheet and palette, if I ever make a palette
*)



(* ::Subsubsection::Closed:: *)
(*Core Stuff*)



$NotebookTemplates::usage="";


(* ::Subsubsection::Closed:: *)
(*Notebooks*)



SetNotebookPaclet::usage="";
SaveNotebookToPaclet::usage="";
SaveNotebookMarkdown::usage="";


SymbolNotebookTemplate::usage="";


(* ::Subsubsection::Closed:: *)
(*GUI Elements*)



$InsertionMenu::usage="";
$HamburgerMenu::usage="";
$MetadataEditor::usage="";
$DockedCell::usage="";


(* ::Subsubsection::Closed:: *)
(*Paclets*)



(* ::Subsubsection::Closed:: *)
(*SiteBuilder*)



Begin["`Private`"];


PackageLoadPacletDependency["BTools",
  "Site"->"https://www.wolframcloud.com/objects/b3m2a1.paclets/PacletServer"
  ];
PackageLoadPacletDependency["Ems",
  "Site"->"https://www.wolframcloud.com/objects/b3m2a1.paclets/PacletServer"
  ];


PackageExtendContextPath@
  {
    "Ems`",
    "BTools`Developer`",
    "BTools`Web`",
    "BTools`Paclets`DocGen`"
    }


(* ::Subsection:: *)
(*Misc*)



(* ::Subsubsection::Closed:: *)
(*$MetadataMap*)



$MetadataMap=
  <|
    "Basics"->
      {
        "Context","Language","Paclet",
        "Type","Label","URI",
        "Summary","Status",
        "Title","Title Modifier","Window Title"
        },
    "Location"->
      {"Keywords","Synonyms","Index"},
    "History"->{"Built","History"},
    "Advanced"->{"Table Tags","Tutorial Collection Links","Special Keywords"}
    |>;


(* ::Subsection:: *)
(*Notebook*)



(* ::Subsubsection::Closed:: *)
(*getMeta*)



getMeta[nb_, k_]:=
  CurrentValue[nb, {TaggingRules, "Metadata", ToLowerCase@k}];


(* ::Subsubsection::Closed:: *)
(*setMeta*)



getMeta[nb_, k_, v_]:=
  CurrentValue[nb, {TaggingRules, "Metadata", ToLowerCase@k}]=v;


(* ::Subsubsection::Closed:: *)
(*getPacletDialog*)



getPacletDialog[]:=
  DialogInput[
    {pacletName=""},
    Pane[
      Panel[
        Column[
          {
            EventHandler[
              InputField[Dynamic@pacletName,
                String,
                BoxID->"pname",
                FieldHint->"paclet name"
                ],
              "ReturnKeyDown":>DialogReturn@pacletName
              ]
            }
          ],
        "Specify paclet:",
        ImageSize->{Automatic, 60},
        Alignment->Center
        ],
      ImageSize->{250, 100},
      Alignment->Center
      ],
    WindowFloating->True,
    NotebookDynamicExpression:>
      Refresh[
        FrontEndExecute@FrontEnd`MoveCursorToInputField[EvaluationNotebook[], "pname"], 
        None
        ]
    ];


(* ::Subsubsection::Closed:: *)
(*SetNotebookPaclet*)



SetNotebookPaclet[nb_]:=
  Module[
    {pacletLoc=getPacletDialog[]},
    If[StringLength@pacletLoc>0,
      CurrentValue[nb, {TaggingRules, "Paclet"}]=pacletLoc,
      pacletLoc=None
      ];
    pacletLoc
    ]


(* ::Subsubsection::Closed:: *)
(*SaveNotebookToPaclet*)



SaveNotebookToPaclet[nb_]:=
  Module[
    {
      pacletLoc,
      lang,
      pac,
      cont,
      type,
      baseDir,
      title,
      fname
      },
    pacletLoc=CurrentValue[nb, {TaggingRules, "Paclet"}];
    If[!StringQ[pacletLoc], 
      pacletLoc=SetNotebookPaclet[nb];
      ];
    If[StringQ@pacletLoc,
      pac=PacletFind[pacletLoc];
      If[Length@pac>0, pac=First@pac, pac=None];
      If[pac=!=None,
        cont=getMeta[nb, "context"];
        lang=getMeta[nb, "language"];
        If[cont===Automatic,
          setMeta[nb, "context", pacletLoc<>"`"]
          ];
        type=getMeta[nb, "type"];
        lang=Lookup[<|"en"->"English"|>, lang, $Language];
        baseDir=
          FileNameJoin@{
              pac["Location"], 
              "Documentation", 
              lang, 
              Lookup[<|"symbol"->"ReferencePages", "Symbol"->"ReferencePages"|>, type,
                If[StringQ@type,(ToUpperCase[StringTake[#, {1}]]<>StringDrop[#, 1])&@ type<>"s", "ReferencePages"]
                ]
              };
        Quiet@CreateDirectory[baseDir, CreateIntermediateDirectories->True];
        title=CurrentValue[nb, {TaggingRules, "Metadata", "label"}];
        If[!StringQ@title, title="Symbol"];
        fname=FileNameJoin@{baseDir,StringTrim[title, ".nb"]<>".nb" };
        Export[
          fname,
          Notebook[#[[1]],
            FilterRules[
              Flatten@{List@@#[[2;;]], ScreenStyleEnvironment->"Working"},
               Except[ScreenStyleEnvironment]
              ]
            ]&@NotebookGet[nb] 
          ]
        ]
      ]
    ]


(* ::Subsubsection::Closed:: *)
(*SaveNotebookMarkdown*)



(* ::Text:: *)
(*
	Should be better about how I handle defaults...
*)



SaveNotebookMarkdown[nb_]:=
  NotebookMarkdownSave[
    nb,
    "ExportOptions"->
      {
        "PacletLinkResolutionFunction"->
          Function[l, 
            "/"<>
            URLBuild[
              Join@@SplitBy[URLParse[l, "Path"],#=="ref"||#=="guide"||#=="tutorial"&][[-2;;]]
              ]<>".html"
            ]
        },
    "Title"->getMeta[nb, "title"],
    "Date"->
      Replace[getMeta[nb, "built"], 
        {
          s_String:>DateObject@ToExpression[s],
          l_List:>DateObject[l]
          }
        ],
    Sequence@@
      Flatten@{
          Replace[
            CurrentValue[nb, {TaggingRules, "Metadata"}],
            Except[_?OptionQ]:>{}
            ]
          }
    ]


(* ::Subsubsection::Closed:: *)
(*Templates*)



(* ::Subsubsubsection::Closed:: *)
(*$baseTemplates*)



$baseTemplates=
  <|
    "Divider"->Cell["", "PageBreak", PageBreakBelow->False, PageBreakAbove->False],
    "Footer"->Cell["Made with SimpleDocs", "Text", "Footer"],
    "Usage"->
      Cell@
        CellGroupData[
          {
            Cell[BoxData@RowBox[{"<FunctionName>","[",RowBox[{"arg1", ",",  "arg2", ",",  "..."}],"]"}], "Code", "UsageInput"],
            Cell["description", "Text", "UsageText"]
            }
          ],
    "Guide Line"->
      Cell[TextData@{ButtonBox["Function1",BaseStyle->"Link",ButtonData->"paclet:Pkg/ref/Function1"], " \[LongDash] ", "description"}, "Text"],
    "Details"->
      Cell@
        CellGroupData[
          {
            Cell["Details item", "Item", "DetailsItem"],
            Cell["Details subitem", "Subitem", "DetailsSubitem"]
            }
          ],
    "Example"->
      Cell@
        CellGroupData[
          {
            Cell["Description", "Text"],
            Cell[BoxData@RowBox[{"FunctionName","[",RowBox[{"arg1",",", "arg2", ",", "..."}],"]"}], "Code"],
            Cell[BoxData[RowBox[{"result"}]], "Output", GeneratedCell->True]
            }
          ],
    "Related Functions"->
      Cell@
        CellGroupData[
          {
            Cell["See Also", "Subsection", "SeeAlso"],
            Cell[
              TextData@
                {
                  ButtonBox["Function1",
                    BaseStyle->{"Link", "Input"},ButtonData->"paclet:Pkg/ref/Function1"]," | ",
                  ButtonBox["Function2",
                    BaseStyle->{"Link", "Input"},ButtonData->"paclet:Pkg/ref/Function2"]
                  },
               "Text"
              ]
            }
          ],
    "Related Guides"->
      Cell@
        CellGroupData[
          {
            Cell["Related Guides", "Subsection", "Related"],
            Cell[
              TextData@ButtonBox["Guide 1",BaseStyle->"Link",ButtonData->"paclet:Pkg/guide/Guide1"],
              "Item"
              ],
            Cell[
              TextData@ButtonBox["Guide 2",BaseStyle->"Link",ButtonData->"paclet:Pkg/guide/Guide2"],
              "Item"
              ]
            }
          ],
    "Related Links"->
      Cell@
        CellGroupData[
          {
            Cell["Related Links", "Subsection", "RelatedLinks"],
            Cell[
              TextData@
                ButtonBox[
                  "Link 1",
                  BaseStyle->"Hyperlink",
                  ButtonData->{URL["https://google.com"],
                      None},
                  ButtonNote->"Link 1"
                  ],
              "Item"
              ],
            Cell[
              TextData@
                ButtonBox[
                  "Link 2",
                  BaseStyle->"Hyperlink",
                  ButtonData->{URL["https://paclets.github.io/PacletServer"],
                      None},
                  ButtonNote->"Link 2"
                  ],
              "Item"
              ]
            }
          ]
    |>;


(* ::Subsubsubsection::Closed:: *)
(*$sectionTemplates*)



$sectionTemplates=
  <|
    "Usage Section":>
      Cell@
        CellGroupData[
          {
            Cell["", "Subsection", "UsageSection"],
            $baseTemplates["Usage"],
            Cell["", "UsageSectionFooter"]
            }
          ],
    "Details Section":>
      Cell@
        CellGroupData[
          {
            Cell["Details", "Subsection", "DetailsSection"],
            $baseTemplates["Details"]
            },
          Closed
          ],
    "Examples Section":>
      Cell@
        CellGroupData[
          {
            Cell["Examples", "Subsection", "ExamplesSection"],
            Cell@
              CellGroupData[{
                  Cell["Basic Examples", "Subsubsection", "ExamplesSubsection"],
                  $baseTemplates["Example"]
                  }]
            }
          ],
    "Related Section":>
      Cell@
        CellGroupData[
          {
            $baseTemplates["Related Functions"],
            $baseTemplates["Related Guides"],
            $baseTemplates["Related Links"]
            }
          ],
    "Guide Section":>
      Cell@
        CellGroupData[
          {
            $baseTemplates["Divider"],
            Cell["Description", "Text"],
            $baseTemplates["Guide Line"],
            $baseTemplates["Guide Line"]
            }
          ]
    |>;


(* ::Subsubsubsection::Closed:: *)
(*$metaCell*)



$metaCell=
  Cell[
    BoxData[
      RowBox[{
          RowBox[{"(*"," ",
              RowBox[{"Markdown"," ","metadata"}]," ","*)"}],"\[IndentingNewLine]",
          RowBox[{"<|","\[IndentingNewLine]",
              RowBox[{RowBox[{"\"Title\"","\[Rule]","Automatic"}],",","\[IndentingNewLine]",
                  RowBox[{"\"Date\"","\[RuleDelayed]","Now"}],",","\[IndentingNewLine]",
                  RowBox[{"\"ExportOptions\"","\[Rule]",
                      RowBox[{"{","\[IndentingNewLine]",
                          RowBox[{"(*",
                              RowBox[{"\"UseImageInput\"","\[Rule]","True"}],"*)"}],"\[IndentingNewLine]","}"
                          }]
                      }]
                  }],"\[IndentingNewLine]",
              "|>"
              }]
          }]
      ],
    "Metadata"];


(* ::Subsubsubsection::Closed:: *)
(*$primaryTemplates*)



$primaryTemplates=
  <|
    "Symbol"->
      Cell@
        CellGroupData[
          {
            $metaCell,
            Cell["FunctionName", "Section"],
            $sectionTemplates["Usage Section"],
            $sectionTemplates["Details Section"],
            $sectionTemplates["Examples Section"],
            $sectionTemplates["Related Section"],
            $baseTemplates["Footer"]
            }
          ],
    "Guide"->
      Cell@
        CellGroupData[
          {
            $metaCell,
            Cell["Guide Name", "Section"],
            Cell["guide descriptions", "Text"],
            $sectionTemplates["Guide Section"],
            Cell@
              CellGroupData[{
                  $baseTemplates["Divider"],
                  Cell["Related", "Subsection"],
                  $baseTemplates["Related Links"]
                  }],
            $baseTemplates["Footer"]
            }
          ],
    "Tutorial"->
      Cell@
        CellGroupData[
          {
            $metaCell,
            Cell["Tutorial Name", "Section"],
            $baseTemplates["Footer"]
            }
          ]
    |>;


(* ::Subsubsubsection::Closed:: *)
(*$NotebookTemplates*)



$NotebookTemplates=
  Join[
    $primaryTemplates,
    $sectionTemplates,
    $baseTemplates
    ]


(* ::Subsubsection::Closed:: *)
(*PopulateNotebookMetadata*)



PopulateNotebookMetadata[nb_]:=
  CurrentValue[nb, {TaggingRules, "Metadata"}]=
    DocMetadata[nb]


(* ::Subsubsection::Closed:: *)
(*ClearNotebookMetadata*)



ClearNotebookMetadata[nb_]:=
  CurrentValue[nb, {TaggingRules, "Metadata"}]=
      Thread[Map[ToLowerCase, Flatten@Values@$MetadataMap]->Automatic];


(* ::Subsubsection::Closed:: *)
(*SymbolNotebookTemplate*)



(* ::Subsubsubsection::Closed:: *)
(*formatUsageSection*)



formatUsageSection[u_]:=
  Cell@
    CellGroupData[Flatten@{
      Cell["", "UsageSection"],
      Replace[u,
        {a_, b_}:>
          {
            Cell[
              BoxData@FrontEndExecute@FrontEnd`ReparseBoxStructurePacket[a], 
              "Code", 
              "UsageInput"
              ],
            Cell[
              b, 
              "Text", 
              "UsageText"
              ]
              },
        1
        ],
      Cell["", "UsageSectionFooter"]
      }]


(* ::Subsubsubsection::Closed:: *)
(*formatDetailsSection*)



formatDetailsSection[deets_]:=
  Cell@
    CellGroupData[
      Prepend[Cell["Details", "Subsection", "DetailsSection"]]@
        Replace[
          deets,
          {
            grid:{__List}:>
              Sequence@@Replace[grid,
                {
                  {a_}:>Cell[a, "Subitem", "DetailsItem"],
                  {a_, b_}:>
                    Sequence@@{
                      Cell[a, "Subitem", "DetailsItem"],
                      Cell[b, "Subsubitem", "DetailsItem"]
                      }
                  },
                1
                ],
            line_:>Cell[StringRiffle[line], "Item", "DetailsItem"]
            },
          1
          ],
      Closed
      ]


(* ::Subsubsubsection::Closed:: *)
(*formatExamplesSection*)



formatExamplesSection[ex_, d_:0]:=
  Module[{dooooop=True},
    If[d==0,
      Cell@
        CellGroupData[
          Prepend[Cell["Examples", "Subsection", "ExamplesSection"]]@
          #
          ]&,
      Identity
      ]@Replace[
          ex,
          {
            (a_->b_List):>
              Cell@
                CellGroupData[
                  Prepend[
                    Cell[a, "S"<>StringRepeat["ubs", d+2]<>"ection", "ExamplesSection"]
                    ]@formatExamplesSection[b, d+1],
                  If[dooooop, dooooop=False;Open, Closed]
                  ],
            (a_->b_):>
              Cell@
                CellGroupData[{
                  Cell[a, "Text", "ExamplesText"],
                  Cell[
                    BoxData@FrontEndExecute@
                      FrontEnd`ReparseBoxStructurePacket@b, "Code", "ExamplesInput"]
                  }]
            },
          1
          ]
    ]


(* ::Subsubsubsection::Closed:: *)
(*formatRelatedSection*)



formatRelatedSection[names_]:=
  Cell@CellGroupData[
    {
      Cell@
        CellGroupData[
          {
            Cell["See Also", "Subsection", "SeeAlso"],
            Cell[
              TextData@
                Riffle[
                  ButtonBox[#,
                    BaseStyle->{"Link", "Input"},ButtonData->"paclet:ref/"<>#
                    ]&/@names,
                  " | "
                  ],
               "Text"
              ]
            }
          ],
      $baseTemplates["Related Guides"],
      $baseTemplates["Related Links"]
      }
    ]


(* ::Subsubsubsection::Closed:: *)
(*SymbolNotebookTemplate*)



SymbolNotebookTemplate[s_Symbol]:=
  Module[
    {
      bits,
      use,
      deets,
      exams,
      similar,
      keys,
      meta,
      nb
      },
    keys={"UsageMessages", "Details", "Examples", "RelatedFunctions"};
    bits=GenerateFunctionInfo[s, "Keys"->keys];
    {use, deets, exams, similar}=Lookup[bits, keys];
    use=
      StringSplit[use, 
        k:((StartOfLine|StartOfString)~~a:Except["["]..~~"["~~b__~~"]")/;
          StringCount[b, "["]==StringCount["b", "]"]:>
          k
        ];
    meta=AssociationThread[ToLowerCase@Flatten@Values@$MetadataMap, Automatic];
    meta["label"]=SymbolName[s];
    meta["context"]=Context[s];
    nb=
      Notebook[
        {
          $metaCell,
          Cell[meta["label"], "Section", "SymbolName"],
          formatUsageSection[use],
          formatDetailsSection[deets],
          formatExamplesSection[exams],
          formatRelatedSection[similar],
          $NotebookTemplates["Footer"]
          },
        {
          StyleDefinitions->FrontEnd`FileName[{"SimpleDocs"}, "SimpleDocs.nb"],
          TaggingRules->{"Metadata"->DocMetadata@Normal@meta},
          ScreenStyleEnvironment->"Editing"
          }
        ]
    ]


(* ::Subsection:: *)
(*GUI*)



(* ::Subsubsection::Closed:: *)
(*$MetadataEditor*)



(* ::Subsubsubsection::Closed:: *)
(*boxGrid*)



boxGrid=
Column[
KeyValueMap[
OpenerView[
{#, 
Grid[
Map[
{#,
With[{tag=ToLowerCase@StringDelete[#, " "]},
InputField[
Dynamic@CurrentValue[EvaluationNotebook[], {TaggingRules,"Metadata", tag}, Automatic]
]
]
}&,
#2
],
Alignment->Left
]
}
]&,
$MetadataMap
]
];


(* ::Subsubsubsection::Closed:: *)
(*showButton*)



hideButton[Hold[var_]]:=
  Button["",
    var=False, 
    ImageSize->{7, 7},
    FrameMargins->0,
    ImageMargins->0,
    Appearance->
      {
        "Default"->
          Image[ToExpression[FrontEndResource["FEBitmaps", "SquareMinusIconSmall"]]]
        }
    ]


showButton[Hold[var_]]:=
  Button["",
    var=True, 
    ImageSize->{7, 7},
    FrameMargins->0,
    ImageMargins->0,
    Appearance->
      {
        "Default"->
          Image[ToExpression[FrontEndResource["FEBitmaps", "SquarePlusIconSmall"]]]
        }
    ]


(* ::Subsubsubsection::Closed:: *)
(*$MetadataEditor*)



$MetadataEditor=
  DynamicModule[{show},
    With[
      {
        bg=boxGrid, 
        hb=hideButton[Hold@show], sb=showButton[Hold@show]
        },
      Dynamic@
        Grid[{
            {
              If[TrueQ@show, hb, sb], "Metadata",
              ButtonBar[
                {
                  "Populate":>
                    (
                      Needs["SimpleDocs`"];
                      PopulateNotebookMetadata[EvaluationNotebook[]]
                      ),
                  "Clear":>
                    (
                      Needs["SimpleDocs`"];
                      ClearNotebookMetadata[EvaluationNotebook[]]
                      )
                  },
                ImageSize->{100, Automatic}
                ]},
            {Null, If[TrueQ@show, bg], SpanFromLeft}
            },
          Alignment->Left
          ]
      ]
    ];


(* ::Subsubsection::Closed:: *)
(*$InsertionMenu*)



(* ::Subsubsubsection::Closed:: *)
(*$insertTemplate*)



$insertionMenuTemplates=
  Join@@
    Replace[
      Riffle[
        KeyValueMap[
          #:>NotebookWrite[InputNotebook[], #2]&,
          #
          ]&/@{
          $primaryTemplates,
          $sectionTemplates,
          $baseTemplates
          },
        Delimiter
        ],
      Delimiter->{Delimiter},
      1
      ]


(* ::Subsubsubsection::Closed:: *)
(*$InsertionMenu*)



$InsertionMenu=
ActionMenu[
Framed[
Grid[{{Item["Insert", ItemSize->{Scaled[.5], Automatic}, Alignment->{Left, Center}], Item[Style["\[DownPointer]", GrayLevel[.5]], ItemSize->{Scaled[.5], Scaled[.2]}, Alignment->{Right, Bottom}]}}],
ImageSize->{150, 50},
 RoundingRadius->5, FrameStyle->GrayLevel[.8],Background->White],
$insertionMenuTemplates,
ImageSize->{150, 50},
Appearance->None
];


(* ::Subsubsection::Closed:: *)
(*Menu*)



$HamburgerMenu=
  ActionMenu[
    Button["\[Congruent]",None,Appearance->None, ImageSize->{50, 35}],
    {
      "Save":>
        (
          Needs["SimpleDocs`"];
          SystemOpen@SaveNotebookToPaclet[EvaluationNotebook[]]
          ),
      Delimiter,
      "Set Paclet":>
        SetNotebookPaclet[EvaluationNotebook[]],
      Delimiter,
      "Save Markdown":>
        (
          Needs["SimpleDocs`"];
          SystemOpen@SaveNotebookMarkdown[EvaluationNotebook[]]
          )
      },
    Appearance->None,
    Method->"Queued"
    ];


(* ::Subsubsection::Closed:: *)
(*$DockedCell*)



$DockedCell=
  Grid[
    {
      {
        Item[
          Framed[$MetadataEditor, 
            ImageSize->{Scaled[1], {50, 1000}},
            RoundingRadius->5,Background->White,FrameStyle->GrayLevel[.8]
            ], 
          ItemSize->{Scaled[.7], Automatic}
          ], 
        Item[
          $InsertionMenu, 
          ItemSize->Scaled[.27],
          Alignment->{Left, Top}
          ],
        Item[$HamburgerMenu, ItemSize->Scaled[.03],Alignment->Right]
        }
      }, 
    Alignment->{Left, Top}, 
    BaseStyle->{FontFamily->"Helvetica", FontSize->14}
    ];


End[];



